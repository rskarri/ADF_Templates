{
	"name": "PL_PaymentDetails_DELTA_oData_SQL_copy1",
	"properties": {
		"activities": [
			{
				"name": "Loop Copy Activity",
				"type": "Until",
				"dependsOn": [
					{
						"activity": "startValuefomPipeline",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"userProperties": [],
				"typeProperties": {
					"expression": {
						"value": "@bool(variables('flag'))",
						"type": "Expression"
					},
					"activities": [
						{
							"name": "fromDate",
							"type": "SetVariable",
							"dependsOn": [],
							"userProperties": [],
							"typeProperties": {
								"variableName": "fromDate",
								"value": {
									"value": "@addToTime(variables('startValue'), 1, 'Day')",
									"type": "Expression"
								}
							}
						},
						{
							"name": "startValue",
							"type": "SetVariable",
							"dependsOn": [
								{
									"activity": "fromDate",
									"dependencyConditions": [
										"Succeeded"
									]
								}
							],
							"userProperties": [],
							"typeProperties": {
								"variableName": "startValue",
								"value": {
									"value": "@variables('fromDate')",
									"type": "Expression"
								}
							}
						},
						{
							"name": "removeZ",
							"type": "SetVariable",
							"dependsOn": [
								{
									"activity": "fromDate",
									"dependencyConditions": [
										"Succeeded"
									]
								}
							],
							"userProperties": [],
							"typeProperties": {
								"variableName": "fromDateRZ",
								"value": {
									"value": "@substring(variables('fromDate'), 0, 18)",
									"type": "Expression"
								}
							}
						},
						{
							"name": "check startDate endDate",
							"type": "IfCondition",
							"dependsOn": [
								{
									"activity": "removeZ",
									"dependencyConditions": [
										"Succeeded"
									]
								},
								{
									"activity": "startValue",
									"dependencyConditions": [
										"Succeeded"
									]
								}
							],
							"userProperties": [],
							"typeProperties": {
								"expression": {
									"value": "@if(equals(adddays(variables('startValue'),0),adddays(pipeline().parameters.P_EndDate,1)) , 'true', 'false')",
									"type": "Expression"
								},
								"ifFalseActivities": [
									{
										"name": "Copy PaymentDetails to SQL",
										"type": "Copy",
										"dependsOn": [],
										"policy": {
											"timeout": "7.00:00:00",
											"retry": 0,
											"retryIntervalInSeconds": 30,
											"secureOutput": false,
											"secureInput": false
										},
										"userProperties": [],
										"typeProperties": {
											"source": {
												"type": "ODataSource",
												"query": {
													"value": "$filter=Postingdate eq datetime'@{variables('fromDateRZ')}'",
													"type": "Expression"
												},
												"httpRequestTimeout": "00:30:00"
											},
											"sink": {
												"type": "AzureSqlSink",
												"writeBehavior": "insert",
												"disableMetricsCollection": false
											},
											"enableStaging": false,
											"enableSkipIncompatibleRow": true
										},
										"inputs": [
											{
												"referenceName": "DS_SAP_oData_PaymentDetails",
												"type": "DatasetReference"
											}
										],
										"outputs": [
											{
												"referenceName": "DS_AzureSqlTable_Dynmamic",
												"type": "DatasetReference",
												"parameters": {
													"SQLTableName": "PaymentDetails"
												}
											}
										]
									}
								],
								"ifTrueActivities": [
									{
										"name": "set Flag",
										"type": "SetVariable",
										"dependsOn": [],
										"userProperties": [],
										"typeProperties": {
											"variableName": "flag",
											"value": {
												"value": "@bool('true')",
												"type": "Expression"
											}
										}
									}
								]
							}
						}
					],
					"timeout": "0.00:00:00"
				}
			},
			{
				"name": "startValuefomPipeline",
				"type": "SetVariable",
				"dependsOn": [
					{
						"activity": "delete old records",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"userProperties": [],
				"typeProperties": {
					"variableName": "startValue",
					"value": {
						"value": "@subtractFromTime(pipeline().parameters.P_StartDate, 1, 'Day')",
						"type": "Expression"
					}
				}
			},
			{
				"name": "updateWaterMark",
				"type": "SqlServerStoredProcedure",
				"dependsOn": [
					{
						"activity": "New Watermark Time Value",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"policy": {
					"timeout": "7.00:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"storedProcedureName": "[dbo].[SP_update_watermark]",
					"storedProcedureParameters": {
						"TabName": {
							"value": "PaymentDetails",
							"type": "String"
						},
						"LastModifiedDate": {
							"value": {
								"value": "@activity('New Watermark Date Value').output.firstRow.maxDate",
								"type": "Expression"
							},
							"type": "Datetime"
						},
						"LastModifiedtime": {
							"value": {
								"value": "@activity('New Watermark Time Value').output.firstRow.maxTime",
								"type": "Expression"
							},
							"type": "Timespan"
						}
					}
				},
				"linkedServiceName": {
					"referenceName": "LS_AzureSqlDatabase",
					"type": "LinkedServiceReference"
				}
			},
			{
				"name": "New Watermark Date Value",
				"type": "Lookup",
				"dependsOn": [
					{
						"activity": "Loop Copy Activity",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"policy": {
					"timeout": "7.00:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"source": {
						"type": "AzureSqlSource",
						"sqlReaderQuery": {
							"value": "select MAX(Postingdate ) as maxDate FROM [dbo].[PaymentDetails]",
							"type": "Expression"
						},
						"queryTimeout": "02:00:00",
						"partitionOption": "None"
					},
					"dataset": {
						"referenceName": "DS_AzureSqlTable",
						"type": "DatasetReference"
					}
				}
			},
			{
				"name": "New Watermark Time Value",
				"type": "Lookup",
				"dependsOn": [
					{
						"activity": "New Watermark Date Value",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"policy": {
					"timeout": "7.00:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"source": {
						"type": "AzureSqlSource",
						"sqlReaderQuery": {
							"value": "select MAX(Postingdate) as maxTime FROM [dbo].[PaymentDetails] where Postingdate= ( select MAX(Postingdate ) FROM [dbo].[PaymentDetails])",
							"type": "Expression"
						},
						"queryTimeout": "02:00:00",
						"partitionOption": "None"
					},
					"dataset": {
						"referenceName": "DS_AzureSqlTable",
						"type": "DatasetReference"
					}
				}
			},
			{
				"name": "StartDate",
				"type": "SetVariable",
				"dependsOn": [],
				"userProperties": [],
				"typeProperties": {
					"variableName": "d_startdate",
					"value": {
						"value": "@substring(pipeline().parameters.P_StartDate,0,18)",
						"type": "Expression"
					}
				}
			},
			{
				"name": "Enddate",
				"type": "SetVariable",
				"dependsOn": [
					{
						"activity": "StartDate",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"userProperties": [],
				"typeProperties": {
					"variableName": "d_enddate",
					"value": {
						"value": "@substring(pipeline().parameters.P_EndDate,0,18)",
						"type": "Expression"
					}
				}
			},
			{
				"name": "delete old records",
				"type": "SqlServerStoredProcedure",
				"dependsOn": [
					{
						"activity": "Enddate",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"policy": {
					"timeout": "7.00:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"storedProcedureName": "[dbo].[SP_DeleteTable_DateRange]",
					"storedProcedureParameters": {
						"D_StartDate": {
							"value": {
								"value": "@variables('d_startdate')",
								"type": "Expression"
							},
							"type": "String"
						},
						"D_EndDate": {
							"value": {
								"value": "@variables('d_enddate')",
								"type": "Expression"
							},
							"type": "String"
						},
						"TableName": {
							"value": "PaymentDetails",
							"type": "String"
						},
						"D_ColName": {
							"value": "Postingdate",
							"type": "String"
						}
					}
				},
				"linkedServiceName": {
					"referenceName": "LS_AzureSqlDatabase",
					"type": "LinkedServiceReference"
				}
			}
		],
		"parameters": {
			"P_StartDate": {
				"type": "string",
				"defaultValue": "2019-11-01T00:00:00Z"
			},
			"P_EndDate": {
				"type": "string",
				"defaultValue": "2021-07-25T00:00:00Z"
			}
		},
		"variables": {
			"flag": {
				"type": "Boolean",
				"defaultValue": false
			},
			"startValue": {
				"type": "String"
			},
			"fromDate": {
				"type": "String"
			},
			"fromDateRZ": {
				"type": "String"
			},
			"d_startdate": {
				"type": "String"
			},
			"d_enddate": {
				"type": "String"
			}
		},
		"folder": {
			"name": "QA/PaymentDetails"
		},
		"annotations": [],
		"lastPublishTime": "2021-07-28T11:02:07Z"
	},
	"type": "Microsoft.DataFactory/factories/pipelines"
}