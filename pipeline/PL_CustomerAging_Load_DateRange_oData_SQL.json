{
	"name": "PL_CustomerAging_Load_DateRange_oData_SQL",
	"properties": {
		"activities": [
			{
				"name": "updateWaterMark",
				"type": "SqlServerStoredProcedure",
				"dependsOn": [
					{
						"activity": "New Watermark Date Value",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"policy": {
					"timeout": "7.00:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"storedProcedureName": "[dbo].[SP_update_watermark]",
					"storedProcedureParameters": {
						"TabName": {
							"value": {
								"value": "@variables('SQL_Table')",
								"type": "Expression"
							},
							"type": "String"
						},
						"LastModifiedDate": {
							"value": {
								"value": "@activity('New Watermark Date Value').output.firstRow.maxDate",
								"type": "Expression"
							},
							"type": "Datetime"
						},
						"LastModifiedtime": {
							"value": "00:00:00",
							"type": "Timespan"
						}
					}
				},
				"linkedServiceName": {
					"referenceName": "LS_AzureSqlDatabase",
					"type": "LinkedServiceReference"
				}
			},
			{
				"name": "New Watermark Date Value",
				"type": "Lookup",
				"dependsOn": [
					{
						"activity": "Copy customerAging to SQL",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"policy": {
					"timeout": "7.00:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"source": {
						"type": "AzureSqlSource",
						"sqlReaderQuery": {
							"value": "select MAX(Asondate ) as maxDate FROM [dbo].[CustomerAging]",
							"type": "Expression"
						},
						"queryTimeout": "02:00:00",
						"partitionOption": "None"
					},
					"dataset": {
						"referenceName": "DS_AzureSqlTable",
						"type": "DatasetReference"
					}
				}
			},
			{
				"name": "StartDate",
				"type": "SetVariable",
				"dependsOn": [],
				"userProperties": [],
				"typeProperties": {
					"variableName": "d_startdate",
					"value": {
						"value": "@substring(pipeline().parameters.P_TillDate,0,18)",
						"type": "Expression"
					}
				}
			},
			{
				"name": "delete old records",
				"type": "SqlServerStoredProcedure",
				"dependsOn": [
					{
						"activity": "StartDate",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"policy": {
					"timeout": "7.00:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"storedProcedureName": "[dbo].[SP_DeleteTable_DateRange]",
					"storedProcedureParameters": {
						"D_StartDate": {
							"value": {
								"value": "@variables('d_startdate')",
								"type": "Expression"
							},
							"type": "String"
						},
						"D_EndDate": {
							"value": {
								"value": "@variables('d_startdate')",
								"type": "Expression"
							},
							"type": "String"
						},
						"TableName": {
							"value": {
								"value": "@variables('SQL_Table')",
								"type": "Expression"
							},
							"type": "String"
						},
						"D_ColName": {
							"value": "Asondate",
							"type": "String"
						}
					}
				},
				"linkedServiceName": {
					"referenceName": "LS_AzureSqlDatabase",
					"type": "LinkedServiceReference"
				}
			},
			{
				"name": "Copy customerAging to SQL",
				"type": "Copy",
				"dependsOn": [
					{
						"activity": "delete old records",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"policy": {
					"timeout": "7.00:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"source": {
						"type": "ODataSource",
						"httpRequestTimeout": "00:30:00"
					},
					"sink": {
						"type": "AzureSqlSink",
						"writeBehavior": "insert",
						"disableMetricsCollection": false
					},
					"enableStaging": false,
					"enableSkipIncompatibleRow": false,
					"translator": {
						"type": "TabularTranslator",
						"mappings": [
							{
								"source": {
									"name": "Customer",
									"type": "String"
								},
								"sink": {
									"name": "Customer",
									"type": "String"
								}
							},
							{
								"source": {
									"name": "CreditControlArea",
									"type": "String"
								},
								"sink": {
									"name": "Creditcontrolarea",
									"type": "String"
								}
							},
							{
								"source": {
									"name": "AsOnDate",
									"type": "DateTime"
								},
								"sink": {
									"name": "Asondate",
									"type": "DateTime"
								}
							},
							{
								"source": {
									"name": "Mnth_yr",
									"type": "String"
								},
								"sink": {
									"name": "MnthYr",
									"type": "String"
								}
							},
							{
								"source": {
									"name": "CustomerName",
									"type": "String"
								},
								"sink": {
									"name": "Customername",
									"type": "String"
								}
							},
							{
								"source": {
									"name": "NOTNODAmt",
									"type": "Decimal"
								},
								"sink": {
									"name": "Notnodamt",
									"type": "Decimal"
								}
							},
							{
								"source": {
									"name": "NearOfDueAmt",
									"type": "Decimal"
								},
								"sink": {
									"name": "Nearofdueamt",
									"type": "Decimal"
								}
							},
							{
								"source": {
									"name": "Zero_30Amt",
									"type": "Decimal"
								},
								"sink": {
									"name": "Zero30amt",
									"type": "Decimal"
								}
							},
							{
								"source": {
									"name": "ThirtyOne_60Amt",
									"type": "Decimal"
								},
								"sink": {
									"name": "Thirtyone60amt",
									"type": "Decimal"
								}
							},
							{
								"source": {
									"name": "SixtyOne_90Amt",
									"type": "Decimal"
								},
								"sink": {
									"name": "Sixtyone90amt",
									"type": "Decimal"
								}
							},
							{
								"source": {
									"name": "NintyOne_120Amt",
									"type": "Decimal"
								},
								"sink": {
									"name": "Nintyone120amt",
									"type": "Decimal"
								}
							},
							{
								"source": {
									"name": "OneTwentyOne_180Amt",
									"type": "Decimal"
								},
								"sink": {
									"name": "Onetwentyone180amt",
									"type": "Decimal"
								}
							},
							{
								"source": {
									"name": "OneEightyOne_270Amt",
									"type": "Decimal"
								},
								"sink": {
									"name": "Oneeightyone270amt",
									"type": "Decimal"
								}
							},
							{
								"source": {
									"name": "TwoSeventyOne_365Amt",
									"type": "Decimal"
								},
								"sink": {
									"name": "Twoseventyone365amt",
									"type": "Decimal"
								}
							},
							{
								"source": {
									"name": "ThreeSixtySix_730Amt",
									"type": "Decimal"
								},
								"sink": {
									"name": "Threesixtysix730amt",
									"type": "Decimal"
								}
							},
							{
								"source": {
									"name": "SevenThirtyOne_9999Amt",
									"type": "Decimal"
								},
								"sink": {
									"name": "Seventhirtyone9999amt",
									"type": "Decimal"
								}
							},
							{
								"source": {
									"name": "TotalDue",
									"type": "Decimal"
								},
								"sink": {
									"name": "Totaldue",
									"type": "Decimal"
								}
							},
							{
								"source": {
									"name": "Unj_Crd",
									"type": "Decimal"
								},
								"sink": {
									"name": "UnjCrd",
									"type": "Decimal"
								}
							},
							{
								"source": {
									"name": "NetOS",
									"type": "Decimal"
								},
								"sink": {
									"name": "Netos",
									"type": "Decimal"
								}
							},
							{
								"source": {
									"name": "SecurityDeposit",
									"type": "Decimal"
								},
								"sink": {
									"name": "Securitydeposit",
									"type": "Decimal"
								}
							},
							{
								"source": {
									"name": "TradeDeposit",
									"type": "Decimal"
								},
								"sink": {
									"name": "Tradedeposit",
									"type": "Decimal"
								}
							},
							{
								"source": {
									"name": "CreditLimit",
									"type": "Decimal"
								},
								"sink": {
									"name": "Creditlimit",
									"type": "Decimal"
								}
							},
							{
								"source": {
									"name": "Status",
									"type": "String"
								},
								"sink": {
									"name": "Status",
									"type": "String"
								}
							},
							{
								"source": {
									"name": "Location",
									"type": "String"
								},
								"sink": {
									"name": "Location",
									"type": "String"
								}
							}
						]
					}
				},
				"inputs": [
					{
						"referenceName": "DS_SAP_oData_Aging",
						"type": "DatasetReference",
						"parameters": {
							"D_AsoDate": {
								"value": "@pipeline().parameters.P_TillDate",
								"type": "Expression"
							}
						}
					}
				],
				"outputs": [
					{
						"referenceName": "DS_AzureSqlTable_Dynmamic",
						"type": "DatasetReference",
						"parameters": {
							"SQLTableName": {
								"value": "@variables('SQL_Table')",
								"type": "Expression"
							}
						}
					}
				]
			}
		],
		"parameters": {
			"P_TillDate": {
				"type": "string",
				"defaultValue": "2019-11-01T00:00:00Z"
			}
		},
		"variables": {
			"flag": {
				"type": "Boolean",
				"defaultValue": false
			},
			"startValue": {
				"type": "String"
			},
			"fromDate": {
				"type": "String"
			},
			"fromDateRZ": {
				"type": "String"
			},
			"d_startdate": {
				"type": "String"
			},
			"d_enddate": {
				"type": "String"
			},
			"SQL_Table": {
				"type": "String",
				"defaultValue": "CustomerAging"
			}
		},
		"folder": {
			"name": "QA/CstomerAging"
		},
		"annotations": [],
		"lastPublishTime": "2021-07-28T11:02:07Z"
	},
	"type": "Microsoft.DataFactory/factories/pipelines"
}