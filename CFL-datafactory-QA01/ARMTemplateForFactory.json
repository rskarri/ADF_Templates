{
	"$schema": "http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
	"contentVersion": "1.0.0.0",
	"parameters": {
		"factoryName": {
			"type": "string",
			"metadata": "Data Factory name",
			"defaultValue": "CFL-datafactory-QA01"
		},
		"LS_AzureDataLakeStorage_accountKey": {
			"type": "secureString",
			"metadata": "Secure string for 'accountKey' of 'LS_AzureDataLakeStorage'"
		},
		"LS_AzureSqlDatabase_connectionString": {
			"type": "secureString",
			"metadata": "Secure string for 'connectionString' of 'LS_AzureSqlDatabase'"
		},
		"LS_SAP_oData_InvoiceSales_password": {
			"type": "secureString",
			"metadata": "Secure string for 'password' of 'LS_SAP_oData_InvoiceSales'"
		},
		"LS_SAP_oData_PaymentDetails_password": {
			"type": "secureString",
			"metadata": "Secure string for 'password' of 'LS_SAP_oData_PaymentDetails'"
		},
		"LS_SapHana_connectionString": {
			"type": "secureString",
			"metadata": "Secure string for 'connectionString' of 'LS_SapHana'"
		},
		"LS_SapHana_QA_connectionString": {
			"type": "secureString",
			"metadata": "Secure string for 'connectionString' of 'LS_SapHana_QA'"
		},
		"OData_SAP_HANA_password": {
			"type": "secureString",
			"metadata": "Secure string for 'password' of 'OData_SAP_HANA'"
		},
		"oData_SAP_HANA_QA_password": {
			"type": "secureString",
			"metadata": "Secure string for 'password' of 'oData_SAP_HANA_QA'"
		},
		"LS_AzureDataLakeStorage_properties_typeProperties_url": {
			"type": "string",
			"defaultValue": "https://straccdatalakeqa.dfs.core.windows.net"
		},
		"LS_SAP_oData_InvoiceSales_properties_typeProperties_url": {
			"type": "string",
			"defaultValue": "http://172.26.2.228:8000/sap/opu/odata/sap/ZITRSDBILLCDS_SRV"
		},
		"LS_SAP_oData_InvoiceSales_properties_typeProperties_userName": {
			"type": "string",
			"defaultValue": "carbynetech"
		},
		"LS_SAP_oData_PaymentDetails_properties_typeProperties_url": {
			"type": "string",
			"defaultValue": "http://172.26.2.228:8000/sap/opu/odata/sap/ZFIREP1430CDS_SRV"
		},
		"LS_SAP_oData_PaymentDetails_properties_typeProperties_userName": {
			"type": "string",
			"defaultValue": "carbynetech"
		},
		"OData_SAP_HANA_properties_typeProperties_url": {
			"type": "string",
			"defaultValue": "http://172.26.150.72:8001/sap/opu/odata/sap/ZITRSDBILLCDS_SRV"
		},
		"OData_SAP_HANA_properties_typeProperties_userName": {
			"type": "string",
			"defaultValue": "Carbynetech"
		},
		"oData_SAP_HANA_QA_properties_typeProperties_url": {
			"type": "string",
			"defaultValue": "http://172.26.2.228:8000/sap/opu/odata/sap/ZITRSDBILLCDS_SRV"
		},
		"oData_SAP_HANA_QA_properties_typeProperties_userName": {
			"type": "string",
			"defaultValue": "carbynetech"
		}
	},
	"variables": {
		"factoryId": "[concat('Microsoft.DataFactory/factories/', parameters('factoryName'))]"
	},
	"resources": [
		{
			"name": "[concat(parameters('factoryName'), '/DEV_SAP_DL_SQL_Copy')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Copy data1",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "SapHanaSource",
								"query": "SELECT * FROM   SAPHANADB.ZSDBILLCDS",
								"partitionOption": "None"
							},
							"sink": {
								"type": "DelimitedTextSink",
								"storeSettings": {
									"type": "AzureBlobFSWriteSettings"
								},
								"formatSettings": {
									"type": "DelimitedTextWriteSettings",
									"quoteAllText": true,
									"fileExtension": ".txt"
								}
							},
							"enableStaging": false
						},
						"inputs": [
							{
								"referenceName": "DS_SapHanaTable_DEV",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "DS_Copy_DelimitedText_datalake",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					},
					{
						"name": "Copy data2",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "Copy data1",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "DelimitedTextSource",
								"storeSettings": {
									"type": "AzureBlobFSReadSettings",
									"recursive": true,
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings"
								}
							},
							"sink": {
								"type": "AzureSqlSink",
								"writeBehavior": "insert"
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "DS_Copy_DelimitedText_datalake",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "DS_AzureSqlTable",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					}
				],
				"variables": {
					"datentime": {
						"type": "String"
					}
				},
				"folder": {
					"name": "DEV"
				},
				"annotations": [],
				"lastPublishTime": "2021-07-22T02:41:38Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/DS_SapHanaTable_DEV')]",
				"[concat(variables('factoryId'), '/datasets/DS_Copy_DelimitedText_datalake')]",
				"[concat(variables('factoryId'), '/datasets/DS_AzureSqlTable')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/PL_InvoiceSales_DELTA_oData_SQL')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Set startDate",
						"type": "SetVariable",
						"dependsOn": [],
						"userProperties": [],
						"typeProperties": {
							"variableName": "StartDate",
							"value": {
								"value": "@concat(substring(getPastTime(1, 'Day'),0,10),'T00:00:00')",
								"type": "Expression"
							}
						}
					},
					{
						"name": "Set ZStartDate",
						"type": "SetVariable",
						"dependsOn": [
							{
								"activity": "Set startDate",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"variableName": "zStartDate",
							"value": {
								"value": "@substring(variables('StartDate'),0,18)",
								"type": "Expression"
							}
						}
					},
					{
						"name": "delete old records",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [
							{
								"activity": "Set ZStartDate",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[dbo].[SP_DeleteTable_DateRange]",
							"storedProcedureParameters": {
								"D_StartDate": {
									"value": {
										"value": "@variables('zStartDate')",
										"type": "Expression"
									},
									"type": "String"
								},
								"D_EndDate": {
									"value": {
										"value": "@variables('zStartDate')",
										"type": "Expression"
									},
									"type": "String"
								},
								"TableName": {
									"value": {
										"value": "@variables('SQL_Table')",
										"type": "Expression"
									},
									"type": "String"
								},
								"D_ColName": {
									"value": "Invoicecrdate",
									"type": "String"
								}
							}
						},
						"linkedServiceName": {
							"referenceName": "LS_AzureSqlDatabase",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "Copy InvoiceSales to SQL",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "delete old records",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "ODataSource",
								"query": {
									"value": "$filter=Invoicecrdate eq datetime'@{variables('zStartDate')}'",
									"type": "Expression"
								},
								"httpRequestTimeout": "00:30:00"
							},
							"sink": {
								"type": "AzureSqlSink",
								"writeBehavior": "insert",
								"disableMetricsCollection": false
							},
							"enableStaging": false,
							"enableSkipIncompatibleRow": true
						},
						"inputs": [
							{
								"referenceName": "DS_SAP_oData_InvoiceSales",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "DS_AzureSqlTable_Dynmamic",
								"type": "DatasetReference",
								"parameters": {
									"SQLTableName": {
										"value": "@variables('SQL_Table')",
										"type": "Expression"
									}
								}
							}
						]
					},
					{
						"name": "updateWaterMark",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [
							{
								"activity": "New Watermark Time Value",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[dbo].[SP_update_watermark]",
							"storedProcedureParameters": {
								"TabName": {
									"value": {
										"value": "@variables('SQL_Table')",
										"type": "Expression"
									},
									"type": "String"
								},
								"LastModifiedDate": {
									"value": {
										"value": "@activity('New Watermark Date Value').output.firstRow.maxDate",
										"type": "Expression"
									},
									"type": "Datetime"
								},
								"LastModifiedtime": {
									"value": {
										"value": "@activity('New Watermark Time Value').output.firstRow.maxTime",
										"type": "Expression"
									},
									"type": "Timespan"
								}
							}
						},
						"linkedServiceName": {
							"referenceName": "LS_AzureSqlDatabase",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "New Watermark Date Value",
						"type": "Lookup",
						"dependsOn": [
							{
								"activity": "Copy InvoiceSales to SQL",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderQuery": {
									"value": "select MAX(Invoicecrdate ) as maxDate FROM [dbo].[InvoiceSales]",
									"type": "Expression"
								},
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "DS_AzureSqlTable",
								"type": "DatasetReference",
								"parameters": {}
							}
						}
					},
					{
						"name": "New Watermark Time Value",
						"type": "Lookup",
						"dependsOn": [
							{
								"activity": "New Watermark Date Value",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderQuery": {
									"value": "select MAX(Invoicecrtime) as maxTime FROM [dbo].[InvoiceSales] where Invoicecrdate= ( select MAX(Invoicecrdate ) FROM [dbo].[InvoiceSales])",
									"type": "Expression"
								},
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "DS_AzureSqlTable",
								"type": "DatasetReference",
								"parameters": {}
							}
						}
					}
				],
				"variables": {
					"StartDate": {
						"type": "String"
					},
					"EndDate": {
						"type": "String"
					},
					"zStartDate": {
						"type": "String"
					},
					"SQL_Table": {
						"type": "String",
						"defaultValue": "InvoiceSales"
					},
					"flag": {
						"type": "Boolean",
						"defaultValue": false
					}
				},
				"folder": {
					"name": "QA/InvoiceSales"
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/LS_AzureSqlDatabase')]",
				"[concat(variables('factoryId'), '/datasets/DS_SAP_oData_InvoiceSales')]",
				"[concat(variables('factoryId'), '/datasets/DS_AzureSqlTable_Dynmamic')]",
				"[concat(variables('factoryId'), '/datasets/DS_AzureSqlTable')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/PL_InvoiceSales_Load_DateRange_oData_Datalake')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Copy PaymentDetails to SQL_copy1",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "ODataSource",
								"query": {
									"value": "$filter=Invoicecrdate eq datetime'2020-08-01T00:00:00'",
									"type": "Expression"
								},
								"httpRequestTimeout": "00:30:00"
							},
							"sink": {
								"type": "DelimitedTextSink",
								"storeSettings": {
									"type": "AzureBlobFSWriteSettings",
									"maxConcurrentConnections": 10
								},
								"formatSettings": {
									"type": "DelimitedTextWriteSettings",
									"quoteAllText": true,
									"fileExtension": ".txt"
								},
								"writeBehavior": "insert"
							},
							"enableStaging": false,
							"enableSkipIncompatibleRow": true
						},
						"inputs": [
							{
								"referenceName": "DS_SAP_oData_InvoiceSales",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "DS_Copy_DelimitedText_datalake",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					}
				],
				"parameters": {
					"P_StartDate": {
						"type": "string",
						"defaultValue": "2019-11-01T00:00:00Z"
					},
					"P_EndDate": {
						"type": "string",
						"defaultValue": "2021-07-25T00:00:00Z"
					}
				},
				"variables": {
					"flag": {
						"type": "Boolean",
						"defaultValue": false
					},
					"startValue": {
						"type": "String"
					},
					"fromDate": {
						"type": "String"
					},
					"fromDateRZ": {
						"type": "String"
					},
					"d_startdate": {
						"type": "String"
					},
					"d_enddate": {
						"type": "String"
					},
					"SQL_Table": {
						"type": "String",
						"defaultValue": "InvoiceSales"
					}
				},
				"folder": {
					"name": "QA/InvoiceSales"
				},
				"annotations": [],
				"lastPublishTime": "2021-07-28T11:02:07Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/DS_SAP_oData_InvoiceSales')]",
				"[concat(variables('factoryId'), '/datasets/DS_Copy_DelimitedText_datalake')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/PL_InvoiceSales_Load_DateRange_oData_SQL')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Loop Copy Activity",
						"type": "Until",
						"dependsOn": [
							{
								"activity": "startValuefomPipeline",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"expression": {
								"value": "@bool(variables('flag'))",
								"type": "Expression"
							},
							"activities": [
								{
									"name": "fromDate",
									"type": "SetVariable",
									"dependsOn": [],
									"userProperties": [],
									"typeProperties": {
										"variableName": "fromDate",
										"value": {
											"value": "@addToTime(variables('startValue'), 1, 'Day')",
											"type": "Expression"
										}
									}
								},
								{
									"name": "startValue",
									"type": "SetVariable",
									"dependsOn": [
										{
											"activity": "fromDate",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"userProperties": [],
									"typeProperties": {
										"variableName": "startValue",
										"value": {
											"value": "@variables('fromDate')",
											"type": "Expression"
										}
									}
								},
								{
									"name": "removeZ",
									"type": "SetVariable",
									"dependsOn": [
										{
											"activity": "fromDate",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"userProperties": [],
									"typeProperties": {
										"variableName": "fromDateRZ",
										"value": {
											"value": "@substring(variables('fromDate'), 0, 18)",
											"type": "Expression"
										}
									}
								},
								{
									"name": "check startDate endDate",
									"type": "IfCondition",
									"dependsOn": [
										{
											"activity": "removeZ",
											"dependencyConditions": [
												"Succeeded"
											]
										},
										{
											"activity": "startValue",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"userProperties": [],
									"typeProperties": {
										"expression": {
											"value": "@if(equals(adddays(variables('startValue'),0),adddays(pipeline().parameters.P_EndDate,1)) , 'true', 'false')",
											"type": "Expression"
										},
										"ifFalseActivities": [
											{
												"name": "Copy PaymentDetails to SQL",
												"type": "Copy",
												"dependsOn": [],
												"policy": {
													"timeout": "7.00:00:00",
													"retry": 0,
													"retryIntervalInSeconds": 30,
													"secureOutput": false,
													"secureInput": false
												},
												"userProperties": [],
												"typeProperties": {
													"source": {
														"type": "ODataSource",
														"query": {
															"value": "$filter=Invoicecrdate eq datetime'@{variables('fromDateRZ')}'",
															"type": "Expression"
														},
														"httpRequestTimeout": "00:30:00"
													},
													"sink": {
														"type": "AzureSqlSink",
														"writeBehavior": "insert",
														"disableMetricsCollection": false
													},
													"enableStaging": false,
													"enableSkipIncompatibleRow": true
												},
												"inputs": [
													{
														"referenceName": "DS_SAP_oData_InvoiceSales",
														"type": "DatasetReference",
														"parameters": {}
													}
												],
												"outputs": [
													{
														"referenceName": "DS_AzureSqlTable_Dynmamic",
														"type": "DatasetReference",
														"parameters": {
															"SQLTableName": {
																"value": "@variables('SQL_Table')",
																"type": "Expression"
															}
														}
													}
												]
											}
										],
										"ifTrueActivities": [
											{
												"name": "set Flag",
												"type": "SetVariable",
												"dependsOn": [],
												"userProperties": [],
												"typeProperties": {
													"variableName": "flag",
													"value": {
														"value": "@bool('true')",
														"type": "Expression"
													}
												}
											}
										]
									}
								}
							],
							"timeout": "0.00:00:00"
						}
					},
					{
						"name": "startValuefomPipeline",
						"type": "SetVariable",
						"dependsOn": [
							{
								"activity": "delete old records",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"variableName": "startValue",
							"value": {
								"value": "@subtractFromTime(pipeline().parameters.P_StartDate, 1, 'Day')",
								"type": "Expression"
							}
						}
					},
					{
						"name": "updateWaterMark",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [
							{
								"activity": "New Watermark Time Value",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[dbo].[SP_update_watermark]",
							"storedProcedureParameters": {
								"TabName": {
									"value": {
										"value": "@variables('SQL_Table')",
										"type": "Expression"
									},
									"type": "String"
								},
								"LastModifiedDate": {
									"value": {
										"value": "@activity('New Watermark Date Value').output.firstRow.maxDate",
										"type": "Expression"
									},
									"type": "Datetime"
								},
								"LastModifiedtime": {
									"value": {
										"value": "@activity('New Watermark Time Value').output.firstRow.maxTime",
										"type": "Expression"
									},
									"type": "Timespan"
								}
							}
						},
						"linkedServiceName": {
							"referenceName": "LS_AzureSqlDatabase",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "New Watermark Date Value",
						"type": "Lookup",
						"dependsOn": [
							{
								"activity": "Loop Copy Activity",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderQuery": {
									"value": "select MAX(Invoicecrdate ) as maxDate FROM [dbo].[InvoiceSales]",
									"type": "Expression"
								},
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "DS_AzureSqlTable",
								"type": "DatasetReference",
								"parameters": {}
							}
						}
					},
					{
						"name": "New Watermark Time Value",
						"type": "Lookup",
						"dependsOn": [
							{
								"activity": "New Watermark Date Value",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderQuery": {
									"value": "select MAX(Invoicecrtime) as maxTime FROM [dbo].[InvoiceSales] where Invoicecrdate= ( select MAX(Invoicecrdate ) FROM [dbo].[InvoiceSales])",
									"type": "Expression"
								},
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "DS_AzureSqlTable",
								"type": "DatasetReference",
								"parameters": {}
							}
						}
					},
					{
						"name": "StartDate",
						"type": "SetVariable",
						"dependsOn": [],
						"userProperties": [],
						"typeProperties": {
							"variableName": "d_startdate",
							"value": {
								"value": "@substring(pipeline().parameters.P_StartDate,0,18)",
								"type": "Expression"
							}
						}
					},
					{
						"name": "Enddate",
						"type": "SetVariable",
						"dependsOn": [
							{
								"activity": "StartDate",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"variableName": "d_enddate",
							"value": {
								"value": "@substring(pipeline().parameters.P_EndDate,0,18)",
								"type": "Expression"
							}
						}
					},
					{
						"name": "delete old records",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [
							{
								"activity": "Enddate",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[dbo].[SP_DeleteTable_DateRange]",
							"storedProcedureParameters": {
								"D_StartDate": {
									"value": {
										"value": "@variables('d_startdate')",
										"type": "Expression"
									},
									"type": "String"
								},
								"D_EndDate": {
									"value": {
										"value": "@variables('d_enddate')",
										"type": "Expression"
									},
									"type": "String"
								},
								"TableName": {
									"value": {
										"value": "@variables('SQL_Table')",
										"type": "Expression"
									},
									"type": "String"
								},
								"D_ColName": {
									"value": "Invoicecrdate",
									"type": "String"
								}
							}
						},
						"linkedServiceName": {
							"referenceName": "LS_AzureSqlDatabase",
							"type": "LinkedServiceReference"
						}
					}
				],
				"parameters": {
					"P_StartDate": {
						"type": "string",
						"defaultValue": "2019-11-01T00:00:00Z"
					},
					"P_EndDate": {
						"type": "string",
						"defaultValue": "2021-07-25T00:00:00Z"
					}
				},
				"variables": {
					"flag": {
						"type": "Boolean",
						"defaultValue": false
					},
					"startValue": {
						"type": "String"
					},
					"fromDate": {
						"type": "String"
					},
					"fromDateRZ": {
						"type": "String"
					},
					"d_startdate": {
						"type": "String"
					},
					"d_enddate": {
						"type": "String"
					},
					"SQL_Table": {
						"type": "String",
						"defaultValue": "InvoiceSales"
					}
				},
				"folder": {
					"name": "QA/InvoiceSales"
				},
				"annotations": [],
				"lastPublishTime": "2021-07-28T11:02:07Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/LS_AzureSqlDatabase')]",
				"[concat(variables('factoryId'), '/datasets/DS_AzureSqlTable')]",
				"[concat(variables('factoryId'), '/datasets/DS_SAP_oData_InvoiceSales')]",
				"[concat(variables('factoryId'), '/datasets/DS_AzureSqlTable_Dynmamic')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/PL_PaymentDetails_DELTA_oData_SQL')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Set startDate",
						"type": "SetVariable",
						"dependsOn": [],
						"userProperties": [],
						"typeProperties": {
							"variableName": "StartDate",
							"value": {
								"value": "@concat(substring(getPastTime(1, 'Day'),0,10),'T00:00:00')",
								"type": "Expression"
							}
						}
					},
					{
						"name": "Set ZStartDate",
						"type": "SetVariable",
						"dependsOn": [
							{
								"activity": "Set startDate",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"variableName": "zStartDate",
							"value": {
								"value": "@substring(variables('StartDate'),0,18)",
								"type": "Expression"
							}
						}
					},
					{
						"name": "delete old records",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [
							{
								"activity": "Set ZStartDate",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[dbo].[SP_DeleteTable_DateRange]",
							"storedProcedureParameters": {
								"D_StartDate": {
									"value": {
										"value": "@variables('zStartDate')",
										"type": "Expression"
									},
									"type": "String"
								},
								"D_EndDate": {
									"value": {
										"value": "@variables('zStartDate')",
										"type": "Expression"
									},
									"type": "String"
								},
								"TableName": {
									"value": {
										"value": "@variables('SQL_Table')",
										"type": "Expression"
									},
									"type": "String"
								},
								"D_ColName": {
									"value": "Postingdate",
									"type": "String"
								}
							}
						},
						"linkedServiceName": {
							"referenceName": "LS_AzureSqlDatabase",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "Copy PaymentDetails to SQL",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "delete old records",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "ODataSource",
								"query": {
									"value": "$filter=Postingdate eq datetime'@{variables('zStartDate')}'",
									"type": "Expression"
								},
								"httpRequestTimeout": "00:30:00"
							},
							"sink": {
								"type": "AzureSqlSink",
								"writeBehavior": "insert",
								"disableMetricsCollection": false
							},
							"enableStaging": false,
							"enableSkipIncompatibleRow": true
						},
						"inputs": [
							{
								"referenceName": "DS_SAP_oData_PaymentDetails",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "DS_AzureSqlTable_Dynmamic",
								"type": "DatasetReference",
								"parameters": {
									"SQLTableName": {
										"value": "@variables('SQL_Table')",
										"type": "Expression"
									}
								}
							}
						]
					},
					{
						"name": "updateWaterMark",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [
							{
								"activity": "New Watermark Date Value",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[dbo].[SP_update_watermark]",
							"storedProcedureParameters": {
								"TabName": {
									"value": {
										"value": "@variables('SQL_Table')",
										"type": "Expression"
									},
									"type": "String"
								},
								"LastModifiedDate": {
									"value": {
										"value": "@activity('New Watermark Date Value').output.firstRow.maxDate",
										"type": "Expression"
									},
									"type": "Datetime"
								},
								"LastModifiedtime": {
									"value": {
										"value": "00:00:00",
										"type": "Expression"
									},
									"type": "Timespan"
								}
							}
						},
						"linkedServiceName": {
							"referenceName": "LS_AzureSqlDatabase",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "New Watermark Date Value",
						"type": "Lookup",
						"dependsOn": [
							{
								"activity": "Copy PaymentDetails to SQL",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderQuery": {
									"value": "select MAX(Postingdate ) as maxDate FROM [dbo].[PaymentDetails]",
									"type": "Expression"
								},
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "DS_AzureSqlTable",
								"type": "DatasetReference",
								"parameters": {}
							}
						}
					}
				],
				"variables": {
					"StartDate": {
						"type": "String"
					},
					"EndDate": {
						"type": "String"
					},
					"zStartDate": {
						"type": "String"
					},
					"SQL_Table": {
						"type": "String",
						"defaultValue": "PaymentDetails"
					},
					"flag": {
						"type": "Boolean",
						"defaultValue": false
					}
				},
				"folder": {
					"name": "QA/PaymentDetails"
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/LS_AzureSqlDatabase')]",
				"[concat(variables('factoryId'), '/datasets/DS_SAP_oData_PaymentDetails')]",
				"[concat(variables('factoryId'), '/datasets/DS_AzureSqlTable_Dynmamic')]",
				"[concat(variables('factoryId'), '/datasets/DS_AzureSqlTable')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/PL_PaymentDetails_Load_DateRange_oData_SQL')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Loop Copy Activity",
						"type": "Until",
						"dependsOn": [
							{
								"activity": "startValuefomPipeline",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"expression": {
								"value": "@bool(variables('flag'))",
								"type": "Expression"
							},
							"activities": [
								{
									"name": "fromDate",
									"type": "SetVariable",
									"dependsOn": [],
									"userProperties": [],
									"typeProperties": {
										"variableName": "fromDate",
										"value": {
											"value": "@addToTime(variables('startValue'), 1, 'Day')",
											"type": "Expression"
										}
									}
								},
								{
									"name": "startValue",
									"type": "SetVariable",
									"dependsOn": [
										{
											"activity": "fromDate",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"userProperties": [],
									"typeProperties": {
										"variableName": "startValue",
										"value": {
											"value": "@variables('fromDate')",
											"type": "Expression"
										}
									}
								},
								{
									"name": "removeZ",
									"type": "SetVariable",
									"dependsOn": [
										{
											"activity": "fromDate",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"userProperties": [],
									"typeProperties": {
										"variableName": "fromDateRZ",
										"value": {
											"value": "@substring(variables('fromDate'), 0, 18)",
											"type": "Expression"
										}
									}
								},
								{
									"name": "check startDate endDate",
									"type": "IfCondition",
									"dependsOn": [
										{
											"activity": "removeZ",
											"dependencyConditions": [
												"Succeeded"
											]
										},
										{
											"activity": "startValue",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"userProperties": [],
									"typeProperties": {
										"expression": {
											"value": "@if(equals(adddays(variables('startValue'),0),adddays(pipeline().parameters.P_EndDate,1)) , 'true', 'false')",
											"type": "Expression"
										},
										"ifFalseActivities": [
											{
												"name": "Copy PaymentDetails to SQL",
												"type": "Copy",
												"dependsOn": [],
												"policy": {
													"timeout": "7.00:00:00",
													"retry": 0,
													"retryIntervalInSeconds": 30,
													"secureOutput": false,
													"secureInput": false
												},
												"userProperties": [],
												"typeProperties": {
													"source": {
														"type": "ODataSource",
														"query": {
															"value": "$filter=Postingdate eq datetime'@{variables('fromDateRZ')}'",
															"type": "Expression"
														},
														"httpRequestTimeout": "00:30:00"
													},
													"sink": {
														"type": "AzureSqlSink",
														"writeBehavior": "insert",
														"disableMetricsCollection": false
													},
													"enableStaging": false,
													"enableSkipIncompatibleRow": true
												},
												"inputs": [
													{
														"referenceName": "DS_SAP_oData_PaymentDetails",
														"type": "DatasetReference",
														"parameters": {}
													}
												],
												"outputs": [
													{
														"referenceName": "DS_AzureSqlTable_Dynmamic",
														"type": "DatasetReference",
														"parameters": {
															"SQLTableName": {
																"value": "@variables('SQL_Table')",
																"type": "Expression"
															}
														}
													}
												]
											}
										],
										"ifTrueActivities": [
											{
												"name": "set Flag",
												"type": "SetVariable",
												"dependsOn": [],
												"userProperties": [],
												"typeProperties": {
													"variableName": "flag",
													"value": {
														"value": "@bool('true')",
														"type": "Expression"
													}
												}
											}
										]
									}
								}
							],
							"timeout": "0.00:00:00"
						}
					},
					{
						"name": "startValuefomPipeline",
						"type": "SetVariable",
						"dependsOn": [
							{
								"activity": "delete old records",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"variableName": "startValue",
							"value": {
								"value": "@subtractFromTime(pipeline().parameters.P_StartDate, 1, 'Day')",
								"type": "Expression"
							}
						}
					},
					{
						"name": "updateWaterMark",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [
							{
								"activity": "New Watermark Time Value",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[dbo].[SP_update_watermark]",
							"storedProcedureParameters": {
								"TabName": {
									"value": {
										"value": "@variables('SQL_Table')",
										"type": "Expression"
									},
									"type": "String"
								},
								"LastModifiedDate": {
									"value": {
										"value": "@activity('New Watermark Date Value').output.firstRow.maxDate",
										"type": "Expression"
									},
									"type": "Datetime"
								},
								"LastModifiedtime": {
									"value": {
										"value": "@activity('New Watermark Time Value').output.firstRow.maxTime",
										"type": "Expression"
									},
									"type": "Timespan"
								}
							}
						},
						"linkedServiceName": {
							"referenceName": "LS_AzureSqlDatabase",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "New Watermark Date Value",
						"type": "Lookup",
						"dependsOn": [
							{
								"activity": "Loop Copy Activity",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderQuery": {
									"value": "select MAX(Postingdate ) as maxDate FROM [dbo].[PaymentDetails]",
									"type": "Expression"
								},
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "DS_AzureSqlTable",
								"type": "DatasetReference",
								"parameters": {}
							}
						}
					},
					{
						"name": "New Watermark Time Value",
						"type": "Lookup",
						"dependsOn": [
							{
								"activity": "New Watermark Date Value",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderQuery": {
									"value": "select MAX(Postingdate) as maxTime FROM [dbo].[PaymentDetails] where Postingdate= ( select MAX(Postingdate ) FROM [dbo].[PaymentDetails])",
									"type": "Expression"
								},
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "DS_AzureSqlTable",
								"type": "DatasetReference",
								"parameters": {}
							}
						}
					},
					{
						"name": "StartDate",
						"type": "SetVariable",
						"dependsOn": [],
						"userProperties": [],
						"typeProperties": {
							"variableName": "d_startdate",
							"value": {
								"value": "@substring(pipeline().parameters.P_StartDate,0,18)",
								"type": "Expression"
							}
						}
					},
					{
						"name": "Enddate",
						"type": "SetVariable",
						"dependsOn": [
							{
								"activity": "StartDate",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"variableName": "d_enddate",
							"value": {
								"value": "@substring(pipeline().parameters.P_EndDate,0,18)",
								"type": "Expression"
							}
						}
					},
					{
						"name": "delete old records",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [
							{
								"activity": "Enddate",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[dbo].[SP_DeleteTable_DateRange]",
							"storedProcedureParameters": {
								"D_StartDate": {
									"value": {
										"value": "@variables('d_startdate')",
										"type": "Expression"
									},
									"type": "String"
								},
								"D_EndDate": {
									"value": {
										"value": "@variables('d_enddate')",
										"type": "Expression"
									},
									"type": "String"
								},
								"TableName": {
									"value": {
										"value": "@variables('SQL_Table')",
										"type": "Expression"
									},
									"type": "String"
								},
								"D_ColName": {
									"value": "Postingdate",
									"type": "String"
								}
							}
						},
						"linkedServiceName": {
							"referenceName": "LS_AzureSqlDatabase",
							"type": "LinkedServiceReference"
						}
					}
				],
				"parameters": {
					"P_StartDate": {
						"type": "string",
						"defaultValue": "2019-11-01T00:00:00Z"
					},
					"P_EndDate": {
						"type": "string",
						"defaultValue": "2021-07-25T00:00:00Z"
					}
				},
				"variables": {
					"flag": {
						"type": "Boolean",
						"defaultValue": false
					},
					"startValue": {
						"type": "String"
					},
					"fromDate": {
						"type": "String"
					},
					"fromDateRZ": {
						"type": "String"
					},
					"d_startdate": {
						"type": "String"
					},
					"d_enddate": {
						"type": "String"
					},
					"SQL_Table": {
						"type": "String",
						"defaultValue": "PaymentDetails"
					}
				},
				"folder": {
					"name": "QA/PaymentDetails"
				},
				"annotations": [],
				"lastPublishTime": "2021-07-28T11:02:07Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/LS_AzureSqlDatabase')]",
				"[concat(variables('factoryId'), '/datasets/DS_AzureSqlTable')]",
				"[concat(variables('factoryId'), '/datasets/DS_SAP_oData_PaymentDetails')]",
				"[concat(variables('factoryId'), '/datasets/DS_AzureSqlTable_Dynmamic')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/PL_PaymentDetails_day_wise_Full_Load_oData_Qa_SQL')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Until1",
						"type": "Until",
						"dependsOn": [
							{
								"activity": "startValuefomPipeline",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"expression": {
								"value": "@bool(variables('flag'))",
								"type": "Expression"
							},
							"activities": [
								{
									"name": "fromDate",
									"type": "SetVariable",
									"dependsOn": [],
									"userProperties": [],
									"typeProperties": {
										"variableName": "fromDate",
										"value": {
											"value": "@addToTime(variables('startValue'), 1, 'Day')",
											"type": "Expression"
										}
									}
								},
								{
									"name": "startValue",
									"type": "SetVariable",
									"dependsOn": [
										{
											"activity": "fromDate",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"userProperties": [],
									"typeProperties": {
										"variableName": "startValue",
										"value": {
											"value": "@variables('fromDate')",
											"type": "Expression"
										}
									}
								},
								{
									"name": "removeZ",
									"type": "SetVariable",
									"dependsOn": [
										{
											"activity": "fromDate",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"userProperties": [],
									"typeProperties": {
										"variableName": "fromDateRZ",
										"value": {
											"value": "@substring(variables('fromDate'), 0, 18)",
											"type": "Expression"
										}
									}
								},
								{
									"name": "If Condition2",
									"type": "IfCondition",
									"dependsOn": [
										{
											"activity": "removeZ",
											"dependencyConditions": [
												"Succeeded"
											]
										},
										{
											"activity": "startValue",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"userProperties": [],
									"typeProperties": {
										"expression": {
											"value": "@if(equals(adddays(variables('startValue'),0),adddays(pipeline().parameters.P_EndDate,1)) , 'true', 'false')",
											"type": "Expression"
										},
										"ifFalseActivities": [
											{
												"name": "Copy SalesInvoice to SQL",
												"type": "Copy",
												"dependsOn": [],
												"policy": {
													"timeout": "7.00:00:00",
													"retry": 0,
													"retryIntervalInSeconds": 30,
													"secureOutput": false,
													"secureInput": false
												},
												"userProperties": [],
												"typeProperties": {
													"source": {
														"type": "ODataSource",
														"query": {
															"value": "$filter=Invoicecrdate eq datetime'@{variables('fromDateRZ')}'",
															"type": "Expression"
														},
														"httpRequestTimeout": "00:30:00"
													},
													"sink": {
														"type": "AzureSqlSink",
														"writeBehavior": "insert",
														"disableMetricsCollection": false
													},
													"enableStaging": false,
													"enableSkipIncompatibleRow": false,
													"translator": {
														"type": "TabularTranslator",
														"mappings": [
															{
																"source": {
																	"name": "Billingdoc",
																	"type": "String"
																},
																"sink": {
																	"name": "Billingdoc",
																	"type": "String"
																}
															},
															{
																"source": {
																	"name": "Item",
																	"type": "String"
																},
																"sink": {
																	"name": "Item",
																	"type": "String"
																}
															},
															{
																"source": {
																	"name": "Companycode",
																	"type": "String"
																},
																"sink": {
																	"name": "Companycode",
																	"type": "String"
																}
															},
															{
																"source": {
																	"name": "Salesorg",
																	"type": "String"
																},
																"sink": {
																	"name": "Salesorg",
																	"type": "String"
																}
															},
															{
																"source": {
																	"name": "Ewaybillno",
																	"type": "String"
																},
																"sink": {
																	"name": "Ewaybillno",
																	"type": "String"
																}
															},
															{
																"source": {
																	"name": "Exportexinvno",
																	"type": "String"
																},
																"sink": {
																	"name": "Exportexinvno",
																	"type": "String"
																}
															},
															{
																"source": {
																	"name": "Exportexinvdt",
																	"type": "DateTime"
																},
																"sink": {
																	"name": "Exportexinvdt",
																	"type": "DateTime"
																}
															},
															{
																"source": {
																	"name": "Accexchangerate",
																	"type": "Decimal"
																},
																"sink": {
																	"name": "Accexchangerate",
																	"type": "Decimal"
																}
															},
															{
																"source": {
																	"name": "Netvalue",
																	"type": "Decimal"
																},
																"sink": {
																	"name": "Netvalue",
																	"type": "Decimal"
																}
															},
															{
																"source": {
																	"name": "Doccurrency",
																	"type": "String"
																},
																"sink": {
																	"name": "Doccurrency",
																	"type": "String"
																}
															},
															{
																"source": {
																	"name": "Loccuramt",
																	"type": "Decimal"
																},
																"sink": {
																	"name": "Loccuramt",
																	"type": "Decimal"
																}
															},
															{
																"source": {
																	"name": "Gstin",
																	"type": "String"
																},
																"sink": {
																	"name": "Gstin",
																	"type": "String"
																}
															},
															{
																"source": {
																	"name": "Region",
																	"type": "String"
																},
																"sink": {
																	"name": "Region",
																	"type": "String"
																}
															},
															{
																"source": {
																	"name": "Regionname",
																	"type": "String"
																},
																"sink": {
																	"name": "Regionname",
																	"type": "String"
																}
															},
															{
																"source": {
																	"name": "Regiondlvplant",
																	"type": "String"
																},
																"sink": {
																	"name": "Regiondlvplant",
																	"type": "String"
																}
															},
															{
																"source": {
																	"name": "Customerrefdate",
																	"type": "DateTime"
																},
																"sink": {
																	"name": "Customerrefdate",
																	"type": "DateTime"
																}
															},
															{
																"source": {
																	"name": "Grossvalue",
																	"type": "Decimal"
																},
																"sink": {
																	"name": "Grossvalue",
																	"type": "Decimal"
																}
															},
															{
																"source": {
																	"name": "Invoicedate",
																	"type": "DateTime"
																},
																"sink": {
																	"name": "Invoicedate",
																	"type": "DateTime"
																}
															},
															{
																"source": {
																	"name": "Invoicetime",
																	"type": "TimeSpan"
																},
																"sink": {
																	"name": "Invoicetime",
																	"type": "TimeSpan"
																}
															},
															{
																"source": {
																	"name": "Changedon",
																	"type": "DateTime"
																},
																"sink": {
																	"name": "Changedon",
																	"type": "DateTime"
																}
															},
															{
																"source": {
																	"name": "Businessplace",
																	"type": "String"
																},
																"sink": {
																	"name": "Businessplace",
																	"type": "String"
																}
															},
															{
																"source": {
																	"name": "Plant",
																	"type": "String"
																},
																"sink": {
																	"name": "Plant",
																	"type": "String"
																}
															},
															{
																"source": {
																	"name": "Plantdesc",
																	"type": "String"
																},
																"sink": {
																	"name": "Plantdesc",
																	"type": "String"
																}
															},
															{
																"source": {
																	"name": "Billingtype",
																	"type": "String"
																},
																"sink": {
																	"name": "Billingtype",
																	"type": "String"
																}
															},
															{
																"source": {
																	"name": "Deldocno",
																	"type": "String"
																},
																"sink": {
																	"name": "Deldocno",
																	"type": "String"
																}
															},
															{
																"source": {
																	"name": "Deldocdate",
																	"type": "DateTime"
																},
																"sink": {
																	"name": "Deldocdate",
																	"type": "DateTime"
																}
															},
															{
																"source": {
																	"name": "Orderno",
																	"type": "String"
																},
																"sink": {
																	"name": "Orderno",
																	"type": "String"
																}
															},
															{
																"source": {
																	"name": "Orderqunatity",
																	"type": "Decimal"
																},
																"sink": {
																	"name": "Orderqunatity",
																	"type": "Decimal"
																}
															},
															{
																"source": {
																	"name": "Ordercreatedtime",
																	"type": "TimeSpan"
																},
																"sink": {
																	"name": "Ordercreatedtime",
																	"type": "TimeSpan"
																}
															},
															{
																"source": {
																	"name": "Requesteddeldate",
																	"type": "DateTime"
																},
																"sink": {
																	"name": "Requesteddeldate",
																	"type": "DateTime"
																}
															},
															{
																"source": {
																	"name": "Orderstatus",
																	"type": "String"
																},
																"sink": {
																	"name": "Orderstatus",
																	"type": "String"
																}
															},
															{
																"source": {
																	"name": "Salesordertype",
																	"type": "String"
																},
																"sink": {
																	"name": "Salesordertype",
																	"type": "String"
																}
															},
															{
																"source": {
																	"name": "Distchannel",
																	"type": "String"
																},
																"sink": {
																	"name": "Distchannel",
																	"type": "String"
																}
															},
															{
																"source": {
																	"name": "Division",
																	"type": "String"
																},
																"sink": {
																	"name": "Division",
																	"type": "String"
																}
															},
															{
																"source": {
																	"name": "Customer",
																	"type": "String"
																},
																"sink": {
																	"name": "Customer",
																	"type": "String"
																}
															},
															{
																"source": {
																	"name": "Customername",
																	"type": "String"
																},
																"sink": {
																	"name": "Customername",
																	"type": "String"
																}
															},
															{
																"source": {
																	"name": "Customercountry",
																	"type": "String"
																},
																"sink": {
																	"name": "Customercountry",
																	"type": "String"
																}
															},
															{
																"source": {
																	"name": "Customercountrydesc",
																	"type": "String"
																},
																"sink": {
																	"name": "Customercountrydesc",
																	"type": "String"
																}
															},
															{
																"source": {
																	"name": "Materialpricegrp",
																	"type": "String"
																},
																"sink": {
																	"name": "Materialpricegrp",
																	"type": "String"
																}
															},
															{
																"source": {
																	"name": "Materialpricegrpdesc",
																	"type": "String"
																},
																"sink": {
																	"name": "Materialpricegrpdesc",
																	"type": "String"
																}
															},
															{
																"source": {
																	"name": "Material",
																	"type": "String"
																},
																"sink": {
																	"name": "Material",
																	"type": "String"
																}
															},
															{
																"source": {
																	"name": "Materialdes",
																	"type": "String"
																},
																"sink": {
																	"name": "Materialdes",
																	"type": "String"
																}
															},
															{
																"source": {
																	"name": "Brand",
																	"type": "String"
																},
																"sink": {
																	"name": "Brand",
																	"type": "String"
																}
															},
															{
																"source": {
																	"name": "Brandname",
																	"type": "String"
																},
																"sink": {
																	"name": "Brandname",
																	"type": "String"
																}
															},
															{
																"source": {
																	"name": "Productgroup",
																	"type": "String"
																},
																"sink": {
																	"name": "Productgroup",
																	"type": "String"
																}
															},
															{
																"source": {
																	"name": "Productgrpdesc",
																	"type": "String"
																},
																"sink": {
																	"name": "Productgrpdesc",
																	"type": "String"
																}
															},
															{
																"source": {
																	"name": "Productheirarchy",
																	"type": "String"
																},
																"sink": {
																	"name": "Productheirarchy",
																	"type": "String"
																}
															},
															{
																"source": {
																	"name": "Productheirarchydes",
																	"type": "String"
																},
																"sink": {
																	"name": "Productheirarchydes",
																	"type": "String"
																}
															},
															{
																"source": {
																	"name": "Materialtype",
																	"type": "String"
																},
																"sink": {
																	"name": "Materialtype",
																	"type": "String"
																}
															},
															{
																"source": {
																	"name": "Materialgrp1",
																	"type": "String"
																},
																"sink": {
																	"name": "Materialgrp1",
																	"type": "String"
																}
															},
															{
																"source": {
																	"name": "Materialgrp1des",
																	"type": "String"
																},
																"sink": {
																	"name": "Materialgrp1des",
																	"type": "String"
																}
															},
															{
																"source": {
																	"name": "Materialgrp2",
																	"type": "String"
																},
																"sink": {
																	"name": "Materialgrp2",
																	"type": "String"
																}
															},
															{
																"source": {
																	"name": "Materialgrp2des",
																	"type": "String"
																},
																"sink": {
																	"name": "Materialgrp2des",
																	"type": "String"
																}
															},
															{
																"source": {
																	"name": "Materialgrp3",
																	"type": "String"
																},
																"sink": {
																	"name": "Materialgrp3",
																	"type": "String"
																}
															},
															{
																"source": {
																	"name": "Materialgrp3des",
																	"type": "String"
																},
																"sink": {
																	"name": "Materialgrp3des",
																	"type": "String"
																}
															},
															{
																"source": {
																	"name": "Materialgrp4",
																	"type": "String"
																},
																"sink": {
																	"name": "Materialgrp4",
																	"type": "String"
																}
															},
															{
																"source": {
																	"name": "Materialgrp4des",
																	"type": "String"
																},
																"sink": {
																	"name": "Materialgrp4des",
																	"type": "String"
																}
															},
															{
																"source": {
																	"name": "Materialgrp5",
																	"type": "String"
																},
																"sink": {
																	"name": "Materialgrp5",
																	"type": "String"
																}
															},
															{
																"source": {
																	"name": "Materialgrp5des",
																	"type": "String"
																},
																"sink": {
																	"name": "Materialgrp5des",
																	"type": "String"
																}
															},
															{
																"source": {
																	"name": "Pckmatgrp",
																	"type": "String"
																},
																"sink": {
																	"name": "Pckmatgrp",
																	"type": "String"
																}
															},
															{
																"source": {
																	"name": "Pckmatgrpdes",
																	"type": "String"
																},
																"sink": {
																	"name": "Pckmatgrpdes",
																	"type": "String"
																}
															},
															{
																"source": {
																	"name": "Salesgrp",
																	"type": "String"
																},
																"sink": {
																	"name": "Salesgrp",
																	"type": "String"
																}
															},
															{
																"source": {
																	"name": "Salesgrpdes",
																	"type": "String"
																},
																"sink": {
																	"name": "Salesgrpdes",
																	"type": "String"
																}
															},
															{
																"source": {
																	"name": "Salesofc",
																	"type": "String"
																},
																"sink": {
																	"name": "Salesofc",
																	"type": "String"
																}
															},
															{
																"source": {
																	"name": "Salesofcdes",
																	"type": "String"
																},
																"sink": {
																	"name": "Salesofcdes",
																	"type": "String"
																}
															},
															{
																"source": {
																	"name": "Salesdistrict",
																	"type": "String"
																},
																"sink": {
																	"name": "Salesdistrict",
																	"type": "String"
																}
															},
															{
																"source": {
																	"name": "Salesdistrictname",
																	"type": "String"
																},
																"sink": {
																	"name": "Salesdistrictname",
																	"type": "String"
																}
															},
															{
																"source": {
																	"name": "Orderpono",
																	"type": "String"
																},
																"sink": {
																	"name": "Orderpono",
																	"type": "String"
																}
															},
															{
																"source": {
																	"name": "City",
																	"type": "String"
																},
																"sink": {
																	"name": "City",
																	"type": "String"
																}
															},
															{
																"source": {
																	"name": "Crcontrolarea",
																	"type": "String"
																},
																"sink": {
																	"name": "Crcontrolarea",
																	"type": "String"
																}
															},
															{
																"source": {
																	"name": "Uom",
																	"type": "String"
																},
																"sink": {
																	"name": "Uom",
																	"type": "String"
																}
															},
															{
																"source": {
																	"name": "Billoflanding",
																	"type": "String"
																},
																"sink": {
																	"name": "Billoflanding",
																	"type": "String"
																}
															},
															{
																"source": {
																	"name": "Invoicecrdate",
																	"type": "DateTime"
																},
																"sink": {
																	"name": "Invoicecrdate",
																	"type": "DateTime"
																}
															},
															{
																"source": {
																	"name": "Invoicecrtime",
																	"type": "TimeSpan"
																},
																"sink": {
																	"name": "Invoicecrtime",
																	"type": "TimeSpan"
																}
															},
															{
																"source": {
																	"name": "Invoicecruser",
																	"type": "String"
																},
																"sink": {
																	"name": "Invoicecruser",
																	"type": "String"
																}
															},
															{
																"source": {
																	"name": "Invservrenddate",
																	"type": "DateTime"
																},
																"sink": {
																	"name": "Invservrenddate",
																	"type": "DateTime"
																}
															},
															{
																"source": {
																	"name": "Ordercreateddate",
																	"type": "DateTime"
																},
																"sink": {
																	"name": "Ordercreateddate",
																	"type": "DateTime"
																}
															},
															{
																"source": {
																	"name": "Ordercreateduser",
																	"type": "String"
																},
																"sink": {
																	"name": "Ordercreateduser",
																	"type": "String"
																}
															},
															{
																"source": {
																	"name": "Oderpricingdate",
																	"type": "DateTime"
																},
																"sink": {
																	"name": "Oderpricingdate",
																	"type": "DateTime"
																}
															},
															{
																"source": {
																	"name": "Delcrdate",
																	"type": "DateTime"
																},
																"sink": {
																	"name": "Delcrdate",
																	"type": "DateTime"
																}
															},
															{
																"source": {
																	"name": "Delcrname",
																	"type": "String"
																},
																"sink": {
																	"name": "Delcrname",
																	"type": "String"
																}
															},
															{
																"source": {
																	"name": "Delgoodsissue",
																	"type": "DateTime"
																},
																"sink": {
																	"name": "Delgoodsissue",
																	"type": "DateTime"
																}
															},
															{
																"source": {
																	"name": "Wholesaleid",
																	"type": "String"
																},
																"sink": {
																	"name": "Wholesaleid",
																	"type": "String"
																}
															},
															{
																"source": {
																	"name": "Retailid",
																	"type": "String"
																},
																"sink": {
																	"name": "Retailid",
																	"type": "String"
																}
															},
															{
																"source": {
																	"name": "Meansoftrans",
																	"type": "String"
																},
																"sink": {
																	"name": "Meansoftrans",
																	"type": "String"
																}
															},
															{
																"source": {
																	"name": "Meansoftransdesc",
																	"type": "String"
																},
																"sink": {
																	"name": "Meansoftransdesc",
																	"type": "String"
																}
															},
															{
																"source": {
																	"name": "Vehicleno",
																	"type": "String"
																},
																"sink": {
																	"name": "Vehicleno",
																	"type": "String"
																}
															},
															{
																"source": {
																	"name": "Plannedgi",
																	"type": "DateTime"
																},
																"sink": {
																	"name": "Plannedgi",
																	"type": "DateTime"
																}
															},
															{
																"source": {
																	"name": "Shiptoparty",
																	"type": "String"
																},
																"sink": {
																	"name": "Shiptoparty",
																	"type": "String"
																}
															},
															{
																"source": {
																	"name": "Shiptopartydesc",
																	"type": "String"
																},
																"sink": {
																	"name": "Shiptopartydesc",
																	"type": "String"
																}
															},
															{
																"source": {
																	"name": "Exchangerate",
																	"type": "Decimal"
																},
																"sink": {
																	"name": "Exchangerate",
																	"type": "Decimal"
																}
															},
															{
																"source": {
																	"name": "Orderreason",
																	"type": "String"
																},
																"sink": {
																	"name": "Orderreason",
																	"type": "String"
																}
															},
															{
																"source": {
																	"name": "Shippingcountrycode",
																	"type": "String"
																},
																"sink": {
																	"name": "Shippingcountrycode",
																	"type": "String"
																}
															},
															{
																"source": {
																	"name": "Shippingcountrydesc",
																	"type": "String"
																},
																"sink": {
																	"name": "Shippingcountrydesc",
																	"type": "String"
																}
															},
															{
																"source": {
																	"name": "Shippingcitycode",
																	"type": "String"
																},
																"sink": {
																	"name": "Shippingcitycode",
																	"type": "String"
																}
															},
															{
																"source": {
																	"name": "Countycode",
																	"type": "String"
																},
																"sink": {
																	"name": "Countycode",
																	"type": "String"
																}
															},
															{
																"source": {
																	"name": "Countydesc",
																	"type": "String"
																},
																"sink": {
																	"name": "Countydesc",
																	"type": "String"
																}
															},
															{
																"source": {
																	"name": "Citycode",
																	"type": "String"
																},
																"sink": {
																	"name": "Citycode",
																	"type": "String"
																}
															},
															{
																"source": {
																	"name": "Citydesc",
																	"type": "String"
																},
																"sink": {
																	"name": "Citydesc",
																	"type": "String"
																}
															},
															{
																"source": {
																	"name": "Customergrp",
																	"type": "String"
																},
																"sink": {
																	"name": "Customergrp",
																	"type": "String"
																}
															},
															{
																"source": {
																	"name": "Customergrpdesc",
																	"type": "String"
																},
																"sink": {
																	"name": "Customergrpdesc",
																	"type": "String"
																}
															},
															{
																"source": {
																	"name": "Custpricinggrp",
																	"type": "String"
																},
																"sink": {
																	"name": "Custpricinggrp",
																	"type": "String"
																}
															},
															{
																"source": {
																	"name": "Custpricinggrpdesc",
																	"type": "String"
																},
																"sink": {
																	"name": "Custpricinggrpdesc",
																	"type": "String"
																}
															},
															{
																"source": {
																	"name": "Reference",
																	"type": "String"
																},
																"sink": {
																	"name": "Reference",
																	"type": "String"
																}
															},
															{
																"source": {
																	"name": "Referencebillno",
																	"type": "String"
																},
																"sink": {
																	"name": "Referencebillno",
																	"type": "String"
																}
															},
															{
																"source": {
																	"name": "Billedqtyinsku",
																	"type": "Decimal"
																},
																"sink": {
																	"name": "Billedqtyinsku",
																	"type": "Decimal"
																}
															},
															{
																"source": {
																	"name": "Leagalstatus",
																	"type": "String"
																},
																"sink": {
																	"name": "Leagalstatus",
																	"type": "String"
																}
															},
															{
																"source": {
																	"name": "Stategsttax",
																	"type": "Decimal"
																},
																"sink": {
																	"name": "Stategsttax",
																	"type": "Decimal"
																}
															},
															{
																"source": {
																	"name": "Centralgsttax",
																	"type": "Decimal"
																},
																"sink": {
																	"name": "Centralgsttax",
																	"type": "Decimal"
																}
															},
															{
																"source": {
																	"name": "Integrgsttax",
																	"type": "Decimal"
																},
																"sink": {
																	"name": "Integrgsttax",
																	"type": "Decimal"
																}
															},
															{
																"source": {
																	"name": "Gstvalueininr",
																	"type": "Decimal"
																},
																"sink": {
																	"name": "Gstvalueininr",
																	"type": "Decimal"
																}
															},
															{
																"source": {
																	"name": "Netvalueinctaxininr",
																	"type": "Decimal"
																},
																"sink": {
																	"name": "Netvalueinctaxininr",
																	"type": "Decimal"
																}
															},
															{
																"source": {
																	"name": "Gstvalue",
																	"type": "Decimal"
																},
																"sink": {
																	"name": "Gstvalue",
																	"type": "Decimal"
																}
															},
															{
																"source": {
																	"name": "Netvalueinctax",
																	"type": "Decimal"
																},
																"sink": {
																	"name": "Netvalueinctax",
																	"type": "Decimal"
																}
															},
															{
																"source": {
																	"name": "Taxcode",
																	"type": "String"
																},
																"sink": {
																	"name": "Taxcode",
																	"type": "String"
																}
															},
															{
																"source": {
																	"name": "Batch",
																	"type": "String"
																},
																"sink": {
																	"name": "Batch",
																	"type": "String"
																}
															},
															{
																"source": {
																	"name": "Incoterms",
																	"type": "String"
																},
																"sink": {
																	"name": "Incoterms",
																	"type": "String"
																}
															},
															{
																"source": {
																	"name": "Incotermname",
																	"type": "String"
																},
																"sink": {
																	"name": "Incotermname",
																	"type": "String"
																}
															},
															{
																"source": {
																	"name": "Payterms",
																	"type": "String"
																},
																"sink": {
																	"name": "Payterms",
																	"type": "String"
																}
															},
															{
																"source": {
																	"name": "Paytremsdes",
																	"type": "String"
																},
																"sink": {
																	"name": "Paytremsdes",
																	"type": "String"
																}
															},
															{
																"source": {
																	"name": "Usageindicator",
																	"type": "String"
																},
																"sink": {
																	"name": "Usageindicator",
																	"type": "String"
																}
															},
															{
																"source": {
																	"name": "Pricelisttype",
																	"type": "String"
																},
																"sink": {
																	"name": "Pricelisttype",
																	"type": "String"
																}
															},
															{
																"source": {
																	"name": "Pricelistname",
																	"type": "String"
																},
																"sink": {
																	"name": "Pricelistname",
																	"type": "String"
																}
															},
															{
																"source": {
																	"name": "Taxtype",
																	"type": "String"
																},
																"sink": {
																	"name": "Taxtype",
																	"type": "String"
																}
															},
															{
																"source": {
																	"name": "Pricingdate",
																	"type": "DateTime"
																},
																"sink": {
																	"name": "Pricingdate",
																	"type": "DateTime"
																}
															},
															{
																"source": {
																	"name": "Locationcode",
																	"type": "String"
																},
																"sink": {
																	"name": "Locationcode",
																	"type": "String"
																}
															},
															{
																"source": {
																	"name": "Customerclass",
																	"type": "String"
																},
																"sink": {
																	"name": "Customerclass",
																	"type": "String"
																}
															},
															{
																"source": {
																	"name": "Difference",
																	"type": "Decimal"
																},
																"sink": {
																	"name": "Difference",
																	"type": "Decimal"
																}
															},
															{
																"source": {
																	"name": "Businessarea",
																	"type": "String"
																},
																"sink": {
																	"name": "Businessarea",
																	"type": "String"
																}
															},
															{
																"source": {
																	"name": "Profitcenter",
																	"type": "String"
																},
																"sink": {
																	"name": "Profitcenter",
																	"type": "String"
																}
															},
															{
																"source": {
																	"name": "Canceledstatus",
																	"type": "Boolean"
																},
																"sink": {
																	"name": "Canceledstatus",
																	"type": "Boolean"
																}
															},
															{
																"source": {
																	"name": "Taxcollectedsrc",
																	"type": "Decimal"
																},
																"sink": {
																	"name": "Taxcollectedsrc",
																	"type": "Decimal"
																}
															},
															{
																"source": {
																	"name": "Specialdiscount",
																	"type": "Decimal"
																},
																"sink": {
																	"name": "Specialdiscount",
																	"type": "Decimal"
																}
															},
															{
																"source": {
																	"name": "Quantitydiscount",
																	"type": "Decimal"
																},
																"sink": {
																	"name": "Quantitydiscount",
																	"type": "Decimal"
																}
															},
															{
																"source": {
																	"name": "Tradediscount",
																	"type": "Decimal"
																},
																"sink": {
																	"name": "Tradediscount",
																	"type": "Decimal"
																}
															},
															{
																"source": {
																	"name": "Basicprice",
																	"type": "Decimal"
																},
																"sink": {
																	"name": "Basicprice",
																	"type": "Decimal"
																}
															},
															{
																"source": {
																	"name": "Basicpricedif",
																	"type": "Decimal"
																},
																"sink": {
																	"name": "Basicpricedif",
																	"type": "Decimal"
																}
															},
															{
																"source": {
																	"name": "Mrpprice",
																	"type": "Decimal"
																},
																"sink": {
																	"name": "Mrpprice",
																	"type": "Decimal"
																}
															},
															{
																"source": {
																	"name": "Igsttax",
																	"type": "Decimal"
																},
																"sink": {
																	"name": "Igsttax",
																	"type": "Decimal"
																}
															},
															{
																"source": {
																	"name": "Freightdiscount",
																	"type": "Decimal"
																},
																"sink": {
																	"name": "Freightdiscount",
																	"type": "Decimal"
																}
															},
															{
																"source": {
																	"name": "Freightheader",
																	"type": "Decimal"
																},
																"sink": {
																	"name": "Freightheader",
																	"type": "Decimal"
																}
															},
															{
																"source": {
																	"name": "Freightdesc",
																	"type": "Decimal"
																},
																"sink": {
																	"name": "Freightdesc",
																	"type": "Decimal"
																}
															},
															{
																"source": {
																	"name": "Adhocdealermargin",
																	"type": "Decimal"
																},
																"sink": {
																	"name": "Adhocdealermargin",
																	"type": "Decimal"
																}
															},
															{
																"source": {
																	"name": "Dealermargin",
																	"type": "Decimal"
																},
																"sink": {
																	"name": "Dealermargin",
																	"type": "Decimal"
																}
															},
															{
																"source": {
																	"name": "Earlypayrebate",
																	"type": "Decimal"
																},
																"sink": {
																	"name": "Earlypayrebate",
																	"type": "Decimal"
																}
															},
															{
																"source": {
																	"name": "Cashdiscountmanual",
																	"type": "Decimal"
																},
																"sink": {
																	"name": "Cashdiscountmanual",
																	"type": "Decimal"
																}
															},
															{
																"source": {
																	"name": "Others",
																	"type": "Decimal"
																},
																"sink": {
																	"name": "Others",
																	"type": "Decimal"
																}
															},
															{
																"source": {
																	"name": "Exportcommission",
																	"type": "Decimal"
																},
																"sink": {
																	"name": "Exportcommission",
																	"type": "Decimal"
																}
															},
															{
																"source": {
																	"name": "Airfreight",
																	"type": "Decimal"
																},
																"sink": {
																	"name": "Airfreight",
																	"type": "Decimal"
																}
															},
															{
																"source": {
																	"name": "Pyqtydiscount",
																	"type": "Decimal"
																},
																"sink": {
																	"name": "Pyqtydiscount",
																	"type": "Decimal"
																}
															},
															{
																"source": {
																	"name": "Pyfreightdiscount",
																	"type": "Decimal"
																},
																"sink": {
																	"name": "Pyfreightdiscount",
																	"type": "Decimal"
																}
															},
															{
																"source": {
																	"name": "Pyearlypayrebate",
																	"type": "Decimal"
																},
																"sink": {
																	"name": "Pyearlypayrebate",
																	"type": "Decimal"
																}
															},
															{
																"source": {
																	"name": "Stategstininr",
																	"type": "Decimal"
																},
																"sink": {
																	"name": "Stategstininr",
																	"type": "Decimal"
																}
															},
															{
																"source": {
																	"name": "Integratedgstininr",
																	"type": "Decimal"
																},
																"sink": {
																	"name": "Integratedgstininr",
																	"type": "Decimal"
																}
															},
															{
																"source": {
																	"name": "Centralgstininr",
																	"type": "Decimal"
																},
																"sink": {
																	"name": "Centralgstininr",
																	"type": "Decimal"
																}
															},
															{
																"source": {
																	"name": "Stategst",
																	"type": "Decimal"
																},
																"sink": {
																	"name": "Stategst",
																	"type": "Decimal"
																}
															},
															{
																"source": {
																	"name": "Integratedgst",
																	"type": "Decimal"
																},
																"sink": {
																	"name": "Integratedgst",
																	"type": "Decimal"
																}
															},
															{
																"source": {
																	"name": "Centralgst",
																	"type": "Decimal"
																},
																"sink": {
																	"name": "Centralgst",
																	"type": "Decimal"
																}
															},
															{
																"source": {
																	"name": "Roundoff",
																	"type": "Decimal"
																},
																"sink": {
																	"name": "Roundoff",
																	"type": "Decimal"
																}
															},
															{
																"source": {
																	"name": "Sub",
																	"type": "Decimal"
																},
																"sink": {
																	"name": "Sub",
																	"type": "Decimal"
																}
															},
															{
																"source": {
																	"name": "Basicmaterial",
																	"type": "String"
																},
																"sink": {
																	"name": "Basicmaterial",
																	"type": "String"
																}
															},
															{
																"source": {
																	"name": "Duedate",
																	"type": "DateTime"
																},
																"sink": {
																	"name": "Duedate",
																	"type": "DateTime"
																}
															},
															{
																"source": {
																	"name": "Portcode",
																	"type": "String"
																},
																"sink": {
																	"name": "Portcode",
																	"type": "String"
																}
															},
															{
																"source": {
																	"name": "Shippingbillno",
																	"type": "String"
																},
																"sink": {
																	"name": "Shippingbillno",
																	"type": "String"
																}
															},
															{
																"source": {
																	"name": "Shippingbilldt",
																	"type": "DateTime"
																},
																"sink": {
																	"name": "Shippingbilldt",
																	"type": "DateTime"
																}
															},
															{
																"source": {
																	"name": "Fobvalue",
																	"type": "Decimal"
																},
																"sink": {
																	"name": "Fobvalue",
																	"type": "Decimal"
																}
															},
															{
																"source": {
																	"name": "Dispatchid",
																	"type": "String"
																},
																"sink": {
																	"name": "Dispatchid",
																	"type": "String"
																}
															},
															{
																"source": {
																	"name": "Dispatchdt",
																	"type": "DateTime"
																},
																"sink": {
																	"name": "Dispatchdt",
																	"type": "DateTime"
																}
															},
															{
																"source": {
																	"name": "Pdcchequeno",
																	"type": "String"
																},
																"sink": {
																	"name": "Pdcchequeno",
																	"type": "String"
																}
															},
															{
																"source": {
																	"name": "Pdcchequedate",
																	"type": "String"
																},
																"sink": {
																	"name": "Pdcchequedate",
																	"type": "String"
																}
															},
															{
																"source": {
																	"name": "Pdcchequeval",
																	"type": "Decimal"
																},
																"sink": {
																	"name": "Pdcchequeval",
																	"type": "Decimal"
																}
															},
															{
																"source": {
																	"name": "Pdcbankname",
																	"type": "String"
																},
																"sink": {
																	"name": "Pdcbankname",
																	"type": "String"
																}
															},
															{
																"source": {
																	"name": "Controlcode",
																	"type": "String"
																},
																"sink": {
																	"name": "Controlcode",
																	"type": "String"
																}
															},
															{
																"source": {
																	"name": "Einvirn",
																	"type": "String"
																},
																"sink": {
																	"name": "Einvirn",
																	"type": "String"
																}
															},
															{
																"source": {
																	"name": "Shippingcondition",
																	"type": "String"
																},
																"sink": {
																	"name": "Shippingcondition",
																	"type": "String"
																}
															},
															{
																"source": {
																	"name": "Containerid",
																	"type": "String"
																},
																"sink": {
																	"name": "Containerid",
																	"type": "String"
																}
															},
															{
																"source": {
																	"name": "Lrnumber",
																	"type": "String"
																},
																"sink": {
																	"name": "Lrnumber",
																	"type": "String"
																}
															}
														]
													}
												},
												"inputs": [
													{
														"referenceName": "DS_OData_SAP_HANA_QA",
														"type": "DatasetReference",
														"parameters": {}
													}
												],
												"outputs": [
													{
														"referenceName": "DS_AzureSqlTable_SalesInvoice",
														"type": "DatasetReference",
														"parameters": {}
													}
												]
											}
										],
										"ifTrueActivities": [
											{
												"name": "Set variable1",
												"type": "SetVariable",
												"dependsOn": [],
												"userProperties": [],
												"typeProperties": {
													"variableName": "flag",
													"value": {
														"value": "@bool('true')",
														"type": "Expression"
													}
												}
											}
										]
									}
								}
							],
							"timeout": "0.00:00:00"
						}
					},
					{
						"name": "startValuefomPipeline",
						"type": "SetVariable",
						"dependsOn": [
							{
								"activity": "delete old records",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"variableName": "startValue",
							"value": {
								"value": "@subtractFromTime(pipeline().parameters.P_StartDate, 1, 'Day')",
								"type": "Expression"
							}
						}
					},
					{
						"name": "updateWaterMark",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [
							{
								"activity": "New Watermark Time Value",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[dbo].[SP_update_watermark]",
							"storedProcedureParameters": {
								"TabName": {
									"value": "InvoiceSales",
									"type": "String"
								},
								"LastModifiedDate": {
									"value": {
										"value": "@activity('New Watermark Date Value').output.firstRow.maxDate",
										"type": "Expression"
									},
									"type": "Datetime"
								},
								"LastModifiedtime": {
									"value": {
										"value": "@activity('New Watermark Time Value').output.firstRow.maxTime",
										"type": "Expression"
									},
									"type": "Timespan"
								}
							}
						},
						"linkedServiceName": {
							"referenceName": "LS_AzureSqlDatabase",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "New Watermark Date Value",
						"type": "Lookup",
						"dependsOn": [
							{
								"activity": "Until1",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderQuery": {
									"value": "select MAX(Invoicecrdate ) as maxDate FROM [dbo].[InvoiceSales]",
									"type": "Expression"
								},
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "DS_AzureSqlTable",
								"type": "DatasetReference",
								"parameters": {}
							}
						}
					},
					{
						"name": "New Watermark Time Value",
						"type": "Lookup",
						"dependsOn": [
							{
								"activity": "New Watermark Date Value",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderQuery": {
									"value": "select MAX(Invoicecrtime) as maxTime FROM [dbo].[InvoiceSales] where Invoicecrdate= ( select MAX(Invoicecrdate ) FROM [dbo].[InvoiceSales])",
									"type": "Expression"
								},
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "DS_AzureSqlTable",
								"type": "DatasetReference",
								"parameters": {}
							}
						}
					},
					{
						"name": "Set variable2",
						"type": "SetVariable",
						"dependsOn": [],
						"userProperties": [],
						"typeProperties": {
							"variableName": "d_startdate",
							"value": {
								"value": "@substring(pipeline().parameters.P_StartDate,0,18)",
								"type": "Expression"
							}
						}
					},
					{
						"name": "Set variable2_copy1",
						"type": "SetVariable",
						"dependsOn": [
							{
								"activity": "Set variable2",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"variableName": "d_enddate",
							"value": {
								"value": "@substring(pipeline().parameters.P_EndDate,0,18)",
								"type": "Expression"
							}
						}
					},
					{
						"name": "delete old records",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [
							{
								"activity": "Set variable2_copy1",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[dbo].[SP_deleteRecords]",
							"storedProcedureParameters": {
								"D_StartDate": {
									"value": {
										"value": "@variables('d_startdate')",
										"type": "Expression"
									},
									"type": "String"
								},
								"D_EndDate": {
									"value": {
										"value": "@variables('d_enddate')",
										"type": "Expression"
									},
									"type": "String"
								}
							}
						},
						"linkedServiceName": {
							"referenceName": "LS_AzureSqlDatabase",
							"type": "LinkedServiceReference"
						}
					}
				],
				"parameters": {
					"P_StartDate": {
						"type": "string",
						"defaultValue": "2019-11-01T00:00:00Z"
					},
					"P_EndDate": {
						"type": "string",
						"defaultValue": "2021-07-25T00:00:00Z"
					}
				},
				"variables": {
					"flag": {
						"type": "Boolean",
						"defaultValue": false
					},
					"startValue": {
						"type": "String"
					},
					"fromDate": {
						"type": "String"
					},
					"fromDateRZ": {
						"type": "String"
					},
					"d_startdate": {
						"type": "String"
					},
					"d_enddate": {
						"type": "String"
					}
				},
				"folder": {
					"name": "QA"
				},
				"annotations": [],
				"lastPublishTime": "2021-07-28T05:05:02Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/LS_AzureSqlDatabase')]",
				"[concat(variables('factoryId'), '/datasets/DS_AzureSqlTable')]",
				"[concat(variables('factoryId'), '/datasets/DS_OData_SAP_HANA_QA')]",
				"[concat(variables('factoryId'), '/datasets/DS_AzureSqlTable_SalesInvoice')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/PL_SalesInvoice_Delta_Tillnow_Pipeline')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Old Time WatermarkValue",
						"type": "Lookup",
						"dependsOn": [
							{
								"activity": "Old Date WatermarkValue",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderQuery": "select TimeValue  FROM [dbo].[WatermarkTable] where TableName='InvoiceSales'",
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "DS_AzureSqlTable",
								"type": "DatasetReference",
								"parameters": {}
							}
						}
					},
					{
						"name": "Copy SalesInvoice odata to SQL",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "set Next Date",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "ODataSource",
								"query": {
									"value": "$filter=(Invoicecrdate gt datetime'@{activity('Old Date WatermarkValue').output.firstRow.DateValue}' and Invoicecrtime gt time'@{variables('timeFormat')}') or (Invoicecrdate ge datetime'@{variables('nextDate')}' and Invoicecrtime ge time'PT00H00M00S')",
									"type": "Expression"
								},
								"httpRequestTimeout": "00:05:00"
							},
							"sink": {
								"type": "AzureSqlSink",
								"writeBehavior": "insert"
							},
							"enableStaging": false
						},
						"inputs": [
							{
								"referenceName": "DS_OData_SAP_HANA_QA",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "DS_AzureSqlTable_SalesInvoice",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					},
					{
						"name": "Old Date WatermarkValue",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderQuery": "select DateValue  FROM [dbo].[WatermarkTable] where TableName='InvoiceSales'",
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "DS_AzureSqlTable",
								"type": "DatasetReference",
								"parameters": {}
							}
						}
					},
					{
						"name": "updateWaterMark",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [
							{
								"activity": "New Watermark Time Value",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[dbo].[SP_update_watermark]",
							"storedProcedureParameters": {
								"TabName": {
									"value": "InvoiceSales",
									"type": "String"
								},
								"LastModifiedDate": {
									"value": {
										"value": "@activity('New Watermark Date Value').output.firstRow.maxDate",
										"type": "Expression"
									},
									"type": "Datetime"
								},
								"LastModifiedtime": {
									"value": {
										"value": "@activity('New Watermark Time Value').output.firstRow.maxTime",
										"type": "Expression"
									},
									"type": "Timespan"
								}
							}
						},
						"linkedServiceName": {
							"referenceName": "LS_AzureSqlDatabase",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "New Watermark Date Value",
						"type": "Lookup",
						"dependsOn": [
							{
								"activity": "Copy SalesInvoice odata to SQL",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderQuery": {
									"value": "select MAX(Invoicecrdate ) as maxDate FROM [dbo].[InvoiceSales]",
									"type": "Expression"
								},
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "DS_AzureSqlTable",
								"type": "DatasetReference",
								"parameters": {}
							}
						}
					},
					{
						"name": "New Watermark Time Value",
						"type": "Lookup",
						"dependsOn": [
							{
								"activity": "New Watermark Date Value",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderQuery": {
									"value": "select MAX(Invoicecrtime) as maxTime FROM [dbo].[InvoiceSales] where Invoicecrdate= ( select MAX(Invoicecrdate ) FROM [dbo].[InvoiceSales])",
									"type": "Expression"
								},
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "DS_AzureSqlTable",
								"type": "DatasetReference",
								"parameters": {}
							}
						}
					},
					{
						"name": "changeTimeFormat",
						"type": "SetVariable",
						"dependsOn": [
							{
								"activity": "Old Time WatermarkValue",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"variableName": "timeFormat",
							"value": {
								"value": "@concat( 'PT',substring(activity('Old Time WatermarkValue').output.firstRow.TimeValue, 0,2 ), 'H', substring(activity('Old Time WatermarkValue').output.firstRow.TimeValue, 3,2 ) ,'M', substring(activity('Old Time WatermarkValue').output.firstRow.TimeValue, 6,2 ) ,'S')",
								"type": "Expression"
							}
						}
					},
					{
						"name": "set Next Date",
						"type": "SetVariable",
						"dependsOn": [
							{
								"activity": "changeTimeFormat",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"variableName": "nextDate",
							"value": {
								"value": "@substring(addToTime(activity('Old Date WatermarkValue').output.firstRow.DateValue, 1, 'Day'), 0, 18)",
								"type": "Expression"
							}
						}
					}
				],
				"variables": {
					"prevDate": {
						"type": "String"
					},
					"timeFormat": {
						"type": "String"
					},
					"nextDate": {
						"type": "String"
					}
				},
				"folder": {
					"name": "QA/InvoiceSales"
				},
				"annotations": [],
				"lastPublishTime": "2021-07-27T17:14:26Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/DS_AzureSqlTable')]",
				"[concat(variables('factoryId'), '/datasets/DS_OData_SAP_HANA_QA')]",
				"[concat(variables('factoryId'), '/datasets/DS_AzureSqlTable_SalesInvoice')]",
				"[concat(variables('factoryId'), '/linkedServices/LS_AzureSqlDatabase')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/Pipeline_Initial_Load')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Copy data1",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "SapHanaSource",
								"query": {
									"value": "@concat('select  * from ', pipeline().parameters.SchemaName,'.',pipeline().parameters.TableName)",
									"type": "Expression"
								},
								"partitionOption": "None"
							},
							"sink": {
								"type": "AzureSqlSink",
								"writeBehavior": "insert",
								"tableOption": "autoCreate",
								"disableMetricsCollection": false
							},
							"enableStaging": false,
							"enableSkipIncompatibleRow": false,
							"translator": {
								"type": "TabularTranslator",
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "DS_SAPHANA_QA",
								"type": "DatasetReference",
								"parameters": {
									"SchemaName": {
										"value": "@pipeline().parameters.SchemaName",
										"type": "Expression"
									},
									"TableName": {
										"value": "@pipeline().parameters.TableName",
										"type": "Expression"
									}
								}
							}
						],
						"outputs": [
							{
								"referenceName": "DS_AzureSqlTable",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					}
				],
				"parameters": {
					"SchemaName": {
						"type": "string"
					},
					"TableName": {
						"type": "string"
					}
				},
				"folder": {
					"name": "QA"
				},
				"annotations": [],
				"lastPublishTime": "2021-07-22T02:46:16Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/DS_SAPHANA_QA')]",
				"[concat(variables('factoryId'), '/datasets/DS_AzureSqlTable')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/SQL_Dynamic_day_wise_Full_Load_oData_QA_pipeline')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Until1",
						"type": "Until",
						"dependsOn": [
							{
								"activity": "startValuefomPipeline",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"expression": {
								"value": "@bool(variables('flag'))",
								"type": "Expression"
							},
							"activities": [
								{
									"name": "fromDate",
									"type": "SetVariable",
									"dependsOn": [],
									"userProperties": [],
									"typeProperties": {
										"variableName": "fromDate",
										"value": {
											"value": "@addToTime(variables('startValue'), 1, 'Day')",
											"type": "Expression"
										}
									}
								},
								{
									"name": "startValue",
									"type": "SetVariable",
									"dependsOn": [
										{
											"activity": "fromDate",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"userProperties": [],
									"typeProperties": {
										"variableName": "startValue",
										"value": {
											"value": "@variables('fromDate')",
											"type": "Expression"
										}
									}
								},
								{
									"name": "removeZ",
									"type": "SetVariable",
									"dependsOn": [
										{
											"activity": "fromDate",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"userProperties": [],
									"typeProperties": {
										"variableName": "fromDateRZ",
										"value": {
											"value": "@substring(variables('fromDate'), 0, 18)",
											"type": "Expression"
										}
									}
								},
								{
									"name": "If Condition2",
									"type": "IfCondition",
									"dependsOn": [
										{
											"activity": "removeZ",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"userProperties": [],
									"typeProperties": {
										"expression": {
											"value": "@if(equals(addHours(variables('fromDate'),0),addHours(pipeline().parameters.P_EndDate,0)) , 'true', 'false')",
											"type": "Expression"
										},
										"ifFalseActivities": [
											{
												"name": "Copy SalesInvoice to SQL",
												"type": "Copy",
												"dependsOn": [
													{
														"activity": "Set variable2",
														"dependencyConditions": [
															"Succeeded"
														]
													}
												],
												"policy": {
													"timeout": "7.00:00:00",
													"retry": 0,
													"retryIntervalInSeconds": 30,
													"secureOutput": false,
													"secureInput": false
												},
												"userProperties": [],
												"typeProperties": {
													"source": {
														"type": "ODataSource",
														"query": {
															"value": "@variables('dynamicQ')",
															"type": "Expression"
														},
														"httpRequestTimeout": "00:05:00"
													},
													"sink": {
														"type": "AzureSqlSink",
														"writeBehavior": "insert",
														"disableMetricsCollection": false
													},
													"enableStaging": false,
													"enableSkipIncompatibleRow": false
												},
												"inputs": [
													{
														"referenceName": "DS_Dynamic_SAP_QA_oData",
														"type": "DatasetReference",
														"parameters": {
															"SourceTable": {
																"value": "@pipeline().parameters.P_OdataSet",
																"type": "Expression"
															}
														}
													}
												],
												"outputs": [
													{
														"referenceName": "DS_AzureSqlTable_Dynmamic",
														"type": "DatasetReference",
														"parameters": {
															"SQLTableName": "fdsf"
														}
													}
												]
											},
											{
												"name": "Set variable2",
												"type": "SetVariable",
												"dependsOn": [],
												"userProperties": [],
												"typeProperties": {
													"variableName": "dynamicQ",
													"value": {
														"value": "$filter=Invoicecrdate eq datetime'@{variables('fromDateRZ')}'",
														"type": "Expression"
													}
												}
											}
										],
										"ifTrueActivities": [
											{
												"name": "Set variable1",
												"type": "SetVariable",
												"dependsOn": [],
												"userProperties": [],
												"typeProperties": {
													"variableName": "flag",
													"value": {
														"value": "@bool('true')",
														"type": "Expression"
													}
												}
											}
										]
									}
								}
							],
							"timeout": "0.00:00:00"
						}
					},
					{
						"name": "startValuefomPipeline",
						"type": "SetVariable",
						"dependsOn": [],
						"userProperties": [],
						"typeProperties": {
							"variableName": "startValue",
							"value": {
								"value": "@subtractFromTime(pipeline().parameters.P_StartDate, 1, 'Day')",
								"type": "Expression"
							}
						}
					},
					{
						"name": "updateWaterMark",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [
							{
								"activity": "New Watermark Time Value",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[dbo].[SP_update_watermark]",
							"storedProcedureParameters": {
								"TabName": {
									"value": "InvoiceSales",
									"type": "String"
								},
								"LastUpdatedDate": {
									"value": {
										"value": "@activity('New Watermark Date Value').output.firstRow.maxDate",
										"type": "Expression"
									},
									"type": "Datetime"
								},
								"LastUpdatedTime": {
									"value": {
										"value": "@activity('New Watermark Time Value').output.firstRow.maxTime",
										"type": "Expression"
									},
									"type": "Timespan"
								}
							}
						},
						"linkedServiceName": {
							"referenceName": "LS_AzureSqlDatabase",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "New Watermark Date Value",
						"type": "Lookup",
						"dependsOn": [
							{
								"activity": "Until1",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderQuery": {
									"value": "select MAX(Invoicecrdate ) as maxDate FROM [dbo].[InvoiceSales]",
									"type": "Expression"
								},
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "DS_AzureSqlTable",
								"type": "DatasetReference",
								"parameters": {}
							}
						}
					},
					{
						"name": "New Watermark Time Value",
						"type": "Lookup",
						"dependsOn": [
							{
								"activity": "New Watermark Date Value",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderQuery": {
									"value": "select MAX(Invoicecrtime) as maxTime FROM [dbo].[InvoiceSales] where Invoicecrdate= ( select MAX(Invoicecrdate ) FROM [dbo].[InvoiceSales])",
									"type": "Expression"
								},
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "DS_AzureSqlTable",
								"type": "DatasetReference",
								"parameters": {}
							}
						}
					}
				],
				"parameters": {
					"P_StartDate": {
						"type": "string",
						"defaultValue": "2019-11-01T00:00:00Z"
					},
					"P_EndDate": {
						"type": "string",
						"defaultValue": "2021-07-25T00:00:00Z"
					},
					"P_OdataSet": {
						"type": "string",
						"defaultValue": "SalesDataSet"
					},
					"P_Query": {
						"type": "string",
						"defaultValue": "$filter=Invoicecrdate eq datetime'@{variables('fromDateRZ')}'"
					},
					"P_SQL_Table": {
						"type": "string",
						"defaultValue": "InvoiceSales"
					}
				},
				"variables": {
					"flag": {
						"type": "Boolean",
						"defaultValue": false
					},
					"startValue": {
						"type": "String"
					},
					"fromDate": {
						"type": "String"
					},
					"fromDateRZ": {
						"type": "String"
					},
					"dynamicQ": {
						"type": "String"
					}
				},
				"folder": {
					"name": "QA"
				},
				"annotations": [],
				"lastPublishTime": "2021-07-28T09:59:32Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/LS_AzureSqlDatabase')]",
				"[concat(variables('factoryId'), '/datasets/DS_AzureSqlTable')]",
				"[concat(variables('factoryId'), '/datasets/DS_Dynamic_SAP_QA_oData')]",
				"[concat(variables('factoryId'), '/datasets/DS_AzureSqlTable_Dynmamic')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/SalesInvoice_Delta_PrevDay_Daily_Pipeline')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Old Watermark Value",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderQuery": "select DateValue  FROM [dbo].[WatermarkTable] where TableName='InvoiceSales'",
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "DS_AzureSqlTable",
								"type": "DatasetReference",
								"parameters": {}
							}
						}
					},
					{
						"name": "Copy SalesInvoice odata to SQL",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "previousDate",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "ODataSource",
								"query": {
									"value": "$filter=Invoicecrdate gt datetime'@{activity('Old Watermark Value').output.firstRow.DateValue}' and Invoicecrdate le datetime'@{variables('prevDate')}'",
									"type": "Expression"
								},
								"httpRequestTimeout": "00:05:00"
							},
							"sink": {
								"type": "AzureSqlSink",
								"writeBehavior": "insert"
							},
							"enableStaging": false
						},
						"inputs": [
							{
								"referenceName": "DS_OData_SAP_HANA_QA",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "DS_AzureSqlTable_SalesInvoice",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					},
					{
						"name": "previousDate",
						"type": "SetVariable",
						"dependsOn": [
							{
								"activity": "Old Watermark Value",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"variableName": "prevDate",
							"value": {
								"value": "@concat(substring(utcnow(), 0, 11),'00:00:00')",
								"type": "Expression"
							}
						}
					},
					{
						"name": "updateWaterMark",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [
							{
								"activity": "New Watermark Time Value",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[dbo].[SP_update_watermark]",
							"storedProcedureParameters": {
								"TabName": {
									"value": "InvoiceSales",
									"type": "String"
								},
								"LastModifiedDate": {
									"value": {
										"value": "@activity('New Watermark Date Value').output.firstRow.maxDate",
										"type": "Expression"
									},
									"type": "Datetime"
								},
								"LastModifiedtime": {
									"value": {
										"value": "@activity('New Watermark Time Value').output.firstRow.maxTime",
										"type": "Expression"
									},
									"type": "Timespan"
								}
							}
						},
						"linkedServiceName": {
							"referenceName": "LS_AzureSqlDatabase",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "New Watermark Date Value",
						"type": "Lookup",
						"dependsOn": [
							{
								"activity": "Copy SalesInvoice odata to SQL",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderQuery": {
									"value": "select MAX(Invoicecrdate ) as maxDate FROM [dbo].[InvoiceSales]",
									"type": "Expression"
								},
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "DS_AzureSqlTable",
								"type": "DatasetReference",
								"parameters": {}
							}
						}
					},
					{
						"name": "New Watermark Time Value",
						"type": "Lookup",
						"dependsOn": [
							{
								"activity": "New Watermark Date Value",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderQuery": {
									"value": "select MAX(Invoicecrtime) as maxTime FROM [dbo].[InvoiceSales] where Invoicecrdate= ( select MAX(Invoicecrdate ) FROM [dbo].[InvoiceSales])",
									"type": "Expression"
								},
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "DS_AzureSqlTable",
								"type": "DatasetReference",
								"parameters": {}
							}
						}
					}
				],
				"variables": {
					"prevDate": {
						"type": "String"
					}
				},
				"folder": {
					"name": "QA"
				},
				"annotations": [],
				"lastPublishTime": "2021-07-27T17:14:26Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/DS_AzureSqlTable')]",
				"[concat(variables('factoryId'), '/datasets/DS_OData_SAP_HANA_QA')]",
				"[concat(variables('factoryId'), '/datasets/DS_AzureSqlTable_SalesInvoice')]",
				"[concat(variables('factoryId'), '/linkedServices/LS_AzureSqlDatabase')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/SalesInvoice_Delta_PrevDay_Daily_Pipeline_copy1')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Old Watermark Value",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderQuery": "select WatermarkValue  FROM [dbo].[WatermarkTable] where TableName='InvoiceSalesDataQA'",
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "DS_AzureSqlTable",
								"type": "DatasetReference",
								"parameters": {}
							}
						}
					},
					{
						"name": "Copy SalesInvoice odata to SQL",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "previousDate",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "ODataSource",
								"query": {
									"value": "$filter=Invoicecrdate gt datetime'@{activity('Old Watermark Value').output.firstRow.WatermarkValue}' and Invoicecrdate lt datetime'@{variables('prevDate')}'",
									"type": "Expression"
								},
								"httpRequestTimeout": "00:05:00"
							},
							"sink": {
								"type": "AzureSqlSink",
								"writeBehavior": "insert",
								"tableOption": "autoCreate",
								"disableMetricsCollection": false
							},
							"enableStaging": false
						},
						"inputs": [
							{
								"referenceName": "DS_OData_SAP_HANA_QA",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "DS_AzureSqlTable_SalesInvoice2",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					},
					{
						"name": "previousDate",
						"type": "SetVariable",
						"dependsOn": [
							{
								"activity": "Old Watermark Value",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"variableName": "prevDate",
							"value": {
								"value": "@concat(substring(utcnow(), 0, 11),'00:00:00')",
								"type": "Expression"
							}
						}
					},
					{
						"name": "New Watermark Value",
						"type": "Lookup",
						"dependsOn": [
							{
								"activity": "Copy SalesInvoice odata to SQL",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderQuery": "  select MAX( CONCAT( CAST(Invoicecrdate as date),' ',(Invoicecrtime)) ) as maxValue FROM [dbo].[InvoiceSalesDataQA]",
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "DS_AzureSqlTable",
								"type": "DatasetReference",
								"parameters": {}
							}
						}
					}
				],
				"variables": {
					"prevDate": {
						"type": "String"
					}
				},
				"folder": {
					"name": "QA"
				},
				"annotations": [],
				"lastPublishTime": "2021-07-26T09:26:37Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/DS_AzureSqlTable')]",
				"[concat(variables('factoryId'), '/datasets/DS_OData_SAP_HANA_QA')]",
				"[concat(variables('factoryId'), '/datasets/DS_AzureSqlTable_SalesInvoice2')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/SalesInvoice_Delta_Tillnow_Pipeline_copy1')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Old Watermark Value",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderQuery": "select WatermarkValue  FROM [dbo].[WatermarkTable] where TableName='InvoiceSalesDataQA'",
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "DS_AzureSqlTable",
								"type": "DatasetReference",
								"parameters": {}
							}
						}
					},
					{
						"name": "Copy SalesInvoice odata to SQL",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "previousDate",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "ODataSource",
								"query": {
									"value": "$filter=Invoicecrdate gt datetime'@{activity('Old Watermark Value').output.firstRow.WatermarkValue}' and Invoicecrdate le datetime'@{variables('prevDate')}'",
									"type": "Expression"
								},
								"httpRequestTimeout": "00:05:00"
							},
							"sink": {
								"type": "AzureSqlSink",
								"writeBehavior": "insert"
							},
							"enableStaging": false
						},
						"inputs": [
							{
								"referenceName": "DS_OData_SAP_HANA_QA",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "DS_AzureSqlTable_SalesInvoice",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					},
					{
						"name": "previousDate",
						"type": "SetVariable",
						"dependsOn": [
							{
								"activity": "Old Watermark Value",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"variableName": "prevDate",
							"value": {
								"value": "@substring(utcnow(), 0, 18)",
								"type": "Expression"
							}
						}
					},
					{
						"name": "updateWaterMark",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [
							{
								"activity": "New Watermark Value",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[dbo].[SP_update_watermark]",
							"storedProcedureParameters": {
								"TabName": {
									"value": "InvoiceSalesDataQA",
									"type": "String"
								},
								"LastModifiedtime": {
									"value": {
										"value": "@activity('New Watermark Value').output.firstRow.maxValue",
										"type": "Expression"
									},
									"type": "Datetime"
								}
							}
						},
						"linkedServiceName": {
							"referenceName": "LS_AzureSqlDatabase",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "New Watermark Value",
						"type": "Lookup",
						"dependsOn": [
							{
								"activity": "Copy SalesInvoice odata to SQL",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderQuery": "  select MAX( CONCAT( CAST(Invoicecrdate as date),' ',(Invoicecrtime)) ) as maxValue FROM [dbo].[InvoiceSalesDataQA]",
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "DS_AzureSqlTable",
								"type": "DatasetReference",
								"parameters": {}
							}
						}
					}
				],
				"variables": {
					"prevDate": {
						"type": "String"
					}
				},
				"folder": {
					"name": "QA"
				},
				"annotations": [],
				"lastPublishTime": "2021-07-27T07:19:11Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/DS_AzureSqlTable')]",
				"[concat(variables('factoryId'), '/datasets/DS_OData_SAP_HANA_QA')]",
				"[concat(variables('factoryId'), '/datasets/DS_AzureSqlTable_SalesInvoice')]",
				"[concat(variables('factoryId'), '/linkedServices/LS_AzureSqlDatabase')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/SalesInvoice_day_wise_Full_Load_oData_QA_pipeline')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Until1",
						"type": "Until",
						"dependsOn": [
							{
								"activity": "startValuefomPipeline",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"expression": {
								"value": "@bool(variables('flag'))",
								"type": "Expression"
							},
							"activities": [
								{
									"name": "fromDate",
									"type": "SetVariable",
									"dependsOn": [],
									"userProperties": [],
									"typeProperties": {
										"variableName": "fromDate",
										"value": {
											"value": "@addToTime(variables('startValue'), 1, 'Day')",
											"type": "Expression"
										}
									}
								},
								{
									"name": "startValue",
									"type": "SetVariable",
									"dependsOn": [
										{
											"activity": "fromDate",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"userProperties": [],
									"typeProperties": {
										"variableName": "startValue",
										"value": {
											"value": "@variables('fromDate')",
											"type": "Expression"
										}
									}
								},
								{
									"name": "removeZ",
									"type": "SetVariable",
									"dependsOn": [
										{
											"activity": "fromDate",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"userProperties": [],
									"typeProperties": {
										"variableName": "fromDateRZ",
										"value": {
											"value": "@substring(variables('fromDate'), 0, 18)",
											"type": "Expression"
										}
									}
								},
								{
									"name": "If Condition2",
									"type": "IfCondition",
									"dependsOn": [
										{
											"activity": "removeZ",
											"dependencyConditions": [
												"Succeeded"
											]
										},
										{
											"activity": "startValue",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"userProperties": [],
									"typeProperties": {
										"expression": {
											"value": "@if(equals(adddays(variables('startValue'),0),adddays(pipeline().parameters.P_EndDate,1)) , 'true', 'false')",
											"type": "Expression"
										},
										"ifFalseActivities": [
											{
												"name": "Copy SalesInvoice to SQL",
												"type": "Copy",
												"dependsOn": [],
												"policy": {
													"timeout": "7.00:00:00",
													"retry": 0,
													"retryIntervalInSeconds": 30,
													"secureOutput": false,
													"secureInput": false
												},
												"userProperties": [],
												"typeProperties": {
													"source": {
														"type": "ODataSource",
														"query": {
															"value": "$filter=Invoicecrdate eq datetime'@{variables('fromDateRZ')}'",
															"type": "Expression"
														},
														"httpRequestTimeout": "00:30:00"
													},
													"sink": {
														"type": "AzureSqlSink",
														"writeBehavior": "insert",
														"disableMetricsCollection": false
													},
													"enableStaging": false,
													"enableSkipIncompatibleRow": false,
													"translator": {
														"type": "TabularTranslator",
														"mappings": [
															{
																"source": {
																	"name": "Billingdoc",
																	"type": "String"
																},
																"sink": {
																	"name": "Billingdoc",
																	"type": "String"
																}
															},
															{
																"source": {
																	"name": "Item",
																	"type": "String"
																},
																"sink": {
																	"name": "Item",
																	"type": "String"
																}
															},
															{
																"source": {
																	"name": "Companycode",
																	"type": "String"
																},
																"sink": {
																	"name": "Companycode",
																	"type": "String"
																}
															},
															{
																"source": {
																	"name": "Salesorg",
																	"type": "String"
																},
																"sink": {
																	"name": "Salesorg",
																	"type": "String"
																}
															},
															{
																"source": {
																	"name": "Ewaybillno",
																	"type": "String"
																},
																"sink": {
																	"name": "Ewaybillno",
																	"type": "String"
																}
															},
															{
																"source": {
																	"name": "Exportexinvno",
																	"type": "String"
																},
																"sink": {
																	"name": "Exportexinvno",
																	"type": "String"
																}
															},
															{
																"source": {
																	"name": "Exportexinvdt",
																	"type": "DateTime"
																},
																"sink": {
																	"name": "Exportexinvdt",
																	"type": "DateTime"
																}
															},
															{
																"source": {
																	"name": "Accexchangerate",
																	"type": "Decimal"
																},
																"sink": {
																	"name": "Accexchangerate",
																	"type": "Decimal"
																}
															},
															{
																"source": {
																	"name": "Netvalue",
																	"type": "Decimal"
																},
																"sink": {
																	"name": "Netvalue",
																	"type": "Decimal"
																}
															},
															{
																"source": {
																	"name": "Doccurrency",
																	"type": "String"
																},
																"sink": {
																	"name": "Doccurrency",
																	"type": "String"
																}
															},
															{
																"source": {
																	"name": "Loccuramt",
																	"type": "Decimal"
																},
																"sink": {
																	"name": "Loccuramt",
																	"type": "Decimal"
																}
															},
															{
																"source": {
																	"name": "Gstin",
																	"type": "String"
																},
																"sink": {
																	"name": "Gstin",
																	"type": "String"
																}
															},
															{
																"source": {
																	"name": "Region",
																	"type": "String"
																},
																"sink": {
																	"name": "Region",
																	"type": "String"
																}
															},
															{
																"source": {
																	"name": "Regionname",
																	"type": "String"
																},
																"sink": {
																	"name": "Regionname",
																	"type": "String"
																}
															},
															{
																"source": {
																	"name": "Regiondlvplant",
																	"type": "String"
																},
																"sink": {
																	"name": "Regiondlvplant",
																	"type": "String"
																}
															},
															{
																"source": {
																	"name": "Customerrefdate",
																	"type": "DateTime"
																},
																"sink": {
																	"name": "Customerrefdate",
																	"type": "DateTime"
																}
															},
															{
																"source": {
																	"name": "Grossvalue",
																	"type": "Decimal"
																},
																"sink": {
																	"name": "Grossvalue",
																	"type": "Decimal"
																}
															},
															{
																"source": {
																	"name": "Invoicedate",
																	"type": "DateTime"
																},
																"sink": {
																	"name": "Invoicedate",
																	"type": "DateTime"
																}
															},
															{
																"source": {
																	"name": "Invoicetime",
																	"type": "TimeSpan"
																},
																"sink": {
																	"name": "Invoicetime",
																	"type": "TimeSpan"
																}
															},
															{
																"source": {
																	"name": "Changedon",
																	"type": "DateTime"
																},
																"sink": {
																	"name": "Changedon",
																	"type": "DateTime"
																}
															},
															{
																"source": {
																	"name": "Businessplace",
																	"type": "String"
																},
																"sink": {
																	"name": "Businessplace",
																	"type": "String"
																}
															},
															{
																"source": {
																	"name": "Plant",
																	"type": "String"
																},
																"sink": {
																	"name": "Plant",
																	"type": "String"
																}
															},
															{
																"source": {
																	"name": "Plantdesc",
																	"type": "String"
																},
																"sink": {
																	"name": "Plantdesc",
																	"type": "String"
																}
															},
															{
																"source": {
																	"name": "Billingtype",
																	"type": "String"
																},
																"sink": {
																	"name": "Billingtype",
																	"type": "String"
																}
															},
															{
																"source": {
																	"name": "Deldocno",
																	"type": "String"
																},
																"sink": {
																	"name": "Deldocno",
																	"type": "String"
																}
															},
															{
																"source": {
																	"name": "Deldocdate",
																	"type": "DateTime"
																},
																"sink": {
																	"name": "Deldocdate",
																	"type": "DateTime"
																}
															},
															{
																"source": {
																	"name": "Orderno",
																	"type": "String"
																},
																"sink": {
																	"name": "Orderno",
																	"type": "String"
																}
															},
															{
																"source": {
																	"name": "Orderqunatity",
																	"type": "Decimal"
																},
																"sink": {
																	"name": "Orderqunatity",
																	"type": "Decimal"
																}
															},
															{
																"source": {
																	"name": "Ordercreatedtime",
																	"type": "TimeSpan"
																},
																"sink": {
																	"name": "Ordercreatedtime",
																	"type": "TimeSpan"
																}
															},
															{
																"source": {
																	"name": "Requesteddeldate",
																	"type": "DateTime"
																},
																"sink": {
																	"name": "Requesteddeldate",
																	"type": "DateTime"
																}
															},
															{
																"source": {
																	"name": "Orderstatus",
																	"type": "String"
																},
																"sink": {
																	"name": "Orderstatus",
																	"type": "String"
																}
															},
															{
																"source": {
																	"name": "Salesordertype",
																	"type": "String"
																},
																"sink": {
																	"name": "Salesordertype",
																	"type": "String"
																}
															},
															{
																"source": {
																	"name": "Distchannel",
																	"type": "String"
																},
																"sink": {
																	"name": "Distchannel",
																	"type": "String"
																}
															},
															{
																"source": {
																	"name": "Division",
																	"type": "String"
																},
																"sink": {
																	"name": "Division",
																	"type": "String"
																}
															},
															{
																"source": {
																	"name": "Customer",
																	"type": "String"
																},
																"sink": {
																	"name": "Customer",
																	"type": "String"
																}
															},
															{
																"source": {
																	"name": "Customername",
																	"type": "String"
																},
																"sink": {
																	"name": "Customername",
																	"type": "String"
																}
															},
															{
																"source": {
																	"name": "Customercountry",
																	"type": "String"
																},
																"sink": {
																	"name": "Customercountry",
																	"type": "String"
																}
															},
															{
																"source": {
																	"name": "Customercountrydesc",
																	"type": "String"
																},
																"sink": {
																	"name": "Customercountrydesc",
																	"type": "String"
																}
															},
															{
																"source": {
																	"name": "Materialpricegrp",
																	"type": "String"
																},
																"sink": {
																	"name": "Materialpricegrp",
																	"type": "String"
																}
															},
															{
																"source": {
																	"name": "Materialpricegrpdesc",
																	"type": "String"
																},
																"sink": {
																	"name": "Materialpricegrpdesc",
																	"type": "String"
																}
															},
															{
																"source": {
																	"name": "Material",
																	"type": "String"
																},
																"sink": {
																	"name": "Material",
																	"type": "String"
																}
															},
															{
																"source": {
																	"name": "Materialdes",
																	"type": "String"
																},
																"sink": {
																	"name": "Materialdes",
																	"type": "String"
																}
															},
															{
																"source": {
																	"name": "Brand",
																	"type": "String"
																},
																"sink": {
																	"name": "Brand",
																	"type": "String"
																}
															},
															{
																"source": {
																	"name": "Brandname",
																	"type": "String"
																},
																"sink": {
																	"name": "Brandname",
																	"type": "String"
																}
															},
															{
																"source": {
																	"name": "Productgroup",
																	"type": "String"
																},
																"sink": {
																	"name": "Productgroup",
																	"type": "String"
																}
															},
															{
																"source": {
																	"name": "Productgrpdesc",
																	"type": "String"
																},
																"sink": {
																	"name": "Productgrpdesc",
																	"type": "String"
																}
															},
															{
																"source": {
																	"name": "Productheirarchy",
																	"type": "String"
																},
																"sink": {
																	"name": "Productheirarchy",
																	"type": "String"
																}
															},
															{
																"source": {
																	"name": "Productheirarchydes",
																	"type": "String"
																},
																"sink": {
																	"name": "Productheirarchydes",
																	"type": "String"
																}
															},
															{
																"source": {
																	"name": "Materialtype",
																	"type": "String"
																},
																"sink": {
																	"name": "Materialtype",
																	"type": "String"
																}
															},
															{
																"source": {
																	"name": "Materialgrp1",
																	"type": "String"
																},
																"sink": {
																	"name": "Materialgrp1",
																	"type": "String"
																}
															},
															{
																"source": {
																	"name": "Materialgrp1des",
																	"type": "String"
																},
																"sink": {
																	"name": "Materialgrp1des",
																	"type": "String"
																}
															},
															{
																"source": {
																	"name": "Materialgrp2",
																	"type": "String"
																},
																"sink": {
																	"name": "Materialgrp2",
																	"type": "String"
																}
															},
															{
																"source": {
																	"name": "Materialgrp2des",
																	"type": "String"
																},
																"sink": {
																	"name": "Materialgrp2des",
																	"type": "String"
																}
															},
															{
																"source": {
																	"name": "Materialgrp3",
																	"type": "String"
																},
																"sink": {
																	"name": "Materialgrp3",
																	"type": "String"
																}
															},
															{
																"source": {
																	"name": "Materialgrp3des",
																	"type": "String"
																},
																"sink": {
																	"name": "Materialgrp3des",
																	"type": "String"
																}
															},
															{
																"source": {
																	"name": "Materialgrp4",
																	"type": "String"
																},
																"sink": {
																	"name": "Materialgrp4",
																	"type": "String"
																}
															},
															{
																"source": {
																	"name": "Materialgrp4des",
																	"type": "String"
																},
																"sink": {
																	"name": "Materialgrp4des",
																	"type": "String"
																}
															},
															{
																"source": {
																	"name": "Materialgrp5",
																	"type": "String"
																},
																"sink": {
																	"name": "Materialgrp5",
																	"type": "String"
																}
															},
															{
																"source": {
																	"name": "Materialgrp5des",
																	"type": "String"
																},
																"sink": {
																	"name": "Materialgrp5des",
																	"type": "String"
																}
															},
															{
																"source": {
																	"name": "Pckmatgrp",
																	"type": "String"
																},
																"sink": {
																	"name": "Pckmatgrp",
																	"type": "String"
																}
															},
															{
																"source": {
																	"name": "Pckmatgrpdes",
																	"type": "String"
																},
																"sink": {
																	"name": "Pckmatgrpdes",
																	"type": "String"
																}
															},
															{
																"source": {
																	"name": "Salesgrp",
																	"type": "String"
																},
																"sink": {
																	"name": "Salesgrp",
																	"type": "String"
																}
															},
															{
																"source": {
																	"name": "Salesgrpdes",
																	"type": "String"
																},
																"sink": {
																	"name": "Salesgrpdes",
																	"type": "String"
																}
															},
															{
																"source": {
																	"name": "Salesofc",
																	"type": "String"
																},
																"sink": {
																	"name": "Salesofc",
																	"type": "String"
																}
															},
															{
																"source": {
																	"name": "Salesofcdes",
																	"type": "String"
																},
																"sink": {
																	"name": "Salesofcdes",
																	"type": "String"
																}
															},
															{
																"source": {
																	"name": "Salesdistrict",
																	"type": "String"
																},
																"sink": {
																	"name": "Salesdistrict",
																	"type": "String"
																}
															},
															{
																"source": {
																	"name": "Salesdistrictname",
																	"type": "String"
																},
																"sink": {
																	"name": "Salesdistrictname",
																	"type": "String"
																}
															},
															{
																"source": {
																	"name": "Orderpono",
																	"type": "String"
																},
																"sink": {
																	"name": "Orderpono",
																	"type": "String"
																}
															},
															{
																"source": {
																	"name": "City",
																	"type": "String"
																},
																"sink": {
																	"name": "City",
																	"type": "String"
																}
															},
															{
																"source": {
																	"name": "Crcontrolarea",
																	"type": "String"
																},
																"sink": {
																	"name": "Crcontrolarea",
																	"type": "String"
																}
															},
															{
																"source": {
																	"name": "Uom",
																	"type": "String"
																},
																"sink": {
																	"name": "Uom",
																	"type": "String"
																}
															},
															{
																"source": {
																	"name": "Billoflanding",
																	"type": "String"
																},
																"sink": {
																	"name": "Billoflanding",
																	"type": "String"
																}
															},
															{
																"source": {
																	"name": "Invoicecrdate",
																	"type": "DateTime"
																},
																"sink": {
																	"name": "Invoicecrdate",
																	"type": "DateTime"
																}
															},
															{
																"source": {
																	"name": "Invoicecrtime",
																	"type": "TimeSpan"
																},
																"sink": {
																	"name": "Invoicecrtime",
																	"type": "TimeSpan"
																}
															},
															{
																"source": {
																	"name": "Invoicecruser",
																	"type": "String"
																},
																"sink": {
																	"name": "Invoicecruser",
																	"type": "String"
																}
															},
															{
																"source": {
																	"name": "Invservrenddate",
																	"type": "DateTime"
																},
																"sink": {
																	"name": "Invservrenddate",
																	"type": "DateTime"
																}
															},
															{
																"source": {
																	"name": "Ordercreateddate",
																	"type": "DateTime"
																},
																"sink": {
																	"name": "Ordercreateddate",
																	"type": "DateTime"
																}
															},
															{
																"source": {
																	"name": "Ordercreateduser",
																	"type": "String"
																},
																"sink": {
																	"name": "Ordercreateduser",
																	"type": "String"
																}
															},
															{
																"source": {
																	"name": "Oderpricingdate",
																	"type": "DateTime"
																},
																"sink": {
																	"name": "Oderpricingdate",
																	"type": "DateTime"
																}
															},
															{
																"source": {
																	"name": "Delcrdate",
																	"type": "DateTime"
																},
																"sink": {
																	"name": "Delcrdate",
																	"type": "DateTime"
																}
															},
															{
																"source": {
																	"name": "Delcrname",
																	"type": "String"
																},
																"sink": {
																	"name": "Delcrname",
																	"type": "String"
																}
															},
															{
																"source": {
																	"name": "Delgoodsissue",
																	"type": "DateTime"
																},
																"sink": {
																	"name": "Delgoodsissue",
																	"type": "DateTime"
																}
															},
															{
																"source": {
																	"name": "Wholesaleid",
																	"type": "String"
																},
																"sink": {
																	"name": "Wholesaleid",
																	"type": "String"
																}
															},
															{
																"source": {
																	"name": "Retailid",
																	"type": "String"
																},
																"sink": {
																	"name": "Retailid",
																	"type": "String"
																}
															},
															{
																"source": {
																	"name": "Meansoftrans",
																	"type": "String"
																},
																"sink": {
																	"name": "Meansoftrans",
																	"type": "String"
																}
															},
															{
																"source": {
																	"name": "Meansoftransdesc",
																	"type": "String"
																},
																"sink": {
																	"name": "Meansoftransdesc",
																	"type": "String"
																}
															},
															{
																"source": {
																	"name": "Vehicleno",
																	"type": "String"
																},
																"sink": {
																	"name": "Vehicleno",
																	"type": "String"
																}
															},
															{
																"source": {
																	"name": "Plannedgi",
																	"type": "DateTime"
																},
																"sink": {
																	"name": "Plannedgi",
																	"type": "DateTime"
																}
															},
															{
																"source": {
																	"name": "Shiptoparty",
																	"type": "String"
																},
																"sink": {
																	"name": "Shiptoparty",
																	"type": "String"
																}
															},
															{
																"source": {
																	"name": "Shiptopartydesc",
																	"type": "String"
																},
																"sink": {
																	"name": "Shiptopartydesc",
																	"type": "String"
																}
															},
															{
																"source": {
																	"name": "Exchangerate",
																	"type": "Decimal"
																},
																"sink": {
																	"name": "Exchangerate",
																	"type": "Decimal"
																}
															},
															{
																"source": {
																	"name": "Orderreason",
																	"type": "String"
																},
																"sink": {
																	"name": "Orderreason",
																	"type": "String"
																}
															},
															{
																"source": {
																	"name": "Shippingcountrycode",
																	"type": "String"
																},
																"sink": {
																	"name": "Shippingcountrycode",
																	"type": "String"
																}
															},
															{
																"source": {
																	"name": "Shippingcountrydesc",
																	"type": "String"
																},
																"sink": {
																	"name": "Shippingcountrydesc",
																	"type": "String"
																}
															},
															{
																"source": {
																	"name": "Shippingcitycode",
																	"type": "String"
																},
																"sink": {
																	"name": "Shippingcitycode",
																	"type": "String"
																}
															},
															{
																"source": {
																	"name": "Countycode",
																	"type": "String"
																},
																"sink": {
																	"name": "Countycode",
																	"type": "String"
																}
															},
															{
																"source": {
																	"name": "Countydesc",
																	"type": "String"
																},
																"sink": {
																	"name": "Countydesc",
																	"type": "String"
																}
															},
															{
																"source": {
																	"name": "Citycode",
																	"type": "String"
																},
																"sink": {
																	"name": "Citycode",
																	"type": "String"
																}
															},
															{
																"source": {
																	"name": "Citydesc",
																	"type": "String"
																},
																"sink": {
																	"name": "Citydesc",
																	"type": "String"
																}
															},
															{
																"source": {
																	"name": "Customergrp",
																	"type": "String"
																},
																"sink": {
																	"name": "Customergrp",
																	"type": "String"
																}
															},
															{
																"source": {
																	"name": "Customergrpdesc",
																	"type": "String"
																},
																"sink": {
																	"name": "Customergrpdesc",
																	"type": "String"
																}
															},
															{
																"source": {
																	"name": "Custpricinggrp",
																	"type": "String"
																},
																"sink": {
																	"name": "Custpricinggrp",
																	"type": "String"
																}
															},
															{
																"source": {
																	"name": "Custpricinggrpdesc",
																	"type": "String"
																},
																"sink": {
																	"name": "Custpricinggrpdesc",
																	"type": "String"
																}
															},
															{
																"source": {
																	"name": "Reference",
																	"type": "String"
																},
																"sink": {
																	"name": "Reference",
																	"type": "String"
																}
															},
															{
																"source": {
																	"name": "Referencebillno",
																	"type": "String"
																},
																"sink": {
																	"name": "Referencebillno",
																	"type": "String"
																}
															},
															{
																"source": {
																	"name": "Billedqtyinsku",
																	"type": "Decimal"
																},
																"sink": {
																	"name": "Billedqtyinsku",
																	"type": "Decimal"
																}
															},
															{
																"source": {
																	"name": "Leagalstatus",
																	"type": "String"
																},
																"sink": {
																	"name": "Leagalstatus",
																	"type": "String"
																}
															},
															{
																"source": {
																	"name": "Stategsttax",
																	"type": "Decimal"
																},
																"sink": {
																	"name": "Stategsttax",
																	"type": "Decimal"
																}
															},
															{
																"source": {
																	"name": "Centralgsttax",
																	"type": "Decimal"
																},
																"sink": {
																	"name": "Centralgsttax",
																	"type": "Decimal"
																}
															},
															{
																"source": {
																	"name": "Integrgsttax",
																	"type": "Decimal"
																},
																"sink": {
																	"name": "Integrgsttax",
																	"type": "Decimal"
																}
															},
															{
																"source": {
																	"name": "Gstvalueininr",
																	"type": "Decimal"
																},
																"sink": {
																	"name": "Gstvalueininr",
																	"type": "Decimal"
																}
															},
															{
																"source": {
																	"name": "Netvalueinctaxininr",
																	"type": "Decimal"
																},
																"sink": {
																	"name": "Netvalueinctaxininr",
																	"type": "Decimal"
																}
															},
															{
																"source": {
																	"name": "Gstvalue",
																	"type": "Decimal"
																},
																"sink": {
																	"name": "Gstvalue",
																	"type": "Decimal"
																}
															},
															{
																"source": {
																	"name": "Netvalueinctax",
																	"type": "Decimal"
																},
																"sink": {
																	"name": "Netvalueinctax",
																	"type": "Decimal"
																}
															},
															{
																"source": {
																	"name": "Taxcode",
																	"type": "String"
																},
																"sink": {
																	"name": "Taxcode",
																	"type": "String"
																}
															},
															{
																"source": {
																	"name": "Batch",
																	"type": "String"
																},
																"sink": {
																	"name": "Batch",
																	"type": "String"
																}
															},
															{
																"source": {
																	"name": "Incoterms",
																	"type": "String"
																},
																"sink": {
																	"name": "Incoterms",
																	"type": "String"
																}
															},
															{
																"source": {
																	"name": "Incotermname",
																	"type": "String"
																},
																"sink": {
																	"name": "Incotermname",
																	"type": "String"
																}
															},
															{
																"source": {
																	"name": "Payterms",
																	"type": "String"
																},
																"sink": {
																	"name": "Payterms",
																	"type": "String"
																}
															},
															{
																"source": {
																	"name": "Paytremsdes",
																	"type": "String"
																},
																"sink": {
																	"name": "Paytremsdes",
																	"type": "String"
																}
															},
															{
																"source": {
																	"name": "Usageindicator",
																	"type": "String"
																},
																"sink": {
																	"name": "Usageindicator",
																	"type": "String"
																}
															},
															{
																"source": {
																	"name": "Pricelisttype",
																	"type": "String"
																},
																"sink": {
																	"name": "Pricelisttype",
																	"type": "String"
																}
															},
															{
																"source": {
																	"name": "Pricelistname",
																	"type": "String"
																},
																"sink": {
																	"name": "Pricelistname",
																	"type": "String"
																}
															},
															{
																"source": {
																	"name": "Taxtype",
																	"type": "String"
																},
																"sink": {
																	"name": "Taxtype",
																	"type": "String"
																}
															},
															{
																"source": {
																	"name": "Pricingdate",
																	"type": "DateTime"
																},
																"sink": {
																	"name": "Pricingdate",
																	"type": "DateTime"
																}
															},
															{
																"source": {
																	"name": "Locationcode",
																	"type": "String"
																},
																"sink": {
																	"name": "Locationcode",
																	"type": "String"
																}
															},
															{
																"source": {
																	"name": "Customerclass",
																	"type": "String"
																},
																"sink": {
																	"name": "Customerclass",
																	"type": "String"
																}
															},
															{
																"source": {
																	"name": "Difference",
																	"type": "Decimal"
																},
																"sink": {
																	"name": "Difference",
																	"type": "Decimal"
																}
															},
															{
																"source": {
																	"name": "Businessarea",
																	"type": "String"
																},
																"sink": {
																	"name": "Businessarea",
																	"type": "String"
																}
															},
															{
																"source": {
																	"name": "Profitcenter",
																	"type": "String"
																},
																"sink": {
																	"name": "Profitcenter",
																	"type": "String"
																}
															},
															{
																"source": {
																	"name": "Canceledstatus",
																	"type": "Boolean"
																},
																"sink": {
																	"name": "Canceledstatus",
																	"type": "Boolean"
																}
															},
															{
																"source": {
																	"name": "Taxcollectedsrc",
																	"type": "Decimal"
																},
																"sink": {
																	"name": "Taxcollectedsrc",
																	"type": "Decimal"
																}
															},
															{
																"source": {
																	"name": "Specialdiscount",
																	"type": "Decimal"
																},
																"sink": {
																	"name": "Specialdiscount",
																	"type": "Decimal"
																}
															},
															{
																"source": {
																	"name": "Quantitydiscount",
																	"type": "Decimal"
																},
																"sink": {
																	"name": "Quantitydiscount",
																	"type": "Decimal"
																}
															},
															{
																"source": {
																	"name": "Tradediscount",
																	"type": "Decimal"
																},
																"sink": {
																	"name": "Tradediscount",
																	"type": "Decimal"
																}
															},
															{
																"source": {
																	"name": "Basicprice",
																	"type": "Decimal"
																},
																"sink": {
																	"name": "Basicprice",
																	"type": "Decimal"
																}
															},
															{
																"source": {
																	"name": "Basicpricedif",
																	"type": "Decimal"
																},
																"sink": {
																	"name": "Basicpricedif",
																	"type": "Decimal"
																}
															},
															{
																"source": {
																	"name": "Mrpprice",
																	"type": "Decimal"
																},
																"sink": {
																	"name": "Mrpprice",
																	"type": "Decimal"
																}
															},
															{
																"source": {
																	"name": "Igsttax",
																	"type": "Decimal"
																},
																"sink": {
																	"name": "Igsttax",
																	"type": "Decimal"
																}
															},
															{
																"source": {
																	"name": "Freightdiscount",
																	"type": "Decimal"
																},
																"sink": {
																	"name": "Freightdiscount",
																	"type": "Decimal"
																}
															},
															{
																"source": {
																	"name": "Freightheader",
																	"type": "Decimal"
																},
																"sink": {
																	"name": "Freightheader",
																	"type": "Decimal"
																}
															},
															{
																"source": {
																	"name": "Freightdesc",
																	"type": "Decimal"
																},
																"sink": {
																	"name": "Freightdesc",
																	"type": "Decimal"
																}
															},
															{
																"source": {
																	"name": "Adhocdealermargin",
																	"type": "Decimal"
																},
																"sink": {
																	"name": "Adhocdealermargin",
																	"type": "Decimal"
																}
															},
															{
																"source": {
																	"name": "Dealermargin",
																	"type": "Decimal"
																},
																"sink": {
																	"name": "Dealermargin",
																	"type": "Decimal"
																}
															},
															{
																"source": {
																	"name": "Earlypayrebate",
																	"type": "Decimal"
																},
																"sink": {
																	"name": "Earlypayrebate",
																	"type": "Decimal"
																}
															},
															{
																"source": {
																	"name": "Cashdiscountmanual",
																	"type": "Decimal"
																},
																"sink": {
																	"name": "Cashdiscountmanual",
																	"type": "Decimal"
																}
															},
															{
																"source": {
																	"name": "Others",
																	"type": "Decimal"
																},
																"sink": {
																	"name": "Others",
																	"type": "Decimal"
																}
															},
															{
																"source": {
																	"name": "Exportcommission",
																	"type": "Decimal"
																},
																"sink": {
																	"name": "Exportcommission",
																	"type": "Decimal"
																}
															},
															{
																"source": {
																	"name": "Airfreight",
																	"type": "Decimal"
																},
																"sink": {
																	"name": "Airfreight",
																	"type": "Decimal"
																}
															},
															{
																"source": {
																	"name": "Pyqtydiscount",
																	"type": "Decimal"
																},
																"sink": {
																	"name": "Pyqtydiscount",
																	"type": "Decimal"
																}
															},
															{
																"source": {
																	"name": "Pyfreightdiscount",
																	"type": "Decimal"
																},
																"sink": {
																	"name": "Pyfreightdiscount",
																	"type": "Decimal"
																}
															},
															{
																"source": {
																	"name": "Pyearlypayrebate",
																	"type": "Decimal"
																},
																"sink": {
																	"name": "Pyearlypayrebate",
																	"type": "Decimal"
																}
															},
															{
																"source": {
																	"name": "Stategstininr",
																	"type": "Decimal"
																},
																"sink": {
																	"name": "Stategstininr",
																	"type": "Decimal"
																}
															},
															{
																"source": {
																	"name": "Integratedgstininr",
																	"type": "Decimal"
																},
																"sink": {
																	"name": "Integratedgstininr",
																	"type": "Decimal"
																}
															},
															{
																"source": {
																	"name": "Centralgstininr",
																	"type": "Decimal"
																},
																"sink": {
																	"name": "Centralgstininr",
																	"type": "Decimal"
																}
															},
															{
																"source": {
																	"name": "Stategst",
																	"type": "Decimal"
																},
																"sink": {
																	"name": "Stategst",
																	"type": "Decimal"
																}
															},
															{
																"source": {
																	"name": "Integratedgst",
																	"type": "Decimal"
																},
																"sink": {
																	"name": "Integratedgst",
																	"type": "Decimal"
																}
															},
															{
																"source": {
																	"name": "Centralgst",
																	"type": "Decimal"
																},
																"sink": {
																	"name": "Centralgst",
																	"type": "Decimal"
																}
															},
															{
																"source": {
																	"name": "Roundoff",
																	"type": "Decimal"
																},
																"sink": {
																	"name": "Roundoff",
																	"type": "Decimal"
																}
															},
															{
																"source": {
																	"name": "Sub",
																	"type": "Decimal"
																},
																"sink": {
																	"name": "Sub",
																	"type": "Decimal"
																}
															},
															{
																"source": {
																	"name": "Basicmaterial",
																	"type": "String"
																},
																"sink": {
																	"name": "Basicmaterial",
																	"type": "String"
																}
															},
															{
																"source": {
																	"name": "Duedate",
																	"type": "DateTime"
																},
																"sink": {
																	"name": "Duedate",
																	"type": "DateTime"
																}
															},
															{
																"source": {
																	"name": "Portcode",
																	"type": "String"
																},
																"sink": {
																	"name": "Portcode",
																	"type": "String"
																}
															},
															{
																"source": {
																	"name": "Shippingbillno",
																	"type": "String"
																},
																"sink": {
																	"name": "Shippingbillno",
																	"type": "String"
																}
															},
															{
																"source": {
																	"name": "Shippingbilldt",
																	"type": "DateTime"
																},
																"sink": {
																	"name": "Shippingbilldt",
																	"type": "DateTime"
																}
															},
															{
																"source": {
																	"name": "Fobvalue",
																	"type": "Decimal"
																},
																"sink": {
																	"name": "Fobvalue",
																	"type": "Decimal"
																}
															},
															{
																"source": {
																	"name": "Dispatchid",
																	"type": "String"
																},
																"sink": {
																	"name": "Dispatchid",
																	"type": "String"
																}
															},
															{
																"source": {
																	"name": "Dispatchdt",
																	"type": "DateTime"
																},
																"sink": {
																	"name": "Dispatchdt",
																	"type": "DateTime"
																}
															},
															{
																"source": {
																	"name": "Pdcchequeno",
																	"type": "String"
																},
																"sink": {
																	"name": "Pdcchequeno",
																	"type": "String"
																}
															},
															{
																"source": {
																	"name": "Pdcchequedate",
																	"type": "String"
																},
																"sink": {
																	"name": "Pdcchequedate",
																	"type": "String"
																}
															},
															{
																"source": {
																	"name": "Pdcchequeval",
																	"type": "Decimal"
																},
																"sink": {
																	"name": "Pdcchequeval",
																	"type": "Decimal"
																}
															},
															{
																"source": {
																	"name": "Pdcbankname",
																	"type": "String"
																},
																"sink": {
																	"name": "Pdcbankname",
																	"type": "String"
																}
															},
															{
																"source": {
																	"name": "Controlcode",
																	"type": "String"
																},
																"sink": {
																	"name": "Controlcode",
																	"type": "String"
																}
															},
															{
																"source": {
																	"name": "Einvirn",
																	"type": "String"
																},
																"sink": {
																	"name": "Einvirn",
																	"type": "String"
																}
															},
															{
																"source": {
																	"name": "Shippingcondition",
																	"type": "String"
																},
																"sink": {
																	"name": "Shippingcondition",
																	"type": "String"
																}
															},
															{
																"source": {
																	"name": "Containerid",
																	"type": "String"
																},
																"sink": {
																	"name": "Containerid",
																	"type": "String"
																}
															},
															{
																"source": {
																	"name": "Lrnumber",
																	"type": "String"
																},
																"sink": {
																	"name": "Lrnumber",
																	"type": "String"
																}
															}
														]
													}
												},
												"inputs": [
													{
														"referenceName": "DS_OData_SAP_HANA_QA",
														"type": "DatasetReference",
														"parameters": {}
													}
												],
												"outputs": [
													{
														"referenceName": "DS_AzureSqlTable_SalesInvoice",
														"type": "DatasetReference",
														"parameters": {}
													}
												]
											}
										],
										"ifTrueActivities": [
											{
												"name": "Set variable1",
												"type": "SetVariable",
												"dependsOn": [],
												"userProperties": [],
												"typeProperties": {
													"variableName": "flag",
													"value": {
														"value": "@bool('true')",
														"type": "Expression"
													}
												}
											}
										]
									}
								}
							],
							"timeout": "0.00:00:00"
						}
					},
					{
						"name": "startValuefomPipeline",
						"type": "SetVariable",
						"dependsOn": [
							{
								"activity": "delete old records",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"variableName": "startValue",
							"value": {
								"value": "@subtractFromTime(pipeline().parameters.P_StartDate, 1, 'Day')",
								"type": "Expression"
							}
						}
					},
					{
						"name": "updateWaterMark",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [
							{
								"activity": "New Watermark Time Value",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[dbo].[SP_update_watermark]",
							"storedProcedureParameters": {
								"TabName": {
									"value": "InvoiceSales",
									"type": "String"
								},
								"LastModifiedDate": {
									"value": {
										"value": "@activity('New Watermark Date Value').output.firstRow.maxDate",
										"type": "Expression"
									},
									"type": "Datetime"
								},
								"LastModifiedtime": {
									"value": {
										"value": "@activity('New Watermark Time Value').output.firstRow.maxTime",
										"type": "Expression"
									},
									"type": "Timespan"
								}
							}
						},
						"linkedServiceName": {
							"referenceName": "LS_AzureSqlDatabase",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "New Watermark Date Value",
						"type": "Lookup",
						"dependsOn": [
							{
								"activity": "Until1",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderQuery": {
									"value": "select MAX(Invoicecrdate ) as maxDate FROM [dbo].[InvoiceSales]",
									"type": "Expression"
								},
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "DS_AzureSqlTable",
								"type": "DatasetReference",
								"parameters": {}
							}
						}
					},
					{
						"name": "New Watermark Time Value",
						"type": "Lookup",
						"dependsOn": [
							{
								"activity": "New Watermark Date Value",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderQuery": {
									"value": "select MAX(Invoicecrtime) as maxTime FROM [dbo].[InvoiceSales] where Invoicecrdate= ( select MAX(Invoicecrdate ) FROM [dbo].[InvoiceSales])",
									"type": "Expression"
								},
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "DS_AzureSqlTable",
								"type": "DatasetReference",
								"parameters": {}
							}
						}
					},
					{
						"name": "Set variable2",
						"type": "SetVariable",
						"dependsOn": [],
						"userProperties": [],
						"typeProperties": {
							"variableName": "d_startdate",
							"value": {
								"value": "@substring(pipeline().parameters.P_StartDate,0,18)",
								"type": "Expression"
							}
						}
					},
					{
						"name": "Set variable2_copy1",
						"type": "SetVariable",
						"dependsOn": [
							{
								"activity": "Set variable2",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"variableName": "d_enddate",
							"value": {
								"value": "@substring(pipeline().parameters.P_EndDate,0,18)",
								"type": "Expression"
							}
						}
					},
					{
						"name": "delete old records",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [
							{
								"activity": "Set variable2_copy1",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[dbo].[SP_deleteRecords]",
							"storedProcedureParameters": {
								"D_StartDate": {
									"value": {
										"value": "@variables('d_startdate')",
										"type": "Expression"
									},
									"type": "String"
								},
								"D_EndDate": {
									"value": {
										"value": "@variables('d_enddate')",
										"type": "Expression"
									},
									"type": "String"
								}
							}
						},
						"linkedServiceName": {
							"referenceName": "LS_AzureSqlDatabase",
							"type": "LinkedServiceReference"
						}
					}
				],
				"parameters": {
					"P_StartDate": {
						"type": "string",
						"defaultValue": "2019-11-01T00:00:00Z"
					},
					"P_EndDate": {
						"type": "string",
						"defaultValue": "2021-07-25T00:00:00Z"
					}
				},
				"variables": {
					"flag": {
						"type": "Boolean",
						"defaultValue": false
					},
					"startValue": {
						"type": "String"
					},
					"fromDate": {
						"type": "String"
					},
					"fromDateRZ": {
						"type": "String"
					},
					"d_startdate": {
						"type": "String"
					},
					"d_enddate": {
						"type": "String"
					}
				},
				"folder": {
					"name": "QA"
				},
				"annotations": [],
				"lastPublishTime": "2021-07-28T03:07:50Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/LS_AzureSqlDatabase')]",
				"[concat(variables('factoryId'), '/datasets/DS_AzureSqlTable')]",
				"[concat(variables('factoryId'), '/datasets/DS_OData_SAP_HANA_QA')]",
				"[concat(variables('factoryId'), '/datasets/DS_AzureSqlTable_SalesInvoice')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/SalesInvoice_day_wise_Full_Load_oData_QA_pipeline_copy1')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Until1",
						"type": "Until",
						"dependsOn": [
							{
								"activity": "startValuefomPipeline",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"expression": {
								"value": "@bool(variables('flag'))",
								"type": "Expression"
							},
							"activities": [
								{
									"name": "fromDate",
									"type": "SetVariable",
									"dependsOn": [],
									"userProperties": [],
									"typeProperties": {
										"variableName": "fromDate",
										"value": {
											"value": "@addToTime(variables('startValue'), 1, 'Day')",
											"type": "Expression"
										}
									}
								},
								{
									"name": "startValue",
									"type": "SetVariable",
									"dependsOn": [
										{
											"activity": "fromDate",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"userProperties": [],
									"typeProperties": {
										"variableName": "startValue",
										"value": {
											"value": "@variables('fromDate')",
											"type": "Expression"
										}
									}
								},
								{
									"name": "removeZ",
									"type": "SetVariable",
									"dependsOn": [
										{
											"activity": "fromDate",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"userProperties": [],
									"typeProperties": {
										"variableName": "fromDateRZ",
										"value": {
											"value": "@substring(variables('fromDate'), 0, 18)",
											"type": "Expression"
										}
									}
								},
								{
									"name": "If Condition2",
									"type": "IfCondition",
									"dependsOn": [
										{
											"activity": "removeZ",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"userProperties": [],
									"typeProperties": {
										"expression": {
											"value": "@if(equals(addHours(variables('fromDate'),0),addHours(pipeline().parameters.P_EndDate,0)) , 'true', 'false')",
											"type": "Expression"
										},
										"ifFalseActivities": [
											{
												"name": "copy to SQL",
												"type": "Copy",
												"dependsOn": [],
												"policy": {
													"timeout": "7.00:00:00",
													"retry": 0,
													"retryIntervalInSeconds": 30,
													"secureOutput": false,
													"secureInput": false
												},
												"userProperties": [],
												"typeProperties": {
													"source": {
														"type": "ODataSource",
														"query": {
															"value": "$filter=Invoicecrdate eq datetime'@{variables('fromDateRZ')}'",
															"type": "Expression"
														},
														"httpRequestTimeout": "00:05:00"
													},
													"sink": {
														"type": "AzureSqlSink",
														"writeBehavior": "insert",
														"tableOption": "autoCreate",
														"disableMetricsCollection": false
													},
													"enableStaging": false
												},
												"inputs": [
													{
														"referenceName": "DS_OData_SAP_HANA_QA",
														"type": "DatasetReference",
														"parameters": {}
													}
												],
												"outputs": [
													{
														"referenceName": "DS_AzureSqlTable_SalesInvoice",
														"type": "DatasetReference",
														"parameters": {}
													}
												]
											}
										],
										"ifTrueActivities": [
											{
												"name": "Set variable1",
												"type": "SetVariable",
												"dependsOn": [],
												"userProperties": [],
												"typeProperties": {
													"variableName": "flag",
													"value": {
														"value": "@bool('true')",
														"type": "Expression"
													}
												}
											}
										]
									}
								}
							],
							"timeout": "0.00:00:00"
						}
					},
					{
						"name": "startValuefomPipeline",
						"type": "SetVariable",
						"dependsOn": [],
						"userProperties": [],
						"typeProperties": {
							"variableName": "startValue",
							"value": {
								"value": "@subtractFromTime(pipeline().parameters.P_StartDate, 1, 'Day')\n",
								"type": "Expression"
							}
						}
					}
				],
				"parameters": {
					"P_StartDate": {
						"type": "string",
						"defaultValue": "2019-11-01T00:00:00Z"
					},
					"P_EndDate": {
						"type": "string",
						"defaultValue": "2019-12-30T00:00:00Z"
					}
				},
				"variables": {
					"flag": {
						"type": "Boolean",
						"defaultValue": false
					},
					"startValue": {
						"type": "String"
					},
					"fromDate": {
						"type": "String"
					},
					"fromDateRZ": {
						"type": "String"
					}
				},
				"folder": {
					"name": "QA"
				},
				"annotations": [],
				"lastPublishTime": "2021-07-26T18:33:03Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/DS_OData_SAP_HANA_QA')]",
				"[concat(variables('factoryId'), '/datasets/DS_AzureSqlTable_SalesInvoice')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/SalesInvoice_day_wise_Full_Load_oData_QA_pipeline_copy2')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Until1",
						"type": "Until",
						"dependsOn": [
							{
								"activity": "startValuefomPipeline",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"expression": {
								"value": "@bool(variables('flag'))",
								"type": "Expression"
							},
							"activities": [
								{
									"name": "fromDate",
									"type": "SetVariable",
									"dependsOn": [],
									"userProperties": [],
									"typeProperties": {
										"variableName": "fromDate",
										"value": {
											"value": "@addToTime(variables('startValue'), 1, 'Day')",
											"type": "Expression"
										}
									}
								},
								{
									"name": "startValue",
									"type": "SetVariable",
									"dependsOn": [
										{
											"activity": "fromDate",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"userProperties": [],
									"typeProperties": {
										"variableName": "startValue",
										"value": {
											"value": "@variables('fromDate')",
											"type": "Expression"
										}
									}
								},
								{
									"name": "removeZ",
									"type": "SetVariable",
									"dependsOn": [
										{
											"activity": "fromDate",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"userProperties": [],
									"typeProperties": {
										"variableName": "fromDateRZ",
										"value": {
											"value": "@substring(variables('fromDate'), 0, 18)",
											"type": "Expression"
										}
									}
								},
								{
									"name": "If Condition2",
									"type": "IfCondition",
									"dependsOn": [
										{
											"activity": "removeZ",
											"dependencyConditions": [
												"Succeeded"
											]
										},
										{
											"activity": "startValue",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"userProperties": [],
									"typeProperties": {
										"expression": {
											"value": "@if(equals(adddays(variables('startValue'),0),adddays(pipeline().parameters.P_EndDate,1)) , 'true', 'false')",
											"type": "Expression"
										},
										"ifFalseActivities": [
											{
												"name": "Copy SalesInvoice to SQL",
												"type": "Copy",
												"dependsOn": [],
												"policy": {
													"timeout": "7.00:00:00",
													"retry": 0,
													"retryIntervalInSeconds": 30,
													"secureOutput": false,
													"secureInput": false
												},
												"userProperties": [],
												"typeProperties": {
													"source": {
														"type": "ODataSource",
														"query": {
															"value": "$filter=Invoicecrdate eq datetime'@{variables('fromDateRZ')}'",
															"type": "Expression"
														},
														"httpRequestTimeout": "00:30:00"
													},
													"sink": {
														"type": "AzureSqlSink",
														"writeBehavior": "insert",
														"disableMetricsCollection": false
													},
													"enableStaging": false,
													"enableSkipIncompatibleRow": false,
													"translator": {
														"type": "TabularTranslator",
														"mappings": [
															{
																"source": {
																	"name": "Billingdoc",
																	"type": "String"
																},
																"sink": {
																	"name": "Billingdoc",
																	"type": "String"
																}
															},
															{
																"source": {
																	"name": "Item",
																	"type": "String"
																},
																"sink": {
																	"name": "Item",
																	"type": "String"
																}
															},
															{
																"source": {
																	"name": "Companycode",
																	"type": "String"
																},
																"sink": {
																	"name": "Companycode",
																	"type": "String"
																}
															},
															{
																"source": {
																	"name": "Salesorg",
																	"type": "String"
																},
																"sink": {
																	"name": "Salesorg",
																	"type": "String"
																}
															},
															{
																"source": {
																	"name": "Ewaybillno",
																	"type": "String"
																},
																"sink": {
																	"name": "Ewaybillno",
																	"type": "String"
																}
															},
															{
																"source": {
																	"name": "Exportexinvno",
																	"type": "String"
																},
																"sink": {
																	"name": "Exportexinvno",
																	"type": "String"
																}
															},
															{
																"source": {
																	"name": "Exportexinvdt",
																	"type": "DateTime"
																},
																"sink": {
																	"name": "Exportexinvdt",
																	"type": "DateTime"
																}
															},
															{
																"source": {
																	"name": "Accexchangerate",
																	"type": "Decimal"
																},
																"sink": {
																	"name": "Accexchangerate",
																	"type": "Decimal"
																}
															},
															{
																"source": {
																	"name": "Netvalue",
																	"type": "Decimal"
																},
																"sink": {
																	"name": "Netvalue",
																	"type": "Decimal"
																}
															},
															{
																"source": {
																	"name": "Doccurrency",
																	"type": "String"
																},
																"sink": {
																	"name": "Doccurrency",
																	"type": "String"
																}
															},
															{
																"source": {
																	"name": "Loccuramt",
																	"type": "Decimal"
																},
																"sink": {
																	"name": "Loccuramt",
																	"type": "Decimal"
																}
															},
															{
																"source": {
																	"name": "Gstin",
																	"type": "String"
																},
																"sink": {
																	"name": "Gstin",
																	"type": "String"
																}
															},
															{
																"source": {
																	"name": "Region",
																	"type": "String"
																},
																"sink": {
																	"name": "Region",
																	"type": "String"
																}
															},
															{
																"source": {
																	"name": "Regionname",
																	"type": "String"
																},
																"sink": {
																	"name": "Regionname",
																	"type": "String"
																}
															},
															{
																"source": {
																	"name": "Regiondlvplant",
																	"type": "String"
																},
																"sink": {
																	"name": "Regiondlvplant",
																	"type": "String"
																}
															},
															{
																"source": {
																	"name": "Customerrefdate",
																	"type": "DateTime"
																},
																"sink": {
																	"name": "Customerrefdate",
																	"type": "DateTime"
																}
															},
															{
																"source": {
																	"name": "Grossvalue",
																	"type": "Decimal"
																},
																"sink": {
																	"name": "Grossvalue",
																	"type": "Decimal"
																}
															},
															{
																"source": {
																	"name": "Invoicedate",
																	"type": "DateTime"
																},
																"sink": {
																	"name": "Invoicedate",
																	"type": "DateTime"
																}
															},
															{
																"source": {
																	"name": "Invoicetime",
																	"type": "TimeSpan"
																},
																"sink": {
																	"name": "Invoicetime",
																	"type": "TimeSpan"
																}
															},
															{
																"source": {
																	"name": "Changedon",
																	"type": "DateTime"
																},
																"sink": {
																	"name": "Changedon",
																	"type": "DateTime"
																}
															},
															{
																"source": {
																	"name": "Businessplace",
																	"type": "String"
																},
																"sink": {
																	"name": "Businessplace",
																	"type": "String"
																}
															},
															{
																"source": {
																	"name": "Plant",
																	"type": "String"
																},
																"sink": {
																	"name": "Plant",
																	"type": "String"
																}
															},
															{
																"source": {
																	"name": "Plantdesc",
																	"type": "String"
																},
																"sink": {
																	"name": "Plantdesc",
																	"type": "String"
																}
															},
															{
																"source": {
																	"name": "Billingtype",
																	"type": "String"
																},
																"sink": {
																	"name": "Billingtype",
																	"type": "String"
																}
															},
															{
																"source": {
																	"name": "Deldocno",
																	"type": "String"
																},
																"sink": {
																	"name": "Deldocno",
																	"type": "String"
																}
															},
															{
																"source": {
																	"name": "Deldocdate",
																	"type": "DateTime"
																},
																"sink": {
																	"name": "Deldocdate",
																	"type": "DateTime"
																}
															},
															{
																"source": {
																	"name": "Orderno",
																	"type": "String"
																},
																"sink": {
																	"name": "Orderno",
																	"type": "String"
																}
															},
															{
																"source": {
																	"name": "Orderqunatity",
																	"type": "Decimal"
																},
																"sink": {
																	"name": "Orderqunatity",
																	"type": "Decimal"
																}
															},
															{
																"source": {
																	"name": "Ordercreatedtime",
																	"type": "TimeSpan"
																},
																"sink": {
																	"name": "Ordercreatedtime",
																	"type": "TimeSpan"
																}
															},
															{
																"source": {
																	"name": "Requesteddeldate",
																	"type": "DateTime"
																},
																"sink": {
																	"name": "Requesteddeldate",
																	"type": "DateTime"
																}
															},
															{
																"source": {
																	"name": "Orderstatus",
																	"type": "String"
																},
																"sink": {
																	"name": "Orderstatus",
																	"type": "String"
																}
															},
															{
																"source": {
																	"name": "Salesordertype",
																	"type": "String"
																},
																"sink": {
																	"name": "Salesordertype",
																	"type": "String"
																}
															},
															{
																"source": {
																	"name": "Distchannel",
																	"type": "String"
																},
																"sink": {
																	"name": "Distchannel",
																	"type": "String"
																}
															},
															{
																"source": {
																	"name": "Division",
																	"type": "String"
																},
																"sink": {
																	"name": "Division",
																	"type": "String"
																}
															},
															{
																"source": {
																	"name": "Customer",
																	"type": "String"
																},
																"sink": {
																	"name": "Customer",
																	"type": "String"
																}
															},
															{
																"source": {
																	"name": "Customername",
																	"type": "String"
																},
																"sink": {
																	"name": "Customername",
																	"type": "String"
																}
															},
															{
																"source": {
																	"name": "Customercountry",
																	"type": "String"
																},
																"sink": {
																	"name": "Customercountry",
																	"type": "String"
																}
															},
															{
																"source": {
																	"name": "Customercountrydesc",
																	"type": "String"
																},
																"sink": {
																	"name": "Customercountrydesc",
																	"type": "String"
																}
															},
															{
																"source": {
																	"name": "Materialpricegrp",
																	"type": "String"
																},
																"sink": {
																	"name": "Materialpricegrp",
																	"type": "String"
																}
															},
															{
																"source": {
																	"name": "Materialpricegrpdesc",
																	"type": "String"
																},
																"sink": {
																	"name": "Materialpricegrpdesc",
																	"type": "String"
																}
															},
															{
																"source": {
																	"name": "Material",
																	"type": "String"
																},
																"sink": {
																	"name": "Material",
																	"type": "String"
																}
															},
															{
																"source": {
																	"name": "Materialdes",
																	"type": "String"
																},
																"sink": {
																	"name": "Materialdes",
																	"type": "String"
																}
															},
															{
																"source": {
																	"name": "Brand",
																	"type": "String"
																},
																"sink": {
																	"name": "Brand",
																	"type": "String"
																}
															},
															{
																"source": {
																	"name": "Brandname",
																	"type": "String"
																},
																"sink": {
																	"name": "Brandname",
																	"type": "String"
																}
															},
															{
																"source": {
																	"name": "Productgroup",
																	"type": "String"
																},
																"sink": {
																	"name": "Productgroup",
																	"type": "String"
																}
															},
															{
																"source": {
																	"name": "Productgrpdesc",
																	"type": "String"
																},
																"sink": {
																	"name": "Productgrpdesc",
																	"type": "String"
																}
															},
															{
																"source": {
																	"name": "Productheirarchy",
																	"type": "String"
																},
																"sink": {
																	"name": "Productheirarchy",
																	"type": "String"
																}
															},
															{
																"source": {
																	"name": "Productheirarchydes",
																	"type": "String"
																},
																"sink": {
																	"name": "Productheirarchydes",
																	"type": "String"
																}
															},
															{
																"source": {
																	"name": "Materialtype",
																	"type": "String"
																},
																"sink": {
																	"name": "Materialtype",
																	"type": "String"
																}
															},
															{
																"source": {
																	"name": "Materialgrp1",
																	"type": "String"
																},
																"sink": {
																	"name": "Materialgrp1",
																	"type": "String"
																}
															},
															{
																"source": {
																	"name": "Materialgrp1des",
																	"type": "String"
																},
																"sink": {
																	"name": "Materialgrp1des",
																	"type": "String"
																}
															},
															{
																"source": {
																	"name": "Materialgrp2",
																	"type": "String"
																},
																"sink": {
																	"name": "Materialgrp2",
																	"type": "String"
																}
															},
															{
																"source": {
																	"name": "Materialgrp2des",
																	"type": "String"
																},
																"sink": {
																	"name": "Materialgrp2des",
																	"type": "String"
																}
															},
															{
																"source": {
																	"name": "Materialgrp3",
																	"type": "String"
																},
																"sink": {
																	"name": "Materialgrp3",
																	"type": "String"
																}
															},
															{
																"source": {
																	"name": "Materialgrp3des",
																	"type": "String"
																},
																"sink": {
																	"name": "Materialgrp3des",
																	"type": "String"
																}
															},
															{
																"source": {
																	"name": "Materialgrp4",
																	"type": "String"
																},
																"sink": {
																	"name": "Materialgrp4",
																	"type": "String"
																}
															},
															{
																"source": {
																	"name": "Materialgrp4des",
																	"type": "String"
																},
																"sink": {
																	"name": "Materialgrp4des",
																	"type": "String"
																}
															},
															{
																"source": {
																	"name": "Materialgrp5",
																	"type": "String"
																},
																"sink": {
																	"name": "Materialgrp5",
																	"type": "String"
																}
															},
															{
																"source": {
																	"name": "Materialgrp5des",
																	"type": "String"
																},
																"sink": {
																	"name": "Materialgrp5des",
																	"type": "String"
																}
															},
															{
																"source": {
																	"name": "Pckmatgrp",
																	"type": "String"
																},
																"sink": {
																	"name": "Pckmatgrp",
																	"type": "String"
																}
															},
															{
																"source": {
																	"name": "Pckmatgrpdes",
																	"type": "String"
																},
																"sink": {
																	"name": "Pckmatgrpdes",
																	"type": "String"
																}
															},
															{
																"source": {
																	"name": "Salesgrp",
																	"type": "String"
																},
																"sink": {
																	"name": "Salesgrp",
																	"type": "String"
																}
															},
															{
																"source": {
																	"name": "Salesgrpdes",
																	"type": "String"
																},
																"sink": {
																	"name": "Salesgrpdes",
																	"type": "String"
																}
															},
															{
																"source": {
																	"name": "Salesofc",
																	"type": "String"
																},
																"sink": {
																	"name": "Salesofc",
																	"type": "String"
																}
															},
															{
																"source": {
																	"name": "Salesofcdes",
																	"type": "String"
																},
																"sink": {
																	"name": "Salesofcdes",
																	"type": "String"
																}
															},
															{
																"source": {
																	"name": "Salesdistrict",
																	"type": "String"
																},
																"sink": {
																	"name": "Salesdistrict",
																	"type": "String"
																}
															},
															{
																"source": {
																	"name": "Salesdistrictname",
																	"type": "String"
																},
																"sink": {
																	"name": "Salesdistrictname",
																	"type": "String"
																}
															},
															{
																"source": {
																	"name": "Orderpono",
																	"type": "String"
																},
																"sink": {
																	"name": "Orderpono",
																	"type": "String"
																}
															},
															{
																"source": {
																	"name": "City",
																	"type": "String"
																},
																"sink": {
																	"name": "City",
																	"type": "String"
																}
															},
															{
																"source": {
																	"name": "Crcontrolarea",
																	"type": "String"
																},
																"sink": {
																	"name": "Crcontrolarea",
																	"type": "String"
																}
															},
															{
																"source": {
																	"name": "Uom",
																	"type": "String"
																},
																"sink": {
																	"name": "Uom",
																	"type": "String"
																}
															},
															{
																"source": {
																	"name": "Billoflanding",
																	"type": "String"
																},
																"sink": {
																	"name": "Billoflanding",
																	"type": "String"
																}
															},
															{
																"source": {
																	"name": "Invoicecrdate",
																	"type": "DateTime"
																},
																"sink": {
																	"name": "Invoicecrdate",
																	"type": "DateTime"
																}
															},
															{
																"source": {
																	"name": "Invoicecrtime",
																	"type": "TimeSpan"
																},
																"sink": {
																	"name": "Invoicecrtime",
																	"type": "TimeSpan"
																}
															},
															{
																"source": {
																	"name": "Invoicecruser",
																	"type": "String"
																},
																"sink": {
																	"name": "Invoicecruser",
																	"type": "String"
																}
															},
															{
																"source": {
																	"name": "Invservrenddate",
																	"type": "DateTime"
																},
																"sink": {
																	"name": "Invservrenddate",
																	"type": "DateTime"
																}
															},
															{
																"source": {
																	"name": "Ordercreateddate",
																	"type": "DateTime"
																},
																"sink": {
																	"name": "Ordercreateddate",
																	"type": "DateTime"
																}
															},
															{
																"source": {
																	"name": "Ordercreateduser",
																	"type": "String"
																},
																"sink": {
																	"name": "Ordercreateduser",
																	"type": "String"
																}
															},
															{
																"source": {
																	"name": "Oderpricingdate",
																	"type": "DateTime"
																},
																"sink": {
																	"name": "Oderpricingdate",
																	"type": "DateTime"
																}
															},
															{
																"source": {
																	"name": "Delcrdate",
																	"type": "DateTime"
																},
																"sink": {
																	"name": "Delcrdate",
																	"type": "DateTime"
																}
															},
															{
																"source": {
																	"name": "Delcrname",
																	"type": "String"
																},
																"sink": {
																	"name": "Delcrname",
																	"type": "String"
																}
															},
															{
																"source": {
																	"name": "Delgoodsissue",
																	"type": "DateTime"
																},
																"sink": {
																	"name": "Delgoodsissue",
																	"type": "DateTime"
																}
															},
															{
																"source": {
																	"name": "Wholesaleid",
																	"type": "String"
																},
																"sink": {
																	"name": "Wholesaleid",
																	"type": "String"
																}
															},
															{
																"source": {
																	"name": "Retailid",
																	"type": "String"
																},
																"sink": {
																	"name": "Retailid",
																	"type": "String"
																}
															},
															{
																"source": {
																	"name": "Meansoftrans",
																	"type": "String"
																},
																"sink": {
																	"name": "Meansoftrans",
																	"type": "String"
																}
															},
															{
																"source": {
																	"name": "Meansoftransdesc",
																	"type": "String"
																},
																"sink": {
																	"name": "Meansoftransdesc",
																	"type": "String"
																}
															},
															{
																"source": {
																	"name": "Vehicleno",
																	"type": "String"
																},
																"sink": {
																	"name": "Vehicleno",
																	"type": "String"
																}
															},
															{
																"source": {
																	"name": "Plannedgi",
																	"type": "DateTime"
																},
																"sink": {
																	"name": "Plannedgi",
																	"type": "DateTime"
																}
															},
															{
																"source": {
																	"name": "Shiptoparty",
																	"type": "String"
																},
																"sink": {
																	"name": "Shiptoparty",
																	"type": "String"
																}
															},
															{
																"source": {
																	"name": "Shiptopartydesc",
																	"type": "String"
																},
																"sink": {
																	"name": "Shiptopartydesc",
																	"type": "String"
																}
															},
															{
																"source": {
																	"name": "Exchangerate",
																	"type": "Decimal"
																},
																"sink": {
																	"name": "Exchangerate",
																	"type": "Decimal"
																}
															},
															{
																"source": {
																	"name": "Orderreason",
																	"type": "String"
																},
																"sink": {
																	"name": "Orderreason",
																	"type": "String"
																}
															},
															{
																"source": {
																	"name": "Shippingcountrycode",
																	"type": "String"
																},
																"sink": {
																	"name": "Shippingcountrycode",
																	"type": "String"
																}
															},
															{
																"source": {
																	"name": "Shippingcountrydesc",
																	"type": "String"
																},
																"sink": {
																	"name": "Shippingcountrydesc",
																	"type": "String"
																}
															},
															{
																"source": {
																	"name": "Shippingcitycode",
																	"type": "String"
																},
																"sink": {
																	"name": "Shippingcitycode",
																	"type": "String"
																}
															},
															{
																"source": {
																	"name": "Countycode",
																	"type": "String"
																},
																"sink": {
																	"name": "Countycode",
																	"type": "String"
																}
															},
															{
																"source": {
																	"name": "Countydesc",
																	"type": "String"
																},
																"sink": {
																	"name": "Countydesc",
																	"type": "String"
																}
															},
															{
																"source": {
																	"name": "Citycode",
																	"type": "String"
																},
																"sink": {
																	"name": "Citycode",
																	"type": "String"
																}
															},
															{
																"source": {
																	"name": "Citydesc",
																	"type": "String"
																},
																"sink": {
																	"name": "Citydesc",
																	"type": "String"
																}
															},
															{
																"source": {
																	"name": "Customergrp",
																	"type": "String"
																},
																"sink": {
																	"name": "Customergrp",
																	"type": "String"
																}
															},
															{
																"source": {
																	"name": "Customergrpdesc",
																	"type": "String"
																},
																"sink": {
																	"name": "Customergrpdesc",
																	"type": "String"
																}
															},
															{
																"source": {
																	"name": "Custpricinggrp",
																	"type": "String"
																},
																"sink": {
																	"name": "Custpricinggrp",
																	"type": "String"
																}
															},
															{
																"source": {
																	"name": "Custpricinggrpdesc",
																	"type": "String"
																},
																"sink": {
																	"name": "Custpricinggrpdesc",
																	"type": "String"
																}
															},
															{
																"source": {
																	"name": "Reference",
																	"type": "String"
																},
																"sink": {
																	"name": "Reference",
																	"type": "String"
																}
															},
															{
																"source": {
																	"name": "Referencebillno",
																	"type": "String"
																},
																"sink": {
																	"name": "Referencebillno",
																	"type": "String"
																}
															},
															{
																"source": {
																	"name": "Billedqtyinsku",
																	"type": "Decimal"
																},
																"sink": {
																	"name": "Billedqtyinsku",
																	"type": "Decimal"
																}
															},
															{
																"source": {
																	"name": "Leagalstatus",
																	"type": "String"
																},
																"sink": {
																	"name": "Leagalstatus",
																	"type": "String"
																}
															},
															{
																"source": {
																	"name": "Stategsttax",
																	"type": "Decimal"
																},
																"sink": {
																	"name": "Stategsttax",
																	"type": "Decimal"
																}
															},
															{
																"source": {
																	"name": "Centralgsttax",
																	"type": "Decimal"
																},
																"sink": {
																	"name": "Centralgsttax",
																	"type": "Decimal"
																}
															},
															{
																"source": {
																	"name": "Integrgsttax",
																	"type": "Decimal"
																},
																"sink": {
																	"name": "Integrgsttax",
																	"type": "Decimal"
																}
															},
															{
																"source": {
																	"name": "Gstvalueininr",
																	"type": "Decimal"
																},
																"sink": {
																	"name": "Gstvalueininr",
																	"type": "Decimal"
																}
															},
															{
																"source": {
																	"name": "Netvalueinctaxininr",
																	"type": "Decimal"
																},
																"sink": {
																	"name": "Netvalueinctaxininr",
																	"type": "Decimal"
																}
															},
															{
																"source": {
																	"name": "Gstvalue",
																	"type": "Decimal"
																},
																"sink": {
																	"name": "Gstvalue",
																	"type": "Decimal"
																}
															},
															{
																"source": {
																	"name": "Netvalueinctax",
																	"type": "Decimal"
																},
																"sink": {
																	"name": "Netvalueinctax",
																	"type": "Decimal"
																}
															},
															{
																"source": {
																	"name": "Taxcode",
																	"type": "String"
																},
																"sink": {
																	"name": "Taxcode",
																	"type": "String"
																}
															},
															{
																"source": {
																	"name": "Batch",
																	"type": "String"
																},
																"sink": {
																	"name": "Batch",
																	"type": "String"
																}
															},
															{
																"source": {
																	"name": "Incoterms",
																	"type": "String"
																},
																"sink": {
																	"name": "Incoterms",
																	"type": "String"
																}
															},
															{
																"source": {
																	"name": "Incotermname",
																	"type": "String"
																},
																"sink": {
																	"name": "Incotermname",
																	"type": "String"
																}
															},
															{
																"source": {
																	"name": "Payterms",
																	"type": "String"
																},
																"sink": {
																	"name": "Payterms",
																	"type": "String"
																}
															},
															{
																"source": {
																	"name": "Paytremsdes",
																	"type": "String"
																},
																"sink": {
																	"name": "Paytremsdes",
																	"type": "String"
																}
															},
															{
																"source": {
																	"name": "Usageindicator",
																	"type": "String"
																},
																"sink": {
																	"name": "Usageindicator",
																	"type": "String"
																}
															},
															{
																"source": {
																	"name": "Pricelisttype",
																	"type": "String"
																},
																"sink": {
																	"name": "Pricelisttype",
																	"type": "String"
																}
															},
															{
																"source": {
																	"name": "Pricelistname",
																	"type": "String"
																},
																"sink": {
																	"name": "Pricelistname",
																	"type": "String"
																}
															},
															{
																"source": {
																	"name": "Taxtype",
																	"type": "String"
																},
																"sink": {
																	"name": "Taxtype",
																	"type": "String"
																}
															},
															{
																"source": {
																	"name": "Pricingdate",
																	"type": "DateTime"
																},
																"sink": {
																	"name": "Pricingdate",
																	"type": "DateTime"
																}
															},
															{
																"source": {
																	"name": "Locationcode",
																	"type": "String"
																},
																"sink": {
																	"name": "Locationcode",
																	"type": "String"
																}
															},
															{
																"source": {
																	"name": "Customerclass",
																	"type": "String"
																},
																"sink": {
																	"name": "Customerclass",
																	"type": "String"
																}
															},
															{
																"source": {
																	"name": "Difference",
																	"type": "Decimal"
																},
																"sink": {
																	"name": "Difference",
																	"type": "Decimal"
																}
															},
															{
																"source": {
																	"name": "Businessarea",
																	"type": "String"
																},
																"sink": {
																	"name": "Businessarea",
																	"type": "String"
																}
															},
															{
																"source": {
																	"name": "Profitcenter",
																	"type": "String"
																},
																"sink": {
																	"name": "Profitcenter",
																	"type": "String"
																}
															},
															{
																"source": {
																	"name": "Canceledstatus",
																	"type": "Boolean"
																},
																"sink": {
																	"name": "Canceledstatus",
																	"type": "Boolean"
																}
															},
															{
																"source": {
																	"name": "Taxcollectedsrc",
																	"type": "Decimal"
																},
																"sink": {
																	"name": "Taxcollectedsrc",
																	"type": "Decimal"
																}
															},
															{
																"source": {
																	"name": "Specialdiscount",
																	"type": "Decimal"
																},
																"sink": {
																	"name": "Specialdiscount",
																	"type": "Decimal"
																}
															},
															{
																"source": {
																	"name": "Quantitydiscount",
																	"type": "Decimal"
																},
																"sink": {
																	"name": "Quantitydiscount",
																	"type": "Decimal"
																}
															},
															{
																"source": {
																	"name": "Tradediscount",
																	"type": "Decimal"
																},
																"sink": {
																	"name": "Tradediscount",
																	"type": "Decimal"
																}
															},
															{
																"source": {
																	"name": "Basicprice",
																	"type": "Decimal"
																},
																"sink": {
																	"name": "Basicprice",
																	"type": "Decimal"
																}
															},
															{
																"source": {
																	"name": "Basicpricedif",
																	"type": "Decimal"
																},
																"sink": {
																	"name": "Basicpricedif",
																	"type": "Decimal"
																}
															},
															{
																"source": {
																	"name": "Mrpprice",
																	"type": "Decimal"
																},
																"sink": {
																	"name": "Mrpprice",
																	"type": "Decimal"
																}
															},
															{
																"source": {
																	"name": "Igsttax",
																	"type": "Decimal"
																},
																"sink": {
																	"name": "Igsttax",
																	"type": "Decimal"
																}
															},
															{
																"source": {
																	"name": "Freightdiscount",
																	"type": "Decimal"
																},
																"sink": {
																	"name": "Freightdiscount",
																	"type": "Decimal"
																}
															},
															{
																"source": {
																	"name": "Freightheader",
																	"type": "Decimal"
																},
																"sink": {
																	"name": "Freightheader",
																	"type": "Decimal"
																}
															},
															{
																"source": {
																	"name": "Freightdesc",
																	"type": "Decimal"
																},
																"sink": {
																	"name": "Freightdesc",
																	"type": "Decimal"
																}
															},
															{
																"source": {
																	"name": "Adhocdealermargin",
																	"type": "Decimal"
																},
																"sink": {
																	"name": "Adhocdealermargin",
																	"type": "Decimal"
																}
															},
															{
																"source": {
																	"name": "Dealermargin",
																	"type": "Decimal"
																},
																"sink": {
																	"name": "Dealermargin",
																	"type": "Decimal"
																}
															},
															{
																"source": {
																	"name": "Earlypayrebate",
																	"type": "Decimal"
																},
																"sink": {
																	"name": "Earlypayrebate",
																	"type": "Decimal"
																}
															},
															{
																"source": {
																	"name": "Cashdiscountmanual",
																	"type": "Decimal"
																},
																"sink": {
																	"name": "Cashdiscountmanual",
																	"type": "Decimal"
																}
															},
															{
																"source": {
																	"name": "Others",
																	"type": "Decimal"
																},
																"sink": {
																	"name": "Others",
																	"type": "Decimal"
																}
															},
															{
																"source": {
																	"name": "Exportcommission",
																	"type": "Decimal"
																},
																"sink": {
																	"name": "Exportcommission",
																	"type": "Decimal"
																}
															},
															{
																"source": {
																	"name": "Airfreight",
																	"type": "Decimal"
																},
																"sink": {
																	"name": "Airfreight",
																	"type": "Decimal"
																}
															},
															{
																"source": {
																	"name": "Pyqtydiscount",
																	"type": "Decimal"
																},
																"sink": {
																	"name": "Pyqtydiscount",
																	"type": "Decimal"
																}
															},
															{
																"source": {
																	"name": "Pyfreightdiscount",
																	"type": "Decimal"
																},
																"sink": {
																	"name": "Pyfreightdiscount",
																	"type": "Decimal"
																}
															},
															{
																"source": {
																	"name": "Pyearlypayrebate",
																	"type": "Decimal"
																},
																"sink": {
																	"name": "Pyearlypayrebate",
																	"type": "Decimal"
																}
															},
															{
																"source": {
																	"name": "Stategstininr",
																	"type": "Decimal"
																},
																"sink": {
																	"name": "Stategstininr",
																	"type": "Decimal"
																}
															},
															{
																"source": {
																	"name": "Integratedgstininr",
																	"type": "Decimal"
																},
																"sink": {
																	"name": "Integratedgstininr",
																	"type": "Decimal"
																}
															},
															{
																"source": {
																	"name": "Centralgstininr",
																	"type": "Decimal"
																},
																"sink": {
																	"name": "Centralgstininr",
																	"type": "Decimal"
																}
															},
															{
																"source": {
																	"name": "Stategst",
																	"type": "Decimal"
																},
																"sink": {
																	"name": "Stategst",
																	"type": "Decimal"
																}
															},
															{
																"source": {
																	"name": "Integratedgst",
																	"type": "Decimal"
																},
																"sink": {
																	"name": "Integratedgst",
																	"type": "Decimal"
																}
															},
															{
																"source": {
																	"name": "Centralgst",
																	"type": "Decimal"
																},
																"sink": {
																	"name": "Centralgst",
																	"type": "Decimal"
																}
															},
															{
																"source": {
																	"name": "Roundoff",
																	"type": "Decimal"
																},
																"sink": {
																	"name": "Roundoff",
																	"type": "Decimal"
																}
															},
															{
																"source": {
																	"name": "Sub",
																	"type": "Decimal"
																},
																"sink": {
																	"name": "Sub",
																	"type": "Decimal"
																}
															},
															{
																"source": {
																	"name": "Basicmaterial",
																	"type": "String"
																},
																"sink": {
																	"name": "Basicmaterial",
																	"type": "String"
																}
															},
															{
																"source": {
																	"name": "Duedate",
																	"type": "DateTime"
																},
																"sink": {
																	"name": "Duedate",
																	"type": "DateTime"
																}
															},
															{
																"source": {
																	"name": "Portcode",
																	"type": "String"
																},
																"sink": {
																	"name": "Portcode",
																	"type": "String"
																}
															},
															{
																"source": {
																	"name": "Shippingbillno",
																	"type": "String"
																},
																"sink": {
																	"name": "Shippingbillno",
																	"type": "String"
																}
															},
															{
																"source": {
																	"name": "Shippingbilldt",
																	"type": "DateTime"
																},
																"sink": {
																	"name": "Shippingbilldt",
																	"type": "DateTime"
																}
															},
															{
																"source": {
																	"name": "Fobvalue",
																	"type": "Decimal"
																},
																"sink": {
																	"name": "Fobvalue",
																	"type": "Decimal"
																}
															},
															{
																"source": {
																	"name": "Dispatchid",
																	"type": "String"
																},
																"sink": {
																	"name": "Dispatchid",
																	"type": "String"
																}
															},
															{
																"source": {
																	"name": "Dispatchdt",
																	"type": "DateTime"
																},
																"sink": {
																	"name": "Dispatchdt",
																	"type": "DateTime"
																}
															},
															{
																"source": {
																	"name": "Pdcchequeno",
																	"type": "String"
																},
																"sink": {
																	"name": "Pdcchequeno",
																	"type": "String"
																}
															},
															{
																"source": {
																	"name": "Pdcchequedate",
																	"type": "String"
																},
																"sink": {
																	"name": "Pdcchequedate",
																	"type": "String"
																}
															},
															{
																"source": {
																	"name": "Pdcchequeval",
																	"type": "Decimal"
																},
																"sink": {
																	"name": "Pdcchequeval",
																	"type": "Decimal"
																}
															},
															{
																"source": {
																	"name": "Pdcbankname",
																	"type": "String"
																},
																"sink": {
																	"name": "Pdcbankname",
																	"type": "String"
																}
															},
															{
																"source": {
																	"name": "Controlcode",
																	"type": "String"
																},
																"sink": {
																	"name": "Controlcode",
																	"type": "String"
																}
															},
															{
																"source": {
																	"name": "Einvirn",
																	"type": "String"
																},
																"sink": {
																	"name": "Einvirn",
																	"type": "String"
																}
															},
															{
																"source": {
																	"name": "Shippingcondition",
																	"type": "String"
																},
																"sink": {
																	"name": "Shippingcondition",
																	"type": "String"
																}
															},
															{
																"source": {
																	"name": "Containerid",
																	"type": "String"
																},
																"sink": {
																	"name": "Containerid",
																	"type": "String"
																}
															},
															{
																"source": {
																	"name": "Lrnumber",
																	"type": "String"
																},
																"sink": {
																	"name": "Lrnumber",
																	"type": "String"
																}
															}
														]
													}
												},
												"inputs": [
													{
														"referenceName": "DS_OData_SAP_HANA_QA",
														"type": "DatasetReference",
														"parameters": {}
													}
												],
												"outputs": [
													{
														"referenceName": "DS_AzureSqlTable_SalesInvoice",
														"type": "DatasetReference",
														"parameters": {}
													}
												]
											}
										],
										"ifTrueActivities": [
											{
												"name": "Set variable1",
												"type": "SetVariable",
												"dependsOn": [],
												"userProperties": [],
												"typeProperties": {
													"variableName": "flag",
													"value": {
														"value": "@bool('true')",
														"type": "Expression"
													}
												}
											}
										]
									}
								}
							],
							"timeout": "0.00:00:00"
						}
					},
					{
						"name": "startValuefomPipeline",
						"type": "SetVariable",
						"dependsOn": [
							{
								"activity": "delete old records",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"variableName": "startValue",
							"value": {
								"value": "@subtractFromTime(pipeline().parameters.P_StartDate, 1, 'Day')",
								"type": "Expression"
							}
						}
					},
					{
						"name": "updateWaterMark",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [
							{
								"activity": "New Watermark Time Value",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[dbo].[SP_update_watermark]",
							"storedProcedureParameters": {
								"TabName": {
									"value": "InvoiceSales",
									"type": "String"
								},
								"LastModifiedDate": {
									"value": {
										"value": "@activity('New Watermark Date Value').output.firstRow.maxDate",
										"type": "Expression"
									},
									"type": "Datetime"
								},
								"LastModifiedtime": {
									"value": {
										"value": "@activity('New Watermark Time Value').output.firstRow.maxTime",
										"type": "Expression"
									},
									"type": "Timespan"
								}
							}
						},
						"linkedServiceName": {
							"referenceName": "LS_AzureSqlDatabase",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "New Watermark Date Value",
						"type": "Lookup",
						"dependsOn": [
							{
								"activity": "Until1",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderQuery": {
									"value": "select MAX(Invoicecrdate ) as maxDate FROM [dbo].[InvoiceSales]",
									"type": "Expression"
								},
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "DS_AzureSqlTable",
								"type": "DatasetReference",
								"parameters": {}
							}
						}
					},
					{
						"name": "New Watermark Time Value",
						"type": "Lookup",
						"dependsOn": [
							{
								"activity": "New Watermark Date Value",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderQuery": {
									"value": "select MAX(Invoicecrtime) as maxTime FROM [dbo].[InvoiceSales] where Invoicecrdate= ( select MAX(Invoicecrdate ) FROM [dbo].[InvoiceSales])",
									"type": "Expression"
								},
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "DS_AzureSqlTable",
								"type": "DatasetReference",
								"parameters": {}
							}
						}
					},
					{
						"name": "Set variable2",
						"type": "SetVariable",
						"dependsOn": [],
						"userProperties": [],
						"typeProperties": {
							"variableName": "d_startdate",
							"value": {
								"value": "@substring(pipeline().parameters.P_StartDate,0,18)",
								"type": "Expression"
							}
						}
					},
					{
						"name": "Set variable2_copy1",
						"type": "SetVariable",
						"dependsOn": [
							{
								"activity": "Set variable2",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"variableName": "d_enddate",
							"value": {
								"value": "@substring(pipeline().parameters.P_EndDate,0,18)",
								"type": "Expression"
							}
						}
					},
					{
						"name": "delete old records",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [
							{
								"activity": "Set variable2_copy1",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[dbo].[SP_deleteRecords]",
							"storedProcedureParameters": {
								"D_StartDate": {
									"value": {
										"value": "@variables('d_startdate')",
										"type": "Expression"
									},
									"type": "String"
								},
								"D_EndDate": {
									"value": {
										"value": "@variables('d_enddate')",
										"type": "Expression"
									},
									"type": "String"
								}
							}
						},
						"linkedServiceName": {
							"referenceName": "LS_AzureSqlDatabase",
							"type": "LinkedServiceReference"
						}
					}
				],
				"parameters": {
					"P_StartDate": {
						"type": "string",
						"defaultValue": "2019-11-01T00:00:00Z"
					},
					"P_EndDate": {
						"type": "string",
						"defaultValue": "2021-07-25T00:00:00Z"
					}
				},
				"variables": {
					"flag": {
						"type": "Boolean",
						"defaultValue": false
					},
					"startValue": {
						"type": "String"
					},
					"fromDate": {
						"type": "String"
					},
					"fromDateRZ": {
						"type": "String"
					},
					"d_startdate": {
						"type": "String"
					},
					"d_enddate": {
						"type": "String"
					}
				},
				"folder": {
					"name": "QA"
				},
				"annotations": [],
				"lastPublishTime": "2021-07-28T08:19:05Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/LS_AzureSqlDatabase')]",
				"[concat(variables('factoryId'), '/datasets/DS_AzureSqlTable')]",
				"[concat(variables('factoryId'), '/datasets/DS_OData_SAP_HANA_QA')]",
				"[concat(variables('factoryId'), '/datasets/DS_AzureSqlTable_SalesInvoice')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/SalesInvoice_day_wise_oData_Dev_pipeline')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Until1",
						"type": "Until",
						"dependsOn": [
							{
								"activity": "startValuefomPipeline",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"expression": {
								"value": "@bool(variables('flag'))",
								"type": "Expression"
							},
							"activities": [
								{
									"name": "fromDate",
									"type": "SetVariable",
									"dependsOn": [],
									"userProperties": [],
									"typeProperties": {
										"variableName": "fromDate",
										"value": {
											"value": "@addToTime(variables('startValue'), 1, 'Day')",
											"type": "Expression"
										}
									}
								},
								{
									"name": "startValue",
									"type": "SetVariable",
									"dependsOn": [
										{
											"activity": "fromDate",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"userProperties": [],
									"typeProperties": {
										"variableName": "startValue",
										"value": {
											"value": "@variables('fromDate')",
											"type": "Expression"
										}
									}
								},
								{
									"name": "removeZ",
									"type": "SetVariable",
									"dependsOn": [
										{
											"activity": "fromDate",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"userProperties": [],
									"typeProperties": {
										"variableName": "fromDateRZ",
										"value": {
											"value": "@substring(variables('fromDate'), 0, 18)",
											"type": "Expression"
										}
									}
								},
								{
									"name": "If Condition2",
									"type": "IfCondition",
									"dependsOn": [
										{
											"activity": "removeZ",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"userProperties": [],
									"typeProperties": {
										"expression": {
											"value": "@if(equals(addHours(variables('fromDate'),0),addHours(pipeline().parameters.P_EndDate,0)) , 'true', 'false')",
											"type": "Expression"
										},
										"ifFalseActivities": [
											{
												"name": "copy to SQL",
												"type": "Copy",
												"dependsOn": [],
												"policy": {
													"timeout": "7.00:00:00",
													"retry": 0,
													"retryIntervalInSeconds": 30,
													"secureOutput": false,
													"secureInput": false
												},
												"userProperties": [],
												"typeProperties": {
													"source": {
														"type": "ODataSource",
														"query": {
															"value": "$filter=Invoicecrdate eq datetime'@{variables('fromDateRZ')}'",
															"type": "Expression"
														},
														"httpRequestTimeout": "00:05:00"
													},
													"sink": {
														"type": "AzureSqlSink",
														"writeBehavior": "insert"
													},
													"enableStaging": false
												},
												"inputs": [
													{
														"referenceName": "DS_ODataResource_hana",
														"type": "DatasetReference",
														"parameters": {}
													}
												],
												"outputs": [
													{
														"referenceName": "DS_AzureSqlTable",
														"type": "DatasetReference",
														"parameters": {}
													}
												]
											}
										],
										"ifTrueActivities": [
											{
												"name": "Set variable1",
												"type": "SetVariable",
												"dependsOn": [],
												"userProperties": [],
												"typeProperties": {
													"variableName": "flag",
													"value": {
														"value": "@bool('true')",
														"type": "Expression"
													}
												}
											}
										]
									}
								}
							],
							"timeout": "0.00:00:00"
						}
					},
					{
						"name": "startValuefomPipeline",
						"type": "SetVariable",
						"dependsOn": [],
						"userProperties": [],
						"typeProperties": {
							"variableName": "startValue",
							"value": {
								"value": "@pipeline().parameters.P_StartDate",
								"type": "Expression"
							}
						}
					}
				],
				"parameters": {
					"P_StartDate": {
						"type": "string",
						"defaultValue": "2019-11-01T00:00:00Z"
					},
					"P_EndDate": {
						"type": "string",
						"defaultValue": "2019-12-30T00:00:00Z"
					}
				},
				"variables": {
					"flag": {
						"type": "Boolean",
						"defaultValue": false
					},
					"startValue": {
						"type": "String"
					},
					"fromDate": {
						"type": "String"
					},
					"fromDateRZ": {
						"type": "String"
					}
				},
				"folder": {
					"name": "DEV"
				},
				"annotations": [],
				"lastPublishTime": "2021-07-24T12:32:07Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/DS_ODataResource_hana')]",
				"[concat(variables('factoryId'), '/datasets/DS_AzureSqlTable')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/pipeline1')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Lookup1",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "ODataSource",
								"query": "$filter=Invoicecrdate ge datetime'2021-07-15T00:00:00'",
								"httpRequestTimeout": "00:05:00"
							},
							"dataset": {
								"referenceName": "DS_ODataResource_hana",
								"type": "DatasetReference",
								"parameters": {}
							},
							"firstRowOnly": false
						}
					},
					{
						"name": "ForEach1",
						"type": "ForEach",
						"dependsOn": [
							{
								"activity": "Lookup1",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@activity('Lookup1').output.value",
								"type": "Expression"
							},
							"activities": [
								{
									"name": "Copy data1",
									"type": "Copy",
									"dependsOn": [],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "ODataSource",
											"query": {
												"value": "$filter=Invoicecrdate ge datetime'2021-07-15T00:00:00'",
												"type": "Expression"
											},
											"httpRequestTimeout": "00:05:00"
										},
										"sink": {
											"type": "AzureSqlSink",
											"writeBehavior": "insert"
										},
										"enableStaging": false
									},
									"inputs": [
										{
											"referenceName": "DS_ODataResource_hana",
											"type": "DatasetReference",
											"parameters": {}
										}
									],
									"outputs": [
										{
											"referenceName": "DS_AzureSqlTable",
											"type": "DatasetReference",
											"parameters": {}
										}
									]
								}
							]
						}
					}
				],
				"annotations": [],
				"lastPublishTime": "2021-07-20T13:10:04Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/DS_ODataResource_hana')]",
				"[concat(variables('factoryId'), '/datasets/DS_AzureSqlTable')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/pipelineZFI_PAYMENT')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Copy data1",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "SapHanaSource",
								"query": "select * from \"SAPHANADB\".\"ZFI_PAYMENT\"",
								"partitionOption": "None"
							},
							"sink": {
								"type": "AzureSqlSink",
								"writeBehavior": "insert",
								"tableOption": "autoCreate",
								"disableMetricsCollection": false
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "DS_SAPHANA_QA",
								"type": "DatasetReference",
								"parameters": {
									"SchemaName": "1",
									"TableName": "1"
								}
							}
						],
						"outputs": [
							{
								"referenceName": "DS_AzureSqlTable_copy1",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					}
				],
				"folder": {
					"name": "QA"
				},
				"annotations": [],
				"lastPublishTime": "2021-07-22T05:26:12Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/DS_SAPHANA_QA')]",
				"[concat(variables('factoryId'), '/datasets/DS_AzureSqlTable_copy1')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/testDynamicPerameter')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Set variable1",
						"type": "SetVariable",
						"dependsOn": [],
						"userProperties": [],
						"typeProperties": {
							"variableName": "valName",
							"value": {
								"value": "@pipeline().parameters.Name",
								"type": "Expression"
							}
						}
					}
				],
				"parameters": {
					"Name": {
						"type": "string"
					},
					"Last Name": {
						"type": "string"
					}
				},
				"variables": {
					"valName": {
						"type": "String"
					}
				},
				"folder": {
					"name": "DEV"
				},
				"annotations": [],
				"lastPublishTime": "2021-07-26T09:46:16Z"
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/testFailure')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Copy data1",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "Copy data2",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "DelimitedTextSource",
								"storeSettings": {
									"type": "AzureBlobFSReadSettings",
									"recursive": true,
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings"
								}
							},
							"sink": {
								"type": "AzureSqlSink",
								"writeBehavior": "insert"
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "DS_Copy_DelimitedText_datalake_copy1",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "DS_AzureSqlTable_copy1",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					},
					{
						"name": "Copy data2",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "DelimitedTextSource",
								"storeSettings": {
									"type": "AzureBlobFSReadSettings",
									"recursive": true,
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings"
								}
							},
							"sink": {
								"type": "AzureSqlSink",
								"writeBehavior": "insert"
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "DS_Copy_DelimitedText_datalake",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "DS_AzureSqlTable_copy1",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					},
					{
						"name": "Copy data2_copy1",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "Copy data1",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "DelimitedTextSource",
								"storeSettings": {
									"type": "AzureBlobFSReadSettings",
									"recursive": true,
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings"
								}
							},
							"sink": {
								"type": "AzureSqlSink",
								"writeBehavior": "insert"
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "DS_Copy_DelimitedText_datalake",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "DS_AzureSqlTable_copy1",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					}
				],
				"annotations": [],
				"lastPublishTime": "2021-07-25T16:33:26Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/DS_Copy_DelimitedText_datalake_copy1')]",
				"[concat(variables('factoryId'), '/datasets/DS_AzureSqlTable_copy1')]",
				"[concat(variables('factoryId'), '/datasets/DS_Copy_DelimitedText_datalake')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DS_AzureSqlTable')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "LS_AzureSqlDatabase",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [],
				"typeProperties": {
					"schema": "dbo",
					"table": "InvoiceSalesData2"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/LS_AzureSqlDatabase')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DS_AzureSqlTable_Dynmamic')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "LS_AzureSqlDatabase",
					"type": "LinkedServiceReference"
				},
				"parameters": {
					"SQLTableName": {
						"type": "string"
					}
				},
				"folder": {
					"name": "QA"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [
					{
						"name": "Billingdoc",
						"type": "nvarchar"
					},
					{
						"name": "Item",
						"type": "nvarchar"
					},
					{
						"name": "Companycode",
						"type": "nvarchar"
					},
					{
						"name": "Salesorg",
						"type": "nvarchar"
					},
					{
						"name": "Ewaybillno",
						"type": "nvarchar"
					},
					{
						"name": "Exportexinvno",
						"type": "nvarchar"
					},
					{
						"name": "Exportexinvdt",
						"type": "date"
					},
					{
						"name": "Accexchangerate",
						"type": "decimal",
						"precision": 18,
						"scale": 3
					},
					{
						"name": "Netvalue",
						"type": "decimal",
						"precision": 18,
						"scale": 3
					},
					{
						"name": "Doccurrency",
						"type": "nvarchar"
					},
					{
						"name": "Loccuramt",
						"type": "decimal",
						"precision": 18,
						"scale": 2
					},
					{
						"name": "Gstin",
						"type": "nvarchar"
					},
					{
						"name": "Region",
						"type": "nvarchar"
					},
					{
						"name": "Regionname",
						"type": "nvarchar"
					},
					{
						"name": "Regiondlvplant",
						"type": "nvarchar"
					},
					{
						"name": "Customerrefdate",
						"type": "date"
					},
					{
						"name": "Grossvalue",
						"type": "decimal",
						"precision": 18,
						"scale": 2
					},
					{
						"name": "Invoicedate",
						"type": "date"
					},
					{
						"name": "Invoicetime",
						"type": "time",
						"scale": 7
					},
					{
						"name": "Changedon",
						"type": "date"
					},
					{
						"name": "Businessplace",
						"type": "nvarchar"
					},
					{
						"name": "Plant",
						"type": "nvarchar"
					},
					{
						"name": "Plantdesc",
						"type": "nvarchar"
					},
					{
						"name": "Billingtype",
						"type": "nvarchar"
					},
					{
						"name": "Deldocno",
						"type": "nvarchar"
					},
					{
						"name": "Deldocdate",
						"type": "date"
					},
					{
						"name": "Orderno",
						"type": "nvarchar"
					},
					{
						"name": "Orderqunatity",
						"type": "decimal",
						"precision": 18,
						"scale": 0
					},
					{
						"name": "Ordercreatedtime",
						"type": "time",
						"scale": 7
					},
					{
						"name": "Requesteddeldate",
						"type": "date"
					},
					{
						"name": "Orderstatus",
						"type": "nvarchar"
					},
					{
						"name": "Salesordertype",
						"type": "nvarchar"
					},
					{
						"name": "Distchannel",
						"type": "nvarchar"
					},
					{
						"name": "Division",
						"type": "nvarchar"
					},
					{
						"name": "Customer",
						"type": "nvarchar"
					},
					{
						"name": "Customername",
						"type": "nvarchar"
					},
					{
						"name": "Customercountry",
						"type": "nvarchar"
					},
					{
						"name": "Customercountrydesc",
						"type": "nvarchar"
					},
					{
						"name": "Materialpricegrp",
						"type": "nvarchar"
					},
					{
						"name": "Materialpricegrpdesc",
						"type": "nvarchar"
					},
					{
						"name": "Material",
						"type": "nvarchar"
					},
					{
						"name": "Materialdes",
						"type": "nvarchar"
					},
					{
						"name": "Brand",
						"type": "nvarchar"
					},
					{
						"name": "Brandname",
						"type": "nvarchar"
					},
					{
						"name": "Productgroup",
						"type": "nvarchar"
					},
					{
						"name": "Productgrpdesc",
						"type": "nvarchar"
					},
					{
						"name": "Productheirarchy",
						"type": "nvarchar"
					},
					{
						"name": "Productheirarchydes",
						"type": "nvarchar"
					},
					{
						"name": "Materialtype",
						"type": "nvarchar"
					},
					{
						"name": "Materialgrp1",
						"type": "nvarchar"
					},
					{
						"name": "Materialgrp1des",
						"type": "nvarchar"
					},
					{
						"name": "Materialgrp2",
						"type": "nvarchar"
					},
					{
						"name": "Materialgrp2des",
						"type": "nvarchar"
					},
					{
						"name": "Materialgrp3",
						"type": "nvarchar"
					},
					{
						"name": "Materialgrp3des",
						"type": "nvarchar"
					},
					{
						"name": "Materialgrp4",
						"type": "nvarchar"
					},
					{
						"name": "Materialgrp4des",
						"type": "nvarchar"
					},
					{
						"name": "Materialgrp5",
						"type": "nvarchar"
					},
					{
						"name": "Materialgrp5des",
						"type": "nvarchar"
					},
					{
						"name": "Pckmatgrp",
						"type": "nvarchar"
					},
					{
						"name": "Pckmatgrpdes",
						"type": "nvarchar"
					},
					{
						"name": "Salesgrp",
						"type": "nvarchar"
					},
					{
						"name": "Salesgrpdes",
						"type": "nvarchar"
					},
					{
						"name": "Salesofc",
						"type": "nvarchar"
					},
					{
						"name": "Salesofcdes",
						"type": "nvarchar"
					},
					{
						"name": "Salesdistrict",
						"type": "nvarchar"
					},
					{
						"name": "Salesdistrictname",
						"type": "nvarchar"
					},
					{
						"name": "Orderpono",
						"type": "nvarchar"
					},
					{
						"name": "City",
						"type": "nvarchar"
					},
					{
						"name": "Crcontrolarea",
						"type": "nvarchar"
					},
					{
						"name": "Uom",
						"type": "nvarchar"
					},
					{
						"name": "Billoflanding",
						"type": "nvarchar"
					},
					{
						"name": "Invoicecrdate",
						"type": "date"
					},
					{
						"name": "Invoicecrtime",
						"type": "time",
						"scale": 7
					},
					{
						"name": "Invoicecruser",
						"type": "nvarchar"
					},
					{
						"name": "Invservrenddate",
						"type": "date"
					},
					{
						"name": "Ordercreateddate",
						"type": "date"
					},
					{
						"name": "Ordercreateduser",
						"type": "nvarchar"
					},
					{
						"name": "Oderpricingdate",
						"type": "date"
					},
					{
						"name": "Delcrdate",
						"type": "date"
					},
					{
						"name": "Delcrname",
						"type": "nvarchar"
					},
					{
						"name": "Delgoodsissue",
						"type": "date"
					},
					{
						"name": "Wholesaleid",
						"type": "nvarchar"
					},
					{
						"name": "Retailid",
						"type": "nvarchar"
					},
					{
						"name": "Meansoftrans",
						"type": "nvarchar"
					},
					{
						"name": "Meansoftransdesc",
						"type": "nvarchar"
					},
					{
						"name": "Vehicleno",
						"type": "nvarchar"
					},
					{
						"name": "Plannedgi",
						"type": "date"
					},
					{
						"name": "Shiptoparty",
						"type": "nvarchar"
					},
					{
						"name": "Shiptopartydesc",
						"type": "nvarchar"
					},
					{
						"name": "Exchangerate",
						"type": "decimal",
						"precision": 23,
						"scale": 2
					},
					{
						"name": "Orderreason",
						"type": "nvarchar"
					},
					{
						"name": "Shippingcountrycode",
						"type": "nvarchar"
					},
					{
						"name": "Shippingcountrydesc",
						"type": "nvarchar"
					},
					{
						"name": "Shippingcitycode",
						"type": "nvarchar"
					},
					{
						"name": "Countycode",
						"type": "nvarchar"
					},
					{
						"name": "Countydesc",
						"type": "nvarchar"
					},
					{
						"name": "Citycode",
						"type": "nvarchar"
					},
					{
						"name": "Citydesc",
						"type": "nvarchar"
					},
					{
						"name": "Customergrp",
						"type": "nvarchar"
					},
					{
						"name": "Customergrpdesc",
						"type": "nvarchar"
					},
					{
						"name": "Custpricinggrp",
						"type": "nvarchar"
					},
					{
						"name": "Custpricinggrpdesc",
						"type": "nvarchar"
					},
					{
						"name": "Reference",
						"type": "nvarchar"
					},
					{
						"name": "Referencebillno",
						"type": "nvarchar"
					},
					{
						"name": "Billedqtyinsku",
						"type": "decimal",
						"precision": 24,
						"scale": 2
					},
					{
						"name": "Leagalstatus",
						"type": "nvarchar"
					},
					{
						"name": "Stategsttax",
						"type": "decimal",
						"precision": 25,
						"scale": 2
					},
					{
						"name": "Centralgsttax",
						"type": "decimal",
						"precision": 25,
						"scale": 2
					},
					{
						"name": "Integrgsttax",
						"type": "decimal",
						"precision": 25,
						"scale": 2
					},
					{
						"name": "Gstvalueininr",
						"type": "decimal",
						"precision": 25,
						"scale": 2
					},
					{
						"name": "Netvalueinctaxininr",
						"type": "decimal",
						"precision": 25,
						"scale": 2
					},
					{
						"name": "Gstvalue",
						"type": "decimal",
						"precision": 25,
						"scale": 2
					},
					{
						"name": "Netvalueinctax",
						"type": "decimal",
						"precision": 25,
						"scale": 2
					},
					{
						"name": "Taxcode",
						"type": "nvarchar"
					},
					{
						"name": "Batch",
						"type": "nvarchar"
					},
					{
						"name": "Incoterms",
						"type": "nvarchar"
					},
					{
						"name": "Incotermname",
						"type": "nvarchar"
					},
					{
						"name": "Payterms",
						"type": "nvarchar"
					},
					{
						"name": "Paytremsdes",
						"type": "nvarchar"
					},
					{
						"name": "Usageindicator",
						"type": "nvarchar"
					},
					{
						"name": "Pricelisttype",
						"type": "nvarchar"
					},
					{
						"name": "Pricelistname",
						"type": "nvarchar"
					},
					{
						"name": "Taxtype",
						"type": "nvarchar"
					},
					{
						"name": "Pricingdate",
						"type": "date"
					},
					{
						"name": "Locationcode",
						"type": "nvarchar"
					},
					{
						"name": "Customerclass",
						"type": "nvarchar"
					},
					{
						"name": "Difference",
						"type": "decimal",
						"precision": 23,
						"scale": 2
					},
					{
						"name": "Businessarea",
						"type": "nvarchar"
					},
					{
						"name": "Profitcenter",
						"type": "nvarchar"
					},
					{
						"name": "Canceledstatus",
						"type": "bit"
					},
					{
						"name": "Taxcollectedsrc",
						"type": "decimal",
						"precision": 38,
						"scale": 2
					},
					{
						"name": "Specialdiscount",
						"type": "decimal",
						"precision": 38,
						"scale": 2
					},
					{
						"name": "Quantitydiscount",
						"type": "decimal",
						"precision": 38,
						"scale": 2
					},
					{
						"name": "Tradediscount",
						"type": "decimal",
						"precision": 38,
						"scale": 2
					},
					{
						"name": "Basicprice",
						"type": "decimal",
						"precision": 38,
						"scale": 2
					},
					{
						"name": "Basicpricedif",
						"type": "decimal",
						"precision": 38,
						"scale": 2
					},
					{
						"name": "Mrpprice",
						"type": "decimal",
						"precision": 38,
						"scale": 2
					},
					{
						"name": "Igsttax",
						"type": "decimal",
						"precision": 38,
						"scale": 2
					},
					{
						"name": "Freightdiscount",
						"type": "decimal",
						"precision": 38,
						"scale": 2
					},
					{
						"name": "Freightheader",
						"type": "decimal",
						"precision": 38,
						"scale": 2
					},
					{
						"name": "Freightdesc",
						"type": "decimal",
						"precision": 38,
						"scale": 2
					},
					{
						"name": "Adhocdealermargin",
						"type": "decimal",
						"precision": 38,
						"scale": 2
					},
					{
						"name": "Dealermargin",
						"type": "decimal",
						"precision": 38,
						"scale": 2
					},
					{
						"name": "Earlypayrebate",
						"type": "decimal",
						"precision": 38,
						"scale": 2
					},
					{
						"name": "Cashdiscountmanual",
						"type": "decimal",
						"precision": 38,
						"scale": 2
					},
					{
						"name": "Others",
						"type": "decimal",
						"precision": 38,
						"scale": 2
					},
					{
						"name": "Exportcommission",
						"type": "decimal",
						"precision": 38,
						"scale": 2
					},
					{
						"name": "Airfreight",
						"type": "decimal",
						"precision": 38,
						"scale": 2
					},
					{
						"name": "Pyqtydiscount",
						"type": "decimal",
						"precision": 38,
						"scale": 2
					},
					{
						"name": "Pyfreightdiscount",
						"type": "decimal",
						"precision": 38,
						"scale": 2
					},
					{
						"name": "Pyearlypayrebate",
						"type": "decimal",
						"precision": 38,
						"scale": 2
					},
					{
						"name": "Stategstininr",
						"type": "decimal",
						"precision": 38,
						"scale": 2
					},
					{
						"name": "Integratedgstininr",
						"type": "decimal",
						"precision": 38,
						"scale": 2
					},
					{
						"name": "Centralgstininr",
						"type": "decimal",
						"precision": 38,
						"scale": 2
					},
					{
						"name": "Stategst",
						"type": "decimal",
						"precision": 38,
						"scale": 2
					},
					{
						"name": "Integratedgst",
						"type": "decimal",
						"precision": 38,
						"scale": 2
					},
					{
						"name": "Centralgst",
						"type": "decimal",
						"precision": 38,
						"scale": 2
					},
					{
						"name": "Roundoff",
						"type": "decimal",
						"precision": 38,
						"scale": 2
					},
					{
						"name": "Sub",
						"type": "decimal",
						"precision": 38,
						"scale": 2
					},
					{
						"name": "Basicmaterial",
						"type": "nvarchar"
					},
					{
						"name": "Duedate",
						"type": "date"
					},
					{
						"name": "Portcode",
						"type": "nvarchar"
					},
					{
						"name": "Shippingbillno",
						"type": "nvarchar"
					},
					{
						"name": "Shippingbilldt",
						"type": "date"
					},
					{
						"name": "Fobvalue",
						"type": "decimal",
						"precision": 18,
						"scale": 2
					},
					{
						"name": "Dispatchid",
						"type": "nvarchar"
					},
					{
						"name": "Dispatchdt",
						"type": "date"
					},
					{
						"name": "Pdcchequeno",
						"type": "nvarchar"
					},
					{
						"name": "Pdcchequedate",
						"type": "nvarchar"
					},
					{
						"name": "Pdcchequeval",
						"type": "decimal",
						"precision": 18,
						"scale": 2
					},
					{
						"name": "Pdcbankname",
						"type": "nvarchar"
					},
					{
						"name": "Controlcode",
						"type": "nvarchar"
					},
					{
						"name": "Einvirn",
						"type": "nvarchar"
					},
					{
						"name": "Shippingcondition",
						"type": "nvarchar"
					},
					{
						"name": "Containerid",
						"type": "nvarchar"
					},
					{
						"name": "Lrnumber",
						"type": "nvarchar"
					}
				],
				"typeProperties": {
					"schema": "dbo",
					"table": {
						"value": "@dataset().SQLTableName",
						"type": "Expression"
					}
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/LS_AzureSqlDatabase')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DS_AzureSqlTable_SalesInvoice')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "LS_AzureSqlDatabase",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [
					{
						"name": "Billingdoc",
						"type": "nvarchar"
					},
					{
						"name": "Item",
						"type": "nvarchar"
					},
					{
						"name": "Companycode",
						"type": "nvarchar"
					},
					{
						"name": "Salesorg",
						"type": "nvarchar"
					},
					{
						"name": "Ewaybillno",
						"type": "nvarchar"
					},
					{
						"name": "Exportexinvno",
						"type": "nvarchar"
					},
					{
						"name": "Exportexinvdt",
						"type": "date"
					},
					{
						"name": "Accexchangerate",
						"type": "decimal",
						"precision": 18,
						"scale": 3
					},
					{
						"name": "Netvalue",
						"type": "decimal",
						"precision": 18,
						"scale": 3
					},
					{
						"name": "Doccurrency",
						"type": "nvarchar"
					},
					{
						"name": "Loccuramt",
						"type": "decimal",
						"precision": 18,
						"scale": 2
					},
					{
						"name": "Gstin",
						"type": "nvarchar"
					},
					{
						"name": "Region",
						"type": "nvarchar"
					},
					{
						"name": "Regionname",
						"type": "nvarchar"
					},
					{
						"name": "Regiondlvplant",
						"type": "nvarchar"
					},
					{
						"name": "Customerrefdate",
						"type": "date"
					},
					{
						"name": "Grossvalue",
						"type": "decimal",
						"precision": 18,
						"scale": 2
					},
					{
						"name": "Invoicedate",
						"type": "date"
					},
					{
						"name": "Invoicetime",
						"type": "time",
						"scale": 7
					},
					{
						"name": "Changedon",
						"type": "date"
					},
					{
						"name": "Businessplace",
						"type": "nvarchar"
					},
					{
						"name": "Plant",
						"type": "nvarchar"
					},
					{
						"name": "Plantdesc",
						"type": "nvarchar"
					},
					{
						"name": "Billingtype",
						"type": "nvarchar"
					},
					{
						"name": "Deldocno",
						"type": "nvarchar"
					},
					{
						"name": "Deldocdate",
						"type": "date"
					},
					{
						"name": "Orderno",
						"type": "nvarchar"
					},
					{
						"name": "Orderqunatity",
						"type": "decimal",
						"precision": 18,
						"scale": 0
					},
					{
						"name": "Ordercreatedtime",
						"type": "time",
						"scale": 7
					},
					{
						"name": "Requesteddeldate",
						"type": "date"
					},
					{
						"name": "Orderstatus",
						"type": "nvarchar"
					},
					{
						"name": "Salesordertype",
						"type": "nvarchar"
					},
					{
						"name": "Distchannel",
						"type": "nvarchar"
					},
					{
						"name": "Division",
						"type": "nvarchar"
					},
					{
						"name": "Customer",
						"type": "nvarchar"
					},
					{
						"name": "Customername",
						"type": "nvarchar"
					},
					{
						"name": "Customercountry",
						"type": "nvarchar"
					},
					{
						"name": "Customercountrydesc",
						"type": "nvarchar"
					},
					{
						"name": "Materialpricegrp",
						"type": "nvarchar"
					},
					{
						"name": "Materialpricegrpdesc",
						"type": "nvarchar"
					},
					{
						"name": "Material",
						"type": "nvarchar"
					},
					{
						"name": "Materialdes",
						"type": "nvarchar"
					},
					{
						"name": "Brand",
						"type": "nvarchar"
					},
					{
						"name": "Brandname",
						"type": "nvarchar"
					},
					{
						"name": "Productgroup",
						"type": "nvarchar"
					},
					{
						"name": "Productgrpdesc",
						"type": "nvarchar"
					},
					{
						"name": "Productheirarchy",
						"type": "nvarchar"
					},
					{
						"name": "Productheirarchydes",
						"type": "nvarchar"
					},
					{
						"name": "Materialtype",
						"type": "nvarchar"
					},
					{
						"name": "Materialgrp1",
						"type": "nvarchar"
					},
					{
						"name": "Materialgrp1des",
						"type": "nvarchar"
					},
					{
						"name": "Materialgrp2",
						"type": "nvarchar"
					},
					{
						"name": "Materialgrp2des",
						"type": "nvarchar"
					},
					{
						"name": "Materialgrp3",
						"type": "nvarchar"
					},
					{
						"name": "Materialgrp3des",
						"type": "nvarchar"
					},
					{
						"name": "Materialgrp4",
						"type": "nvarchar"
					},
					{
						"name": "Materialgrp4des",
						"type": "nvarchar"
					},
					{
						"name": "Materialgrp5",
						"type": "nvarchar"
					},
					{
						"name": "Materialgrp5des",
						"type": "nvarchar"
					},
					{
						"name": "Pckmatgrp",
						"type": "nvarchar"
					},
					{
						"name": "Pckmatgrpdes",
						"type": "nvarchar"
					},
					{
						"name": "Salesgrp",
						"type": "nvarchar"
					},
					{
						"name": "Salesgrpdes",
						"type": "nvarchar"
					},
					{
						"name": "Salesofc",
						"type": "nvarchar"
					},
					{
						"name": "Salesofcdes",
						"type": "nvarchar"
					},
					{
						"name": "Salesdistrict",
						"type": "nvarchar"
					},
					{
						"name": "Salesdistrictname",
						"type": "nvarchar"
					},
					{
						"name": "Orderpono",
						"type": "nvarchar"
					},
					{
						"name": "City",
						"type": "nvarchar"
					},
					{
						"name": "Crcontrolarea",
						"type": "nvarchar"
					},
					{
						"name": "Uom",
						"type": "nvarchar"
					},
					{
						"name": "Billoflanding",
						"type": "nvarchar"
					},
					{
						"name": "Invoicecrdate",
						"type": "date"
					},
					{
						"name": "Invoicecrtime",
						"type": "time",
						"scale": 7
					},
					{
						"name": "Invoicecruser",
						"type": "nvarchar"
					},
					{
						"name": "Invservrenddate",
						"type": "date"
					},
					{
						"name": "Ordercreateddate",
						"type": "date"
					},
					{
						"name": "Ordercreateduser",
						"type": "nvarchar"
					},
					{
						"name": "Oderpricingdate",
						"type": "date"
					},
					{
						"name": "Delcrdate",
						"type": "date"
					},
					{
						"name": "Delcrname",
						"type": "nvarchar"
					},
					{
						"name": "Delgoodsissue",
						"type": "date"
					},
					{
						"name": "Wholesaleid",
						"type": "nvarchar"
					},
					{
						"name": "Retailid",
						"type": "nvarchar"
					},
					{
						"name": "Meansoftrans",
						"type": "nvarchar"
					},
					{
						"name": "Meansoftransdesc",
						"type": "nvarchar"
					},
					{
						"name": "Vehicleno",
						"type": "nvarchar"
					},
					{
						"name": "Plannedgi",
						"type": "date"
					},
					{
						"name": "Shiptoparty",
						"type": "nvarchar"
					},
					{
						"name": "Shiptopartydesc",
						"type": "nvarchar"
					},
					{
						"name": "Exchangerate",
						"type": "decimal",
						"precision": 23,
						"scale": 2
					},
					{
						"name": "Orderreason",
						"type": "nvarchar"
					},
					{
						"name": "Shippingcountrycode",
						"type": "nvarchar"
					},
					{
						"name": "Shippingcountrydesc",
						"type": "nvarchar"
					},
					{
						"name": "Shippingcitycode",
						"type": "nvarchar"
					},
					{
						"name": "Countycode",
						"type": "nvarchar"
					},
					{
						"name": "Countydesc",
						"type": "nvarchar"
					},
					{
						"name": "Citycode",
						"type": "nvarchar"
					},
					{
						"name": "Citydesc",
						"type": "nvarchar"
					},
					{
						"name": "Customergrp",
						"type": "nvarchar"
					},
					{
						"name": "Customergrpdesc",
						"type": "nvarchar"
					},
					{
						"name": "Custpricinggrp",
						"type": "nvarchar"
					},
					{
						"name": "Custpricinggrpdesc",
						"type": "nvarchar"
					},
					{
						"name": "Reference",
						"type": "nvarchar"
					},
					{
						"name": "Referencebillno",
						"type": "nvarchar"
					},
					{
						"name": "Billedqtyinsku",
						"type": "decimal",
						"precision": 24,
						"scale": 2
					},
					{
						"name": "Leagalstatus",
						"type": "nvarchar"
					},
					{
						"name": "Stategsttax",
						"type": "decimal",
						"precision": 25,
						"scale": 2
					},
					{
						"name": "Centralgsttax",
						"type": "decimal",
						"precision": 25,
						"scale": 2
					},
					{
						"name": "Integrgsttax",
						"type": "decimal",
						"precision": 25,
						"scale": 2
					},
					{
						"name": "Gstvalueininr",
						"type": "decimal",
						"precision": 25,
						"scale": 2
					},
					{
						"name": "Netvalueinctaxininr",
						"type": "decimal",
						"precision": 25,
						"scale": 2
					},
					{
						"name": "Gstvalue",
						"type": "decimal",
						"precision": 25,
						"scale": 2
					},
					{
						"name": "Netvalueinctax",
						"type": "decimal",
						"precision": 25,
						"scale": 2
					},
					{
						"name": "Taxcode",
						"type": "nvarchar"
					},
					{
						"name": "Batch",
						"type": "nvarchar"
					},
					{
						"name": "Incoterms",
						"type": "nvarchar"
					},
					{
						"name": "Incotermname",
						"type": "nvarchar"
					},
					{
						"name": "Payterms",
						"type": "nvarchar"
					},
					{
						"name": "Paytremsdes",
						"type": "nvarchar"
					},
					{
						"name": "Usageindicator",
						"type": "nvarchar"
					},
					{
						"name": "Pricelisttype",
						"type": "nvarchar"
					},
					{
						"name": "Pricelistname",
						"type": "nvarchar"
					},
					{
						"name": "Taxtype",
						"type": "nvarchar"
					},
					{
						"name": "Pricingdate",
						"type": "date"
					},
					{
						"name": "Locationcode",
						"type": "nvarchar"
					},
					{
						"name": "Customerclass",
						"type": "nvarchar"
					},
					{
						"name": "Difference",
						"type": "decimal",
						"precision": 23,
						"scale": 2
					},
					{
						"name": "Businessarea",
						"type": "nvarchar"
					},
					{
						"name": "Profitcenter",
						"type": "nvarchar"
					},
					{
						"name": "Canceledstatus",
						"type": "bit"
					},
					{
						"name": "Taxcollectedsrc",
						"type": "decimal",
						"precision": 38,
						"scale": 2
					},
					{
						"name": "Specialdiscount",
						"type": "decimal",
						"precision": 38,
						"scale": 2
					},
					{
						"name": "Quantitydiscount",
						"type": "decimal",
						"precision": 38,
						"scale": 2
					},
					{
						"name": "Tradediscount",
						"type": "decimal",
						"precision": 38,
						"scale": 2
					},
					{
						"name": "Basicprice",
						"type": "decimal",
						"precision": 38,
						"scale": 2
					},
					{
						"name": "Basicpricedif",
						"type": "decimal",
						"precision": 38,
						"scale": 2
					},
					{
						"name": "Mrpprice",
						"type": "decimal",
						"precision": 38,
						"scale": 2
					},
					{
						"name": "Igsttax",
						"type": "decimal",
						"precision": 38,
						"scale": 2
					},
					{
						"name": "Freightdiscount",
						"type": "decimal",
						"precision": 38,
						"scale": 2
					},
					{
						"name": "Freightheader",
						"type": "decimal",
						"precision": 38,
						"scale": 2
					},
					{
						"name": "Freightdesc",
						"type": "decimal",
						"precision": 38,
						"scale": 2
					},
					{
						"name": "Adhocdealermargin",
						"type": "decimal",
						"precision": 38,
						"scale": 2
					},
					{
						"name": "Dealermargin",
						"type": "decimal",
						"precision": 38,
						"scale": 2
					},
					{
						"name": "Earlypayrebate",
						"type": "decimal",
						"precision": 38,
						"scale": 2
					},
					{
						"name": "Cashdiscountmanual",
						"type": "decimal",
						"precision": 38,
						"scale": 2
					},
					{
						"name": "Others",
						"type": "decimal",
						"precision": 38,
						"scale": 2
					},
					{
						"name": "Exportcommission",
						"type": "decimal",
						"precision": 38,
						"scale": 2
					},
					{
						"name": "Airfreight",
						"type": "decimal",
						"precision": 38,
						"scale": 2
					},
					{
						"name": "Pyqtydiscount",
						"type": "decimal",
						"precision": 38,
						"scale": 2
					},
					{
						"name": "Pyfreightdiscount",
						"type": "decimal",
						"precision": 38,
						"scale": 2
					},
					{
						"name": "Pyearlypayrebate",
						"type": "decimal",
						"precision": 38,
						"scale": 2
					},
					{
						"name": "Stategstininr",
						"type": "decimal",
						"precision": 38,
						"scale": 2
					},
					{
						"name": "Integratedgstininr",
						"type": "decimal",
						"precision": 38,
						"scale": 2
					},
					{
						"name": "Centralgstininr",
						"type": "decimal",
						"precision": 38,
						"scale": 2
					},
					{
						"name": "Stategst",
						"type": "decimal",
						"precision": 38,
						"scale": 2
					},
					{
						"name": "Integratedgst",
						"type": "decimal",
						"precision": 38,
						"scale": 2
					},
					{
						"name": "Centralgst",
						"type": "decimal",
						"precision": 38,
						"scale": 2
					},
					{
						"name": "Roundoff",
						"type": "decimal",
						"precision": 38,
						"scale": 2
					},
					{
						"name": "Sub",
						"type": "decimal",
						"precision": 38,
						"scale": 2
					},
					{
						"name": "Basicmaterial",
						"type": "nvarchar"
					},
					{
						"name": "Duedate",
						"type": "date"
					},
					{
						"name": "Portcode",
						"type": "nvarchar"
					},
					{
						"name": "Shippingbillno",
						"type": "nvarchar"
					},
					{
						"name": "Shippingbilldt",
						"type": "date"
					},
					{
						"name": "Fobvalue",
						"type": "decimal",
						"precision": 18,
						"scale": 2
					},
					{
						"name": "Dispatchid",
						"type": "nvarchar"
					},
					{
						"name": "Dispatchdt",
						"type": "date"
					},
					{
						"name": "Pdcchequeno",
						"type": "nvarchar"
					},
					{
						"name": "Pdcchequedate",
						"type": "nvarchar"
					},
					{
						"name": "Pdcchequeval",
						"type": "decimal",
						"precision": 18,
						"scale": 2
					},
					{
						"name": "Pdcbankname",
						"type": "nvarchar"
					},
					{
						"name": "Controlcode",
						"type": "nvarchar"
					},
					{
						"name": "Einvirn",
						"type": "nvarchar"
					},
					{
						"name": "Shippingcondition",
						"type": "nvarchar"
					},
					{
						"name": "Containerid",
						"type": "nvarchar"
					},
					{
						"name": "Lrnumber",
						"type": "nvarchar"
					}
				],
				"typeProperties": {
					"schema": "dbo",
					"table": "InvoiceSales"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/LS_AzureSqlDatabase')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DS_AzureSqlTable_SalesInvoice2')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "LS_AzureSqlDatabase",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [],
				"typeProperties": {
					"schema": "dbo",
					"table": "InvoiceSalesDataQA2"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/LS_AzureSqlDatabase')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DS_AzureSqlTable_copy1')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "LS_AzureSqlDatabase",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [],
				"typeProperties": {
					"schema": "dbo",
					"table": "Employee"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/LS_AzureSqlDatabase')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DS_Copy_DelimitedText_datalake')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "LS_AzureDataLakeStorage",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"fileName": "Invoice_Sales.csv",
						"folderPath": "InvoiceSales",
						"fileSystem": "sapdata"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/LS_AzureDataLakeStorage')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DS_Copy_DelimitedText_datalake_copy1')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "LS_AzureDataLakeStorage",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"fileName": "fail.csv",
						"folderPath": "input-data",
						"fileSystem": "datafactory-data"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/LS_AzureDataLakeStorage')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DS_Dynamic_SAP_QA_oData')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "oData_SAP_HANA_QA",
					"type": "LinkedServiceReference"
				},
				"parameters": {
					"SourceTable": {
						"type": "string"
					}
				},
				"annotations": [],
				"type": "ODataResource",
				"schema": [],
				"typeProperties": {
					"path": {
						"value": "@dataset().SourceTable",
						"type": "Expression"
					}
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/oData_SAP_HANA_QA')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DS_ODataResource_hana')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "OData_SAP_HANA",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "ODataResource",
				"schema": [],
				"typeProperties": {
					"path": "SalesDataSet"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/OData_SAP_HANA')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DS_OData_SAP_HANA_QA')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "oData_SAP_HANA_QA",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "ODataResource",
				"schema": [],
				"typeProperties": {
					"path": "SalesDataSet"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/oData_SAP_HANA_QA')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DS_SAPHANA_QA')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "LS_SapHana_QA",
					"type": "LinkedServiceReference"
				},
				"parameters": {
					"SchemaName": {
						"type": "string"
					},
					"TableName": {
						"type": "string"
					}
				},
				"annotations": [],
				"type": "SapHanaTable",
				"schema": [],
				"typeProperties": {
					"schema": "SAPHANADB",
					"table": "ZSDBILLCDS"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/LS_SapHana_QA')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DS_SAP_oData_InvoiceSales')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "LS_SAP_oData_InvoiceSales",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "QA/InvoiceSales"
				},
				"annotations": [],
				"type": "ODataResource",
				"schema": [],
				"typeProperties": {
					"path": "SalesDataSet"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/LS_SAP_oData_InvoiceSales')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DS_SAP_oData_PaymentDetails')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "LS_SAP_oData_PaymentDetails",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "QA/PaymentDetails"
				},
				"annotations": [],
				"type": "ODataResource",
				"schema": [],
				"typeProperties": {
					"path": "PaymentDetailsSet"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/LS_SAP_oData_PaymentDetails')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DS_SapHanaTable_DEV')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "LS_SapHana",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "SapHanaTable",
				"schema": [],
				"typeProperties": {}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/LS_SapHana')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/LS_AzureDataLakeStorage')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureBlobFS",
				"typeProperties": {
					"url": "[parameters('LS_AzureDataLakeStorage_properties_typeProperties_url')]",
					"accountKey": {
						"type": "SecureString",
						"value": "[parameters('LS_AzureDataLakeStorage_accountKey')]"
					}
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/LS_AzureSqlDatabase')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureSqlDatabase",
				"typeProperties": {
					"connectionString": "[parameters('LS_AzureSqlDatabase_connectionString')]"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/LS_SAP_oData_InvoiceSales')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "OData",
				"typeProperties": {
					"url": "[parameters('LS_SAP_oData_InvoiceSales_properties_typeProperties_url')]",
					"authenticationType": "Basic",
					"userName": "[parameters('LS_SAP_oData_InvoiceSales_properties_typeProperties_userName')]",
					"password": {
						"type": "SecureString",
						"value": "[parameters('LS_SAP_oData_InvoiceSales_password')]"
					}
				},
				"connectVia": {
					"referenceName": "integrationRuntime-SAP-HANA",
					"type": "IntegrationRuntimeReference"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/integrationRuntimes/integrationRuntime-SAP-HANA')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/LS_SAP_oData_PaymentDetails')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "OData",
				"typeProperties": {
					"url": "[parameters('LS_SAP_oData_PaymentDetails_properties_typeProperties_url')]",
					"authenticationType": "Basic",
					"userName": "[parameters('LS_SAP_oData_PaymentDetails_properties_typeProperties_userName')]",
					"password": {
						"type": "SecureString",
						"value": "[parameters('LS_SAP_oData_PaymentDetails_password')]"
					}
				},
				"connectVia": {
					"referenceName": "integrationRuntime-SAP-HANA",
					"type": "IntegrationRuntimeReference"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/integrationRuntimes/integrationRuntime-SAP-HANA')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/LS_SapHana')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "SapHana",
				"typeProperties": {
					"connectionString": "[parameters('LS_SapHana_connectionString')]"
				},
				"connectVia": {
					"referenceName": "integrationRuntime-SAP-HANA",
					"type": "IntegrationRuntimeReference"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/integrationRuntimes/integrationRuntime-SAP-HANA')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/LS_SapHana_QA')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "SapHana",
				"typeProperties": {
					"connectionString": "[parameters('LS_SapHana_QA_connectionString')]"
				},
				"connectVia": {
					"referenceName": "integrationRuntime-SAP-HANA",
					"type": "IntegrationRuntimeReference"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/integrationRuntimes/integrationRuntime-SAP-HANA')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/OData_SAP_HANA')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "OData",
				"typeProperties": {
					"url": "[parameters('OData_SAP_HANA_properties_typeProperties_url')]",
					"authenticationType": "Basic",
					"userName": "[parameters('OData_SAP_HANA_properties_typeProperties_userName')]",
					"password": {
						"type": "SecureString",
						"value": "[parameters('OData_SAP_HANA_password')]"
					}
				},
				"connectVia": {
					"referenceName": "integrationRuntime-SAP-HANA",
					"type": "IntegrationRuntimeReference"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/integrationRuntimes/integrationRuntime-SAP-HANA')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/oData_SAP_HANA_QA')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "OData",
				"typeProperties": {
					"url": "[parameters('oData_SAP_HANA_QA_properties_typeProperties_url')]",
					"authenticationType": "Basic",
					"userName": "[parameters('oData_SAP_HANA_QA_properties_typeProperties_userName')]",
					"password": {
						"type": "SecureString",
						"value": "[parameters('oData_SAP_HANA_QA_password')]"
					}
				},
				"connectVia": {
					"referenceName": "integrationRuntime-SAP-HANA",
					"type": "IntegrationRuntimeReference"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/integrationRuntimes/integrationRuntime-SAP-HANA')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/InvoiceSales_Delta_Daily_trigger')]",
			"type": "Microsoft.DataFactory/factories/triggers",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"runtimeState": "Started",
				"pipelines": [
					{
						"pipelineReference": {
							"referenceName": "PL_InvoiceSales_DELTA_oData_SQL",
							"type": "PipelineReference"
						},
						"parameters": {}
					}
				],
				"type": "ScheduleTrigger",
				"typeProperties": {
					"recurrence": {
						"frequency": "Day",
						"interval": 1,
						"startTime": "2021-07-29T20:00:00Z",
						"timeZone": "UTC",
						"schedule": {
							"minutes": [
								30
							],
							"hours": [
								18
							]
						}
					}
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/pipelines/PL_InvoiceSales_DELTA_oData_SQL')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/integrationRuntime-SAP-HANA')]",
			"type": "Microsoft.DataFactory/factories/integrationRuntimes",
			"apiVersion": "2018-06-01",
			"properties": {
				"type": "SelfHosted",
				"typeProperties": {}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/dataflow1')]",
			"type": "Microsoft.DataFactory/factories/dataflows",
			"apiVersion": "2018-06-01",
			"properties": {
				"type": "MappingDataFlow",
				"typeProperties": {
					"sources": [
						{
							"dataset": {
								"referenceName": "DS_Copy_DelimitedText_datalake",
								"type": "DatasetReference"
							},
							"name": "source1"
						}
					],
					"sinks": [
						{
							"dataset": {
								"referenceName": "DS_AzureSqlTable",
								"type": "DatasetReference"
							},
							"name": "sink1"
						}
					],
					"transformations": [
						{
							"name": "DerivedColumn1"
						}
					],
					"script": "source(output(\n\t\tCOMPANYCODE as string,\n\t\tSALESORG as string,\n\t\tBILLINGDOC as integer,\n\t\tITEM as short,\n\t\tEWAYBILLNO as string,\n\t\tEXPORTEXINVNO as string,\n\t\tEXPORTEXINVDT as string,\n\t\tACCEXCHANGERATE as double,\n\t\tNETVALUE as double,\n\t\tDOCCURRENCY as string,\n\t\tLOCCURAMT as double,\n\t\tGSTIN as string,\n\t\tREGION as string,\n\t\tREGIONNAME as string,\n\t\tREGIONDLVPLANT as string,\n\t\tCUSTOMERREFDATE as string,\n\t\tGROSSVALUE as double,\n\t\tINVOICEDATE as string,\n\t\tINVOICETIME as string,\n\t\tCHANGEDON as date,\n\t\tBUSINESSPLACE as string,\n\t\tPLANT as string,\n\t\tPLANTDESC as string,\n\t\tBILLINGTYPE as string,\n\t\tDELDOCNO as integer,\n\t\tDELDOCDATE as string,\n\t\tORDERNO as string,\n\t\tORDERQUNATITY as double,\n\t\tORDERCREATEDTIME as string,\n\t\tREQUESTEDDELDATE as string,\n\t\tORDERSTATUS as string,\n\t\tSALESORDERTYPE as string,\n\t\tDISTCHANNEL as string,\n\t\tDIVISION as string,\n\t\tCUSTOMER as integer,\n\t\tCUSTOMERNAME as string,\n\t\tCUSTOMERCOUNTRY as string,\n\t\tCUSTOMERCOUNTRYDESC as string,\n\t\tMATERIALPRICEGRP as string,\n\t\tMATERIALPRICEGRPDESC as string,\n\t\tMATERIAL as string,\n\t\tMATERIALDES as string,\n\t\tBRAND as string,\n\t\tBRANDNAME as string,\n\t\tPRODUCTGROUP as string,\n\t\tPRODUCTGRPDESC as string,\n\t\tPRODUCTHEIRARCHY as string,\n\t\tPRODUCTHEIRARCHYDES as string,\n\t\tMATERIALTYPE as string,\n\t\tMATERIALGRP1 as string,\n\t\tMATERIALGRP1DES as string,\n\t\tMATERIALGRP2 as string,\n\t\tMATERIALGRP2DES as string,\n\t\tMATERIALGRP3 as string,\n\t\tMATERIALGRP3DES as string,\n\t\tMATERIALGRP4 as string,\n\t\tMATERIALGRP4DES as string,\n\t\tMATERIALGRP5 as string,\n\t\tMATERIALGRP5DES as string,\n\t\tPCKMATGRP as string,\n\t\tPCKMATGRPDES as string,\n\t\tSALESGRP as string,\n\t\tSALESGRPDES as string,\n\t\tSALESOFC as string,\n\t\tSALESOFCDES as string,\n\t\tSALESDISTRICT as string,\n\t\tSALESDISTRICTNAME as string,\n\t\tORDERPONO as string,\n\t\tCITY as string,\n\t\tCRCONTROLAREA as short,\n\t\tUOM as string,\n\t\tBILLOFLANDING as string,\n\t\tINVOICECRDATE as string,\n\t\tINVOICECRTIME as string,\n\t\tINVOICECRUSER as string,\n\t\tINVSERVRENDDATE as string,\n\t\tORDERCREATEDDATE as string,\n\t\tORDERCREATEDUSER as string,\n\t\tODERPRICINGDATE as string,\n\t\tDELCRDATE as string,\n\t\tDELCRNAME as string,\n\t\tDELGOODSISSUE as string,\n\t\tWHOLESALEID as string,\n\t\tRETAILID as integer,\n\t\tMEANSOFTRANS as string,\n\t\tMEANSOFTRANSDESC as string,\n\t\tVEHICLENO as string,\n\t\tPLANNEDGI as string,\n\t\tSHIPTOPARTY as integer,\n\t\tSHIPTOPARTYDESC as string,\n\t\tEXCHANGERATE as double,\n\t\tORDERREASON as string,\n\t\tSHIPPINGCOUNTRYCODE as string,\n\t\tSHIPPINGCOUNTRYDESC as string,\n\t\tSHIPPINGCITYCODE as string,\n\t\tCOUNTYCODE as short,\n\t\tCOUNTYDESC as string,\n\t\tCITYCODE as string,\n\t\tCITYDESC as string,\n\t\tCUSTOMERGRP as short,\n\t\tCUSTOMERGRPDESC as string,\n\t\tCUSTPRICINGGRP as string,\n\t\tCUSTPRICINGGRPDESC as string,\n\t\tREFERENCE as long,\n\t\tREFERENCEBILLNO as string,\n\t\tBILLEDQTYINSKU as double,\n\t\tLEAGALSTATUS as string,\n\t\tSTATEGSTTAX as double,\n\t\tCENTRALGSTTAX as double,\n\t\tINTEGRGSTTAX as double,\n\t\tGSTVALUEININR as double,\n\t\tNETVALUEINCTAXININR as double,\n\t\tGSTVALUE as double,\n\t\tNETVALUEINCTAX as double,\n\t\tTAXCODE as string,\n\t\tBATCH as string,\n\t\tINCOTERMS as string,\n\t\tINCOTERMNAME as string,\n\t\tPAYTERMS as string,\n\t\tPAYTREMSDES as string,\n\t\tUSAGEINDICATOR as string,\n\t\tPRICELISTTYPE as short,\n\t\tPRICELISTNAME as string,\n\t\tTAXTYPE as string,\n\t\tPRICINGDATE as string,\n\t\tLOCATIONCODE as string,\n\t\tCUSTOMERCLASS as string,\n\t\tDIFFERENCE as double,\n\t\tBUSINESSAREA as string,\n\t\tPROFITCENTER as string,\n\t\tCANCELEDSTATUS as string,\n\t\tTAXCOLLECTEDSRC as double,\n\t\tSPECIALDISCOUNT as double,\n\t\tQUANTITYDISCOUNT as double,\n\t\tTRADEDISCOUNT as double,\n\t\tBASICPRICE as double,\n\t\tBASICPRICEDIF as double,\n\t\tMRPPRICE as double,\n\t\tIGSTTAX as double,\n\t\tFREIGHTDISCOUNT as double,\n\t\tFREIGHTHEADER as double,\n\t\tFREIGHTDESC as double,\n\t\tADHOCDEALERMARGIN as double,\n\t\tDEALERMARGIN as double,\n\t\tEARLYPAYREBATE as double,\n\t\tCASHDISCOUNTMANUAL as double,\n\t\tOTHERS as double,\n\t\tEXPORTCOMMISSION as double,\n\t\tAIRFREIGHT as double,\n\t\tPYQTYDISCOUNT as double,\n\t\tPYFREIGHTDISCOUNT as double,\n\t\tPYEARLYPAYREBATE as double,\n\t\tSTATEGSTININR as double,\n\t\tINTEGRATEDGSTININR as double,\n\t\tCENTRALGSTININR as double,\n\t\tSTATEGST as double,\n\t\tINTEGRATEDGST as double,\n\t\tCENTRALGST as double,\n\t\tROUNDOFF as double,\n\t\tBASICMATERIAL as string,\n\t\tDUEDATE as string,\n\t\tPORTCODE as string,\n\t\tSHIPPINGBILLNO as string,\n\t\tSHIPPINGBILLDT as string,\n\t\tFOBVALUE as double,\n\t\tDISPATCHID as string,\n\t\tDISPATCHDT as string,\n\t\tPDCCHEQUENO as string,\n\t\tPDCCHEQUEDATE as string,\n\t\tPDCCHEQUEVAL as double,\n\t\tPDCBANKNAME as string,\n\t\tCONTROLCODE as integer,\n\t\tEINVIRN as string,\n\t\tSHIPPINGCONDITION as short,\n\t\tCONTAINERID as string,\n\t\tLRNUMBER as string,\n\t\tSUB as double\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tignoreNoFilesFound: false) ~> source1\nsource1 derive(newInvoicecrdate = concat(toString(year((toDate(INVOICECRDATE)))), '-',toString(month(toDate(INVOICECRDATE))), '-', toString(dayOfMonth(toDate(INVOICECRDATE))) ),\n\t\tnewOderpricingdate = concat(toString(year((toDate(ODERPRICINGDATE)))), '-',toString(month(toDate(ODERPRICINGDATE))), '-', toString(dayOfMonth(toDate(ODERPRICINGDATE))) ),\n\t\tnewInvoicecrtime = INVOICECRTIME,\n\t\tnewCustomerrefdate = concat(toString(year((toDate(CUSTOMERREFDATE)))), '-',toString(month(toDate(CUSTOMERREFDATE))), '-', toString(dayOfMonth(toDate(CUSTOMERREFDATE))) ),\n\t\tnewInvoicedate = concat(toString(year((toDate(INVOICEDATE)))), '-',toString(month(toDate(INVOICEDATE))), '-', toString(dayOfMonth(toDate(INVOICEDATE))) ),\n\t\tnewInvoicetime = INVOICETIME,\n\t\tnewDeldocdate = concat(toString(year((toDate(DELDOCDATE)))), '-',toString(month(toDate(DELDOCDATE))), '-', toString(dayOfMonth(toDate(DELDOCDATE))) ),\n\t\tnewOrdercreatedtime = ORDERCREATEDTIME,\n\t\tnewRequesteddeldate = concat(toString(year((toDate(REQUESTEDDELDATE)))), '-',toString(month(toDate(REQUESTEDDELDATE))), '-', toString(dayOfMonth(toDate(REQUESTEDDELDATE))) ),\n\t\tnewInvservrenddate = concat(toString(year((toDate(INVSERVRENDDATE)))), '-',toString(month(toDate(INVSERVRENDDATE))), '-', toString(dayOfMonth(toDate(INVSERVRENDDATE))) ),\n\t\tnewOrdercreateddate = concat(toString(year((toDate(ORDERCREATEDDATE)))), '-',toString(month(toDate(ORDERCREATEDDATE))), '-', toString(dayOfMonth(toDate(ORDERCREATEDDATE))) ),\n\t\tnewDelcrdate = concat(toString(year((toDate(DELCRDATE)))), '-',toString(month(toDate(DELCRDATE))), '-', toString(dayOfMonth(toDate(DELCRDATE))) ),\n\t\tnewDelgoodsissue = concat(toString(year((toDate(DELGOODSISSUE)))), '-',toString(month(toDate(DELGOODSISSUE))), '-', toString(dayOfMonth(toDate(DELGOODSISSUE))) ),\n\t\tnewPlannedgi = concat(toString(year((toDate(PLANNEDGI)))), '-',toString(month(toDate(PLANNEDGI))), '-', toString(dayOfMonth(toDate(PLANNEDGI))) ),\n\t\tnewPricingdate = toDate('2020-04-01'),\n\t\tnewEXPORTEXINVDT = concat(toString(year((toDate(EXPORTEXINVDT)))), '-',toString(month(toDate(EXPORTEXINVDT))), '-', toString(dayOfMonth(toDate(EXPORTEXINVDT))) )) ~> DerivedColumn1\nDerivedColumn1 sink(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tdeletable:false,\n\tinsertable:true,\n\tupdateable:false,\n\tupsertable:false,\n\tformat: 'table',\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true,\n\tsaveOrder: 1,\n\terrorHandlingOption: 'stopOnFirstError',\n\tmapColumn(\n\t\tCOMPANYCODE,\n\t\tSALESORG,\n\t\tBILLINGDOC,\n\t\tITEM,\n\t\tEWAYBILLNO,\n\t\tEXPORTEXINVNO,\n\t\tEXPORTEXINVDT = newEXPORTEXINVDT,\n\t\tACCEXCHANGERATE,\n\t\tNETVALUE,\n\t\tDOCCURRENCY,\n\t\tLOCCURAMT,\n\t\tGSTIN,\n\t\tREGION,\n\t\tREGIONNAME,\n\t\tREGIONDLVPLANT,\n\t\tCUSTOMERREFDATE = newCustomerrefdate,\n\t\tGROSSVALUE,\n\t\tINVOICEDATE = newInvoicedate,\n\t\tINVOICETIME = newInvoicetime,\n\t\tCHANGEDON,\n\t\tBUSINESSPLACE,\n\t\tPLANT,\n\t\tPLANTDESC,\n\t\tBILLINGTYPE,\n\t\tDELDOCNO,\n\t\tDELDOCDATE = newDeldocdate,\n\t\tORDERNO,\n\t\tORDERQUNATITY,\n\t\tORDERCREATEDTIME = newOrdercreatedtime,\n\t\tREQUESTEDDELDATE = newRequesteddeldate,\n\t\tORDERSTATUS,\n\t\tSALESORDERTYPE,\n\t\tDISTCHANNEL,\n\t\tDIVISION,\n\t\tCUSTOMER,\n\t\tCUSTOMERNAME,\n\t\tCUSTOMERCOUNTRY,\n\t\tCUSTOMERCOUNTRYDESC,\n\t\tMATERIALPRICEGRP,\n\t\tMATERIALPRICEGRPDESC,\n\t\tMATERIAL,\n\t\tMATERIALDES,\n\t\tBRAND,\n\t\tBRANDNAME,\n\t\tPRODUCTGROUP,\n\t\tPRODUCTGRPDESC,\n\t\tPRODUCTHEIRARCHY,\n\t\tPRODUCTHEIRARCHYDES,\n\t\tMATERIALTYPE,\n\t\tMATERIALGRP1,\n\t\tMATERIALGRP1DES,\n\t\tMATERIALGRP2,\n\t\tMATERIALGRP2DES,\n\t\tMATERIALGRP3,\n\t\tMATERIALGRP3DES,\n\t\tMATERIALGRP4,\n\t\tMATERIALGRP4DES,\n\t\tMATERIALGRP5,\n\t\tMATERIALGRP5DES,\n\t\tPCKMATGRP,\n\t\tPCKMATGRPDES,\n\t\tSALESGRP,\n\t\tSALESGRPDES,\n\t\tSALESOFC,\n\t\tSALESOFCDES,\n\t\tSALESDISTRICT,\n\t\tSALESDISTRICTNAME,\n\t\tORDERPONO,\n\t\tCITY,\n\t\tCRCONTROLAREA,\n\t\tUOM,\n\t\tBILLOFLANDING,\n\t\tINVOICECRDATE = newInvoicecrdate,\n\t\tINVOICECRTIME = newInvoicecrtime,\n\t\tINVOICECRUSER,\n\t\tINVSERVRENDDATE = newInvservrenddate,\n\t\tORDERCREATEDDATE = newOrdercreateddate,\n\t\tORDERCREATEDUSER,\n\t\tODERPRICINGDATE = newOderpricingdate,\n\t\tDELCRDATE = newDelcrdate,\n\t\tDELCRNAME,\n\t\tDELGOODSISSUE = newDelgoodsissue,\n\t\tWHOLESALEID,\n\t\tRETAILID,\n\t\tMEANSOFTRANS,\n\t\tMEANSOFTRANSDESC,\n\t\tVEHICLENO,\n\t\tPLANNEDGI = newPlannedgi,\n\t\tSHIPTOPARTY,\n\t\tSHIPTOPARTYDESC,\n\t\tEXCHANGERATE,\n\t\tORDERREASON,\n\t\tSHIPPINGCOUNTRYCODE,\n\t\tSHIPPINGCOUNTRYDESC,\n\t\tSHIPPINGCITYCODE,\n\t\tCOUNTYCODE,\n\t\tCOUNTYDESC,\n\t\tCITYCODE,\n\t\tCITYDESC,\n\t\tCUSTOMERGRP,\n\t\tCUSTOMERGRPDESC,\n\t\tCUSTPRICINGGRP,\n\t\tCUSTPRICINGGRPDESC,\n\t\tREFERENCE,\n\t\tREFERENCEBILLNO,\n\t\tBILLEDQTYINSKU,\n\t\tLEAGALSTATUS,\n\t\tSTATEGSTTAX,\n\t\tCENTRALGSTTAX,\n\t\tINTEGRGSTTAX,\n\t\tGSTVALUEININR,\n\t\tNETVALUEINCTAXININR,\n\t\tGSTVALUE,\n\t\tNETVALUEINCTAX,\n\t\tTAXCODE,\n\t\tBATCH,\n\t\tINCOTERMS,\n\t\tINCOTERMNAME,\n\t\tPAYTERMS,\n\t\tPAYTREMSDES,\n\t\tUSAGEINDICATOR,\n\t\tPRICELISTTYPE,\n\t\tPRICELISTNAME,\n\t\tTAXTYPE,\n\t\tPRICINGDATE = newPricingdate,\n\t\tLOCATIONCODE,\n\t\tCUSTOMERCLASS,\n\t\tDIFFERENCE,\n\t\tBUSINESSAREA,\n\t\tPROFITCENTER,\n\t\tCANCELEDSTATUS,\n\t\tTAXCOLLECTEDSRC,\n\t\tSPECIALDISCOUNT,\n\t\tQUANTITYDISCOUNT,\n\t\tTRADEDISCOUNT,\n\t\tBASICPRICE,\n\t\tBASICPRICEDIF,\n\t\tMRPPRICE,\n\t\tIGSTTAX,\n\t\tFREIGHTDISCOUNT,\n\t\tFREIGHTHEADER,\n\t\tFREIGHTDESC,\n\t\tADHOCDEALERMARGIN,\n\t\tDEALERMARGIN,\n\t\tEARLYPAYREBATE,\n\t\tCASHDISCOUNTMANUAL,\n\t\tOTHERS,\n\t\tEXPORTCOMMISSION,\n\t\tAIRFREIGHT,\n\t\tPYQTYDISCOUNT,\n\t\tPYFREIGHTDISCOUNT,\n\t\tPYEARLYPAYREBATE,\n\t\tSTATEGSTININR,\n\t\tINTEGRATEDGSTININR,\n\t\tCENTRALGSTININR,\n\t\tSTATEGST,\n\t\tINTEGRATEDGST,\n\t\tCENTRALGST,\n\t\tROUNDOFF,\n\t\tBASICMATERIAL,\n\t\tDUEDATE,\n\t\tPORTCODE,\n\t\tSHIPPINGBILLNO,\n\t\tSHIPPINGBILLDT,\n\t\tFOBVALUE,\n\t\tDISPATCHID,\n\t\tDISPATCHDT,\n\t\tPDCCHEQUENO,\n\t\tPDCCHEQUEDATE,\n\t\tPDCCHEQUEVAL,\n\t\tPDCBANKNAME,\n\t\tCONTROLCODE,\n\t\tEINVIRN,\n\t\tSHIPPINGCONDITION,\n\t\tCONTAINERID,\n\t\tLRNUMBER,\n\t\tSUB\n\t)) ~> sink1"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/DS_Copy_DelimitedText_datalake')]",
				"[concat(variables('factoryId'), '/datasets/DS_AzureSqlTable')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/dataflow2')]",
			"type": "Microsoft.DataFactory/factories/dataflows",
			"apiVersion": "2018-06-01",
			"properties": {
				"type": "MappingDataFlow",
				"typeProperties": {
					"sources": [
						{
							"dataset": {
								"referenceName": "DS_Copy_DelimitedText_datalake_copy1",
								"type": "DatasetReference"
							},
							"name": "source1"
						}
					],
					"sinks": [
						{
							"dataset": {
								"referenceName": "DS_AzureSqlTable",
								"type": "DatasetReference"
							},
							"name": "sink1"
						}
					],
					"transformations": [],
					"script": "source(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tignoreNoFilesFound: false,\n\tdateFormats: ['yyyy-MM-dd'],\n\ttimestampFormats: ['yyyy-MM-dd\\'T\\'HH:mm:ss\\'Z\\'']) ~> source1\nsource1 sink(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tdeletable:false,\n\tinsertable:true,\n\tupdateable:false,\n\tupsertable:false,\n\tformat: 'table',\n\tdateFormat:'yyyy-MM-dd',\n\ttimestampFormat:'yyyy-MM-dd\\'T\\'HH:mm:ss',\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true,\n\terrorHandlingOption: 'stopOnFirstError') ~> sink1"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/DS_Copy_DelimitedText_datalake_copy1')]",
				"[concat(variables('factoryId'), '/datasets/DS_AzureSqlTable')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/dataflow3')]",
			"type": "Microsoft.DataFactory/factories/dataflows",
			"apiVersion": "2018-06-01",
			"properties": {
				"type": "MappingDataFlow",
				"typeProperties": {
					"sources": [
						{
							"dataset": {
								"referenceName": "DS_Copy_DelimitedText_datalake_copy1",
								"type": "DatasetReference"
							},
							"name": "source1"
						}
					],
					"sinks": [
						{
							"dataset": {
								"referenceName": "DS_AzureSqlTable",
								"type": "DatasetReference"
							},
							"name": "sink1"
						}
					],
					"transformations": [
						{
							"name": "DerivedColumn1"
						}
					],
					"script": "source(output(\n\t\tCOMPANYCODE as string,\n\t\tSALESORG as string,\n\t\tBILLINGDOC as integer,\n\t\tITEM as short,\n\t\tEWAYBILLNO as string,\n\t\tEXPORTEXINVNO as string,\n\t\tEXPORTEXINVDT as string,\n\t\tACCEXCHANGERATE as double,\n\t\tNETVALUE as double,\n\t\tDOCCURRENCY as string,\n\t\tLOCCURAMT as double,\n\t\tGSTIN as string,\n\t\tREGION as string,\n\t\tREGIONNAME as string,\n\t\tREGIONDLVPLANT as string,\n\t\tCUSTOMERREFDATE as string,\n\t\tGROSSVALUE as double,\n\t\tINVOICEDATE as string,\n\t\tINVOICETIME as string,\n\t\tCHANGEDON as string,\n\t\tBUSINESSPLACE as string,\n\t\tPLANT as string,\n\t\tPLANTDESC as string,\n\t\tBILLINGTYPE as string,\n\t\tDELDOCNO as integer,\n\t\tDELDOCDATE as string,\n\t\tORDERNO as string,\n\t\tORDERQUNATITY as double,\n\t\tORDERCREATEDTIME as string,\n\t\tREQUESTEDDELDATE as string,\n\t\tORDERSTATUS as string,\n\t\tSALESORDERTYPE as string,\n\t\tDISTCHANNEL as string,\n\t\tDIVISION as string,\n\t\tCUSTOMER as integer,\n\t\tCUSTOMERNAME as string,\n\t\tCUSTOMERCOUNTRY as string,\n\t\tCUSTOMERCOUNTRYDESC as string,\n\t\tMATERIALPRICEGRP as string,\n\t\tMATERIALPRICEGRPDESC as string,\n\t\tMATERIAL as string,\n\t\tMATERIALDES as string,\n\t\tBRAND as string,\n\t\tBRANDNAME as string,\n\t\tPRODUCTGROUP as string,\n\t\tPRODUCTGRPDESC as string,\n\t\tPRODUCTHEIRARCHY as string,\n\t\tPRODUCTHEIRARCHYDES as string,\n\t\tMATERIALTYPE as string,\n\t\tMATERIALGRP1 as string,\n\t\tMATERIALGRP1DES as string,\n\t\tMATERIALGRP2 as string,\n\t\tMATERIALGRP2DES as string,\n\t\tMATERIALGRP3 as string,\n\t\tMATERIALGRP3DES as string,\n\t\tMATERIALGRP4 as string,\n\t\tMATERIALGRP4DES as string,\n\t\tMATERIALGRP5 as string,\n\t\tMATERIALGRP5DES as string,\n\t\tPCKMATGRP as string,\n\t\tPCKMATGRPDES as string,\n\t\tSALESGRP as string,\n\t\tSALESGRPDES as string,\n\t\tSALESOFC as string,\n\t\tSALESOFCDES as string,\n\t\tSALESDISTRICT as string,\n\t\tSALESDISTRICTNAME as string,\n\t\tORDERPONO as string,\n\t\tCITY as string,\n\t\tCRCONTROLAREA as short,\n\t\tUOM as string,\n\t\tBILLOFLANDING as string,\n\t\tINVOICECRDATE as string,\n\t\tINVOICECRTIME as string,\n\t\tINVOICECRUSER as string,\n\t\tINVSERVRENDDATE as string,\n\t\tORDERCREATEDDATE as string,\n\t\tORDERCREATEDUSER as string,\n\t\tODERPRICINGDATE as string,\n\t\tDELCRDATE as string,\n\t\tDELCRNAME as string,\n\t\tDELGOODSISSUE as string,\n\t\tWHOLESALEID as string,\n\t\tRETAILID as integer,\n\t\tMEANSOFTRANS as string,\n\t\tMEANSOFTRANSDESC as string,\n\t\tVEHICLENO as string,\n\t\tPLANNEDGI as string,\n\t\tSHIPTOPARTY as integer,\n\t\tSHIPTOPARTYDESC as string,\n\t\tEXCHANGERATE as double,\n\t\tORDERREASON as string,\n\t\tSHIPPINGCOUNTRYCODE as string,\n\t\tSHIPPINGCOUNTRYDESC as string,\n\t\tSHIPPINGCITYCODE as string,\n\t\tCOUNTYCODE as short,\n\t\tCOUNTYDESC as string,\n\t\tCITYCODE as string,\n\t\tCITYDESC as string,\n\t\tCUSTOMERGRP as short,\n\t\tCUSTOMERGRPDESC as string,\n\t\tCUSTPRICINGGRP as string,\n\t\tCUSTPRICINGGRPDESC as string,\n\t\tREFERENCE as long,\n\t\tREFERENCEBILLNO as string,\n\t\tBILLEDQTYINSKU as double,\n\t\tLEAGALSTATUS as string,\n\t\tSTATEGSTTAX as double,\n\t\tCENTRALGSTTAX as double,\n\t\tINTEGRGSTTAX as double,\n\t\tGSTVALUEININR as double,\n\t\tNETVALUEINCTAXININR as double,\n\t\tGSTVALUE as double,\n\t\tNETVALUEINCTAX as double,\n\t\tTAXCODE as string,\n\t\tBATCH as string,\n\t\tINCOTERMS as string,\n\t\tINCOTERMNAME as string,\n\t\tPAYTERMS as string,\n\t\tPAYTREMSDES as string,\n\t\tUSAGEINDICATOR as string,\n\t\tPRICELISTTYPE as short,\n\t\tPRICELISTNAME as string,\n\t\tTAXTYPE as string,\n\t\tPRICINGDATE as string,\n\t\tLOCATIONCODE as string,\n\t\tCUSTOMERCLASS as string,\n\t\tDIFFERENCE as double,\n\t\tBUSINESSAREA as string,\n\t\tPROFITCENTER as string,\n\t\tCANCELEDSTATUS as string,\n\t\tTAXCOLLECTEDSRC as double,\n\t\tSPECIALDISCOUNT as double,\n\t\tQUANTITYDISCOUNT as double,\n\t\tTRADEDISCOUNT as double,\n\t\tBASICPRICE as double,\n\t\tBASICPRICEDIF as double,\n\t\tMRPPRICE as double,\n\t\tIGSTTAX as double,\n\t\tFREIGHTDISCOUNT as double,\n\t\tFREIGHTHEADER as double,\n\t\tFREIGHTDESC as double,\n\t\tADHOCDEALERMARGIN as double,\n\t\tDEALERMARGIN as double,\n\t\tEARLYPAYREBATE as double,\n\t\tCASHDISCOUNTMANUAL as double,\n\t\tOTHERS as double,\n\t\tEXPORTCOMMISSION as double,\n\t\tAIRFREIGHT as double,\n\t\tPYQTYDISCOUNT as double,\n\t\tPYFREIGHTDISCOUNT as double,\n\t\tPYEARLYPAYREBATE as double,\n\t\tSTATEGSTININR as double,\n\t\tINTEGRATEDGSTININR as double,\n\t\tCENTRALGSTININR as double,\n\t\tSTATEGST as double,\n\t\tINTEGRATEDGST as double,\n\t\tCENTRALGST as double,\n\t\tROUNDOFF as double,\n\t\tBASICMATERIAL as string,\n\t\tDUEDATE as string,\n\t\tPORTCODE as string,\n\t\tSHIPPINGBILLNO as string,\n\t\tSHIPPINGBILLDT as string,\n\t\tFOBVALUE as double,\n\t\tDISPATCHID as string,\n\t\tDISPATCHDT as string,\n\t\tPDCCHEQUENO as string,\n\t\tPDCCHEQUEDATE as string,\n\t\tPDCCHEQUEVAL as double,\n\t\tPDCBANKNAME as string,\n\t\tCONTROLCODE as integer,\n\t\tEINVIRN as string,\n\t\tSHIPPINGCONDITION as short,\n\t\tCONTAINERID as string,\n\t\tLRNUMBER as string,\n\t\tSUB as double\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tignoreNoFilesFound: false,\n\tdateFormats: ['yyyy-MM-dd'],\n\ttimestampFormats: ['yyyy-MM-dd\\'T\\'HH:mm:ss']) ~> source1\nsource1 derive(newdate1 = toDate(INVOICEDATE, 'dd/MM/yyyy')) ~> DerivedColumn1\nDerivedColumn1 sink(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tdeletable:false,\n\tinsertable:true,\n\tupdateable:false,\n\tupsertable:false,\n\tformat: 'table',\n\tdateFormat:'yyyy-MM-dd',\n\ttimestampFormat:'yyyy-MM-dd\\'T\\'HH:mm:ss',\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true,\n\tsaveOrder: 1,\n\terrorHandlingOption: 'stopOnFirstError',\n\tmapColumn(\n\t\tCOMPANYCODE,\n\t\tSALESORG,\n\t\tBILLINGDOC,\n\t\tITEM,\n\t\tEWAYBILLNO,\n\t\tEXPORTEXINVNO,\n\t\tEXPORTEXINVDT,\n\t\tACCEXCHANGERATE,\n\t\tNETVALUE,\n\t\tDOCCURRENCY,\n\t\tLOCCURAMT,\n\t\tGSTIN,\n\t\tREGION,\n\t\tREGIONNAME,\n\t\tREGIONDLVPLANT,\n\t\tCUSTOMERREFDATE,\n\t\tGROSSVALUE,\n\t\tINVOICEDATE = newdate1,\n\t\tINVOICETIME,\n\t\tCHANGEDON,\n\t\tBUSINESSPLACE,\n\t\tPLANT,\n\t\tPLANTDESC,\n\t\tBILLINGTYPE,\n\t\tDELDOCNO,\n\t\tDELDOCDATE,\n\t\tORDERNO,\n\t\tORDERQUNATITY,\n\t\tORDERCREATEDTIME,\n\t\tREQUESTEDDELDATE,\n\t\tORDERSTATUS,\n\t\tSALESORDERTYPE,\n\t\tDISTCHANNEL,\n\t\tDIVISION,\n\t\tCUSTOMER,\n\t\tCUSTOMERNAME,\n\t\tCUSTOMERCOUNTRY,\n\t\tCUSTOMERCOUNTRYDESC,\n\t\tMATERIALPRICEGRP,\n\t\tMATERIALPRICEGRPDESC,\n\t\tMATERIAL,\n\t\tMATERIALDES,\n\t\tBRAND,\n\t\tBRANDNAME,\n\t\tPRODUCTGROUP,\n\t\tPRODUCTGRPDESC,\n\t\tPRODUCTHEIRARCHY,\n\t\tPRODUCTHEIRARCHYDES,\n\t\tMATERIALTYPE,\n\t\tMATERIALGRP1,\n\t\tMATERIALGRP1DES,\n\t\tMATERIALGRP2,\n\t\tMATERIALGRP2DES,\n\t\tMATERIALGRP3,\n\t\tMATERIALGRP3DES,\n\t\tMATERIALGRP4,\n\t\tMATERIALGRP4DES,\n\t\tMATERIALGRP5,\n\t\tMATERIALGRP5DES,\n\t\tPCKMATGRP,\n\t\tPCKMATGRPDES,\n\t\tSALESGRP,\n\t\tSALESGRPDES,\n\t\tSALESOFC,\n\t\tSALESOFCDES,\n\t\tSALESDISTRICT,\n\t\tSALESDISTRICTNAME,\n\t\tORDERPONO,\n\t\tCITY,\n\t\tCRCONTROLAREA,\n\t\tUOM,\n\t\tBILLOFLANDING,\n\t\tINVOICECRDATE,\n\t\tINVOICECRTIME,\n\t\tINVOICECRUSER,\n\t\tINVSERVRENDDATE,\n\t\tORDERCREATEDDATE,\n\t\tORDERCREATEDUSER,\n\t\tODERPRICINGDATE,\n\t\tDELCRDATE,\n\t\tDELCRNAME,\n\t\tDELGOODSISSUE,\n\t\tWHOLESALEID,\n\t\tRETAILID,\n\t\tMEANSOFTRANS,\n\t\tMEANSOFTRANSDESC,\n\t\tVEHICLENO,\n\t\tPLANNEDGI,\n\t\tSHIPTOPARTY,\n\t\tSHIPTOPARTYDESC,\n\t\tEXCHANGERATE,\n\t\tORDERREASON,\n\t\tSHIPPINGCOUNTRYCODE,\n\t\tSHIPPINGCOUNTRYDESC,\n\t\tSHIPPINGCITYCODE,\n\t\tCOUNTYCODE,\n\t\tCOUNTYDESC,\n\t\tCITYCODE,\n\t\tCITYDESC,\n\t\tCUSTOMERGRP,\n\t\tCUSTOMERGRPDESC,\n\t\tCUSTPRICINGGRP,\n\t\tCUSTPRICINGGRPDESC,\n\t\tREFERENCE,\n\t\tREFERENCEBILLNO,\n\t\tBILLEDQTYINSKU,\n\t\tLEAGALSTATUS,\n\t\tSTATEGSTTAX,\n\t\tCENTRALGSTTAX,\n\t\tINTEGRGSTTAX,\n\t\tGSTVALUEININR,\n\t\tNETVALUEINCTAXININR,\n\t\tGSTVALUE,\n\t\tNETVALUEINCTAX,\n\t\tTAXCODE,\n\t\tBATCH,\n\t\tINCOTERMS,\n\t\tINCOTERMNAME,\n\t\tPAYTERMS,\n\t\tPAYTREMSDES,\n\t\tUSAGEINDICATOR,\n\t\tPRICELISTTYPE,\n\t\tPRICELISTNAME,\n\t\tTAXTYPE,\n\t\tPRICINGDATE,\n\t\tLOCATIONCODE,\n\t\tCUSTOMERCLASS,\n\t\tDIFFERENCE,\n\t\tBUSINESSAREA,\n\t\tPROFITCENTER,\n\t\tCANCELEDSTATUS,\n\t\tTAXCOLLECTEDSRC,\n\t\tSPECIALDISCOUNT,\n\t\tQUANTITYDISCOUNT,\n\t\tTRADEDISCOUNT,\n\t\tBASICPRICE,\n\t\tBASICPRICEDIF,\n\t\tMRPPRICE,\n\t\tIGSTTAX,\n\t\tFREIGHTDISCOUNT,\n\t\tFREIGHTHEADER,\n\t\tFREIGHTDESC,\n\t\tADHOCDEALERMARGIN,\n\t\tDEALERMARGIN,\n\t\tEARLYPAYREBATE,\n\t\tCASHDISCOUNTMANUAL,\n\t\tOTHERS,\n\t\tEXPORTCOMMISSION,\n\t\tAIRFREIGHT,\n\t\tPYQTYDISCOUNT,\n\t\tPYFREIGHTDISCOUNT,\n\t\tPYEARLYPAYREBATE,\n\t\tSTATEGSTININR,\n\t\tINTEGRATEDGSTININR,\n\t\tCENTRALGSTININR,\n\t\tSTATEGST,\n\t\tINTEGRATEDGST,\n\t\tCENTRALGST,\n\t\tROUNDOFF,\n\t\tBASICMATERIAL,\n\t\tDUEDATE,\n\t\tPORTCODE,\n\t\tSHIPPINGBILLNO,\n\t\tSHIPPINGBILLDT,\n\t\tFOBVALUE,\n\t\tDISPATCHID,\n\t\tDISPATCHDT,\n\t\tPDCCHEQUENO,\n\t\tPDCCHEQUEDATE,\n\t\tPDCCHEQUEVAL,\n\t\tPDCBANKNAME,\n\t\tCONTROLCODE,\n\t\tEINVIRN,\n\t\tSHIPPINGCONDITION,\n\t\tCONTAINERID,\n\t\tLRNUMBER,\n\t\tSUB\n\t)) ~> sink1"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/DS_Copy_DelimitedText_datalake_copy1')]",
				"[concat(variables('factoryId'), '/datasets/DS_AzureSqlTable')]"
			]
		}
	]
}